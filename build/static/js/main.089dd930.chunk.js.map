{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","config.js","polyfill.js","components/UnauthenticatedRoute/UnauthenticatedRoute.js","Common/Auth/UserDetails.js","App.js","serviceWorker.js","index.js"],"names":["AuthenticatedRoute","_ref","component","C","appProps","rest","React","createElement","Route","Object","assign","render","props","isAuthenticated","Redirect","to","concat","location","pathname","search","apiGateway","NAME","REGION","URL","cognito","USER_POOL_ID","AUTH_URL","REDIRECT_URL","APP_CLIENT_ID","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","UnauthenticatedRoute","redirect","name","url","arguments","length","href","replace","regex","RegExp","results","exec","decodeURIComponent","querystring","NewTemp","userGroups","userInfo","isAuthed","async","GetUserDetails","temp","currentSession","Auth","getAccessToken","payload","currentSessionInfo","getIdToken","currentUser","currentAuthenticatedUser","userdetails","JSON","parse","pool","storage","config","username","userAttributes","UserAttributes","map","i","c","currentUserDetails","id","email","emailVerified","email_verified","phone","phone_number","phoneVerified","phone_number_verified","e","alert","withRouter","userDetails","setUserDetails","useState","userHasAuthenticated","useEffect","updateAuthStatus","onLoad","status","DefaultLayout","lazy","Login","Register","RegisterVendor","Page404","Page500","onLogout","console","log","signOut","then","data","catch","err","BrowserRouter","Suspense","fallback","className","Switch","exact","path","Boolean","hostname","match","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","IDENTITY_POOL_ID","userPoolWebClientId","cognitoAuthUrl","cognitoRedirectUrl","API","endpoints","endpoint","authenticationType","custom_header","ReactDOM","App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.089dd930.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function AuthenticatedRoute({\r\n  component: C,\r\n  appProps,\r\n  ...rest\r\n}) {\r\n  // console.log(\"appProps.isAuthenticated\");\r\n  // console.log(appProps.isAuthenticated);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        appProps.isAuthenticated === true ? (\r\n          <C {...props} {...appProps} />\r\n        ) : (\r\n          <Redirect\r\n            to={`/login?redirect=${props.location.pathname}${props.location.search}`}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","export default {\r\n  apiGateway: {\r\n    NAME: \"Fiji-Dev\",\r\n    REGION: \"ap-southeast-2\",\r\n    URL: \"https://ww8jinvodc.execute-api.ap-southeast-2.amazonaws.com/V1\",\r\n  },\r\n  // cognito: {\r\n  //   REGION: \"ap-southeast-2\",\r\n  //   USER_POOL_ID: \"ap-southeast-2_7XLZsmvnW\",\r\n  //   AUTH_URL:\r\n  //     \"https://fortian-login.auth.ap-southeast-2.amazoncognito.com/login/\",\r\n  //   REDIRECT_URL: \"http://localhost:4200/auth/oauth2/callback/\",\r\n  //   APP_CLIENT_ID: \"1e1ocgioop4r2cfmla6vblgj9g\"\r\n  // }\r\n  cognito: {\r\n    REGION: \"ap-southeast-2\",\r\n    USER_POOL_ID: \"ap-southeast-2_nisg14d0z\",\r\n    AUTH_URL: \"https://fiji-dev.auth.ap-southeast-2.amazoncognito.com/login/\",\r\n    REDIRECT_URL: \"http://localhost:4200/auth/oauth2/callback/\",\r\n    APP_CLIENT_ID: \"2100olpm7712gij41jdsog9ps9\",\r\n  },\r\n};\r\n","/*\r\n* required polyfills\r\n*/\r\nimport \"core-js\";\r\nimport 'core-js/features/set/map';\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol'\r\n// import 'core-js/es6/object'\r\n// import 'core-js/es6/function'\r\n// import 'core-js/es6/parse-int'\r\n// import 'core-js/es6/parse-float'\r\n// import 'core-js/es6/number'\r\n// import 'core-js/es6/math'\r\n// import 'core-js/es6/string'\r\n// import 'core-js/es6/date'\r\n// import 'core-js/es6/array'\r\n// import 'core-js/es6/regexp'\r\n// import 'core-js/es6/map'\r\n// import 'core-js/es6/weak-map'\r\n// import 'core-js/es6/set'\r\n// import 'core-js/es7/object'\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect'\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es7/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n\r\n  if ( typeof window.CustomEvent === \"function\" ) return false\r\n\r\n  function CustomEvent ( event, params ) {\r\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\r\n    var evt = document.createEvent( 'CustomEvent' )\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\r\n    return evt\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n})()\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction querystring(name, url = window.location.href) {\r\n  name = name.replace(/[[]]/g, \"\\\\$&\");\r\n\r\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\r\n  const results = regex.exec(url);\r\n\r\n  if (!results) {\r\n    return null;\r\n  }\r\n  if (!results[2]) {\r\n    return \"\";\r\n  }\r\n\r\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}\r\n\r\nexport default function UnauthenticatedRoute({\r\n  component: C,\r\n  appProps,\r\n  ...rest\r\n}) {\r\n  const redirect = querystring(\"redirect\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !appProps.isAuthenticated ? (\r\n          <C {...props} {...appProps} />\r\n        ) : (\r\n          <Redirect\r\n            to={redirect === \"\" || redirect === null ? \"/\" : redirect}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { Auth } from \"aws-amplify\";\r\n\r\nimport config from \"../../config\";\r\n\r\nfunction NewTemp() {\r\n  return {\r\n    userGroups: [],\r\n    userInfo: {},\r\n    isAuthed: false\r\n  };\r\n}\r\nexport async function GetUserDetails() {\r\n  try {\r\n    // const [userDetails, setUserDetails] = useState({});\r\n\r\n    var temp = new NewTemp();\r\n\r\n    var currentSession = await Auth.currentSession();\r\n    temp.isAuthed = true; // If the above line worked, there is a valid sesison.\r\n\r\n    temp.userGroups = currentSession.getAccessToken().payload[\"cognito:groups\"];\r\n\r\n    var currentSessionInfo = currentSession.getIdToken();\r\n\r\n    var currentUser = await Auth.currentAuthenticatedUser();\r\n\r\n    // console.log(\"currentSession\");\r\n    // console.log(currentSession);\r\n    // console.log(\"currentSessionInfo\");\r\n    // console.log(currentSessionInfo);\r\n    // console.log(\"currentUser\");\r\n    // console.log(currentUser);\r\n\r\n    var userdetails = JSON.parse(\r\n      currentUser.pool.storage[\r\n        `CognitoIdentityServiceProvider.${config.cognito.APP_CLIENT_ID}.${currentUser.username}.userData`\r\n      ]\r\n    );\r\n    var userAttributes = {};\r\n\r\n    userdetails.UserAttributes.map(\r\n      (i, c) =>\r\n        (userAttributes[userdetails.UserAttributes[c][\"Name\"]] =\r\n          userdetails.UserAttributes[c][\"Value\"])\r\n    );\r\n\r\n    var currentUserDetails = {\r\n      id: currentSessionInfo.payload[\"cognito:username\"],\r\n      email: currentSessionInfo.payload.email,\r\n      emailVerified: currentSessionInfo.payload.email_verified,\r\n      phone: currentSessionInfo.payload.phone_number,\r\n      phoneVerified: currentSessionInfo.payload.phone_number_verified,\r\n      userAttributes: userAttributes\r\n    };\r\n\r\n    temp.userInfo = currentUserDetails;\r\n\r\n    return temp;\r\n  } catch (e) {\r\n    if (e !== \"No current user\") {\r\n      alert(e);\r\n    }\r\n    return new NewTemp();\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Switch, withRouter } from \"react-router-dom\";\r\nimport { Auth } from \"aws-amplify\";\r\n// import { renderRoutes } from 'react-router-config';\r\nimport \"./App.scss\";\r\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute/UnauthenticatedRoute\";\r\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute/AuthenticatedRoute\";\r\nimport { GetUserDetails } from \"./Common/Auth/UserDetails\";\r\n\r\nfunction App(props) {\r\n  // let { id } = useParams();\r\n  // const [userGroups, setUserGroups] = useState([]);\r\n  const [userDetails, setUserDetails] = useState(GetUserDetails());\r\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n\r\n  //const [testState, setTestSTate] = useState(\"teststring\");\r\n\r\n  const signOut = async () => {\r\n    console.log(\"Signing out.\");\r\n    await Auth.signOut() // { global: true }\r\n      .then(data => console.log(data))\r\n      .catch(err => console.log(err));\r\n    updateAuthStatus(false);\r\n    console.log(\"signed out.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    onLoad();\r\n  }, []); //eslint-disable-line\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"userdetails\");\r\n  //   console.log(userDetails);\r\n  // }, [userDetails]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"App Authed: \" + isAuthenticated);\r\n  // }, [isAuthenticated]);\r\n\r\n  async function onLoad() {\r\n    try {\r\n      var currentSession = await Auth.currentSession();\r\n      var user = await Auth.currentAuthenticatedUser();\r\n      // console.log(\"user\");\r\n      // console.log(user);\r\n      // console.log(\"Current Session\");\r\n      // console.log(currentSession);\r\n      setUserDetails(await GetUserDetails());\r\n      updateAuthStatus(true);\r\n    } catch (e) {\r\n      if (e !== \"No current user\") {\r\n        alert(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  const updateAuthStatus = async status => {\r\n    userHasAuthenticated(status);\r\n    setUserDetails(await GetUserDetails());\r\n  };\r\n  const loading = () => (\r\n    <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\r\n  );\r\n\r\n  // Containers\r\n  const DefaultLayout = React.lazy(() => import(\"./containers/DefaultLayout\"));\r\n\r\n  // Pages\r\n  const Login = React.lazy(() => import(\"./views/Pages/Login\"));\r\n  const Register = React.lazy(() => import(\"./views/Pages/Register\"));\r\n  const RegisterVendor = React.lazy(() =>\r\n    import(\"./views/Pages/RegisterVendor\")\r\n  );\r\n  const Page404 = React.lazy(() => import(\"./views/Pages/Page404\"));\r\n  const Page500 = React.lazy(() => import(\"./views/Pages/Page500\"));\r\n\r\n  // async function handleLogout() {\r\n  //   await Auth.signout();\r\n\r\n  //   userHasAuthenticated(false);\r\n  //   console.log(\"Handling Logout\");\r\n  //   this.props.history.push(\"/login\");\r\n  // }\r\n\r\n  // console.log(\"isAuthenticated\");\r\n  // console.log(isAuthenticated);\r\n  // All App props go in here so that they can be correctly passed through the authenticated or unauthenticated components\r\n  const appProps = {\r\n    isAuthenticated: isAuthenticated,\r\n    updateAuthStatus: updateAuthStatus,\r\n    onLogout: signOut,\r\n    userDetails: userDetails\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <React.Suspense fallback={loading()}>\r\n        <Switch>\r\n          <UnauthenticatedRoute\r\n            exact\r\n            path=\"/login\"\r\n            name=\"Login Page\"\r\n            component={Login}\r\n            appProps={appProps}\r\n            props={props}\r\n          />\r\n          <UnauthenticatedRoute\r\n            exact\r\n            path=\"/register\"\r\n            name=\"Register Page\"\r\n            component={Register}\r\n            appProps={appProps}\r\n            props={props}\r\n          />\r\n          <UnauthenticatedRoute\r\n            exact\r\n            path=\"/registervendor\"\r\n            name=\"Register Vendor Page\"\r\n            component={RegisterVendor}\r\n            appProps={appProps}\r\n            props={props}\r\n          />\r\n          <UnauthenticatedRoute\r\n            exact\r\n            path=\"/404\"\r\n            name=\"Page 404\"\r\n            component={Page404}\r\n            appProps={appProps}\r\n            props={props}\r\n          />\r\n          <UnauthenticatedRoute\r\n            exact\r\n            path=\"/500\"\r\n            name=\"Page 500\"\r\n            component={Page500}\r\n            appProps={appProps}\r\n            props={props}\r\n          />\r\n          <AuthenticatedRoute\r\n            path=\"/\"\r\n            name=\"Home\"\r\n            component={DefaultLayout}\r\n            appProps={appProps}\r\n            {...props}\r\n          />\r\n          <UnauthenticatedRoute\r\n            component={Page404}\r\n            appProps={appProps}\r\n            props={props}\r\n          />\r\n        </Switch>\r\n      </React.Suspense>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie9\"; // For IE 9-11 support\r\nimport \"react-app-polyfill/stable\";\r\n// import 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport \"./polyfill\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Amplify from \"aws-amplify\";\r\nimport config from \"./config\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n// ENABLE DEBUG MODE\r\n//window.LOG_LEVEL = \"DEBUG\";\r\nAmplify.configure({\r\n  Auth: {\r\n    mandatorySignIn: true,\r\n    region: config.cognito.REGION,\r\n    userPoolId: config.cognito.USER_POOL_ID,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\r\n    cognitoAuthUrl: config.cognito.AUTH_URL,\r\n    cognitoRedirectUrl: config.cognito.REDIRECT_URL,\r\n  },\r\n  // Storage: {\r\n  //   region: config.s3.REGION,\r\n  //   bucket: config.s3.BUCKET,\r\n  //   identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n  // },\r\n  API: {\r\n    endpoints: [\r\n      {\r\n        name: \"Fiji-Dev\",\r\n        endpoint: config.apiGateway.URL,\r\n        region: config.apiGateway.REGION,\r\n        authenticationType: \"AMAZON_COGNITO_USER_POOLS\",\r\n        custom_header: async () => {\r\n          return {\r\n            // Authorization: `Bearer ${(await Auth.currentSession())\r\n            //   .getAccessToken()\r\n            //   .getJwtToken()}`,\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n          };\r\n        },\r\n      },\r\n    ],\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}