{"version":3,"sources":["views/Pages/Login/Login.js","components/LoaderButton/LoaderButton.js","hooks/useFormFields.js"],"names":["Login","props","isLoading","setIsLoading","useState","validCreds","setValidCreds","mfaValid","setMFAValid","userGuid","setUserGuid","fields","handleFieldChange","useFormFields","email","password","mfaTOTPCode","async","handleLoginSubmit","event","preventDefault","user","Auth","signIn","username","e","alert","message","handleMFASubmit","authWithMFA","mfaVerificationCode","then","data","JSON","stringify","result","mfaAuthSession","body","session","Session","client_id","config","cognito","APP_CLIENT_ID","code","apiName","path","myInit","headers","console","log","API","post","localStorage","setItem","concat","AuthenticationResult","AccessToken","IdToken","RefreshToken","React","createElement","className","window","location","reload","Redirect","to","Container","Row","Col","md","lg","xl","Card","CardBody","Form","onSubmit","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","id","type","placeholder","onChange","autoFocus","LoaderButton","color","block","disabled","CardFooter","CardGroup","value","xs","length","Button","style","width","Link","active","tabIndex","_ref","Object","assign","Spinner","size","children","initialState","setValues","target"],"mappings":"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","file":"static/js/32.9332430d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Auth, API } from \"aws-amplify\";\r\n\r\n// import { Credentials } from \"@aws-amplify/core\";\r\n\r\n// import {\r\n//   CognitoUserSession,\r\n//   CognitoIdToken,\r\n//   CognitoRefreshToken,\r\n//   CognitoAccessToken\r\n// } from \"amazon-cognito-identity-js\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport LoaderButton from \"../../../components/LoaderButton/LoaderButton\";\r\nimport { useFormFields } from \"../../../hooks/useFormFields\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardGroup,\r\n  CardFooter,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport config from \"../../../config\";\r\n// import { _ } from \"core-js\";\r\n\r\nexport default function Login(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [validCreds, setValidCreds] = useState(false);\r\n  const [mfaValid, setMFAValid] = useState(false);\r\n  const [userGuid, setUserGuid] = useState(\"\");\r\n\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\",\r\n    mfaTOTPCode: \"\",\r\n  });\r\n\r\n  // login and check MFA status (challenge name)\r\n  // if mfa needs to be registered, kick that off\r\n  // otherwise wait for TOTP\r\n  // send and validate TOTP to lambda\r\n  // login\r\n  function validateForm() {\r\n    return fields.email.length > 0 && fields.password.length > 0;\r\n  }\r\n\r\n  async function handleLoginSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const user = await Auth.signIn(fields.email, fields.password);\r\n      //await props.updateAuthStatus(true);\r\n      setUserGuid(user.username);\r\n\r\n      // console.log(\"Logged In!\");\r\n      // console.log(user);\r\n\r\n      setIsLoading(false);\r\n      setValidCreds(true);\r\n    } catch (e) {\r\n      alert(e.message);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handleMFASubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    await authWithMFA(fields.mfaVerificationCode).then((data) => {\r\n      try {\r\n        // console.log(\"authWithMFAResult\");\r\n        // console.log(data);\r\n        setMFAValid(data);\r\n      } catch (e) {\r\n        alert(\"Waiting for Reece to fix the Lambda :)\");\r\n        alert(JSON.stringify(e.message));\r\n      }\r\n    });\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  // Use the entered credentials and the MFA TOTP to authenticate the user\r\n  const authWithMFA = async () => {\r\n    try {\r\n      var result = false;\r\n      // probably redundant, but fuck it, it works\r\n      var mfaAuthSession = await Auth.signIn(fields.email, fields.password);\r\n      await Auth;\r\n\r\n      // console.log(\"mfaAuthSession\");\r\n      // console.log(mfaAuthSession);\r\n      var body = {\r\n        session: mfaAuthSession.Session,\r\n        client_id: config.cognito.APP_CLIENT_ID,\r\n        username: userGuid,\r\n        code: fields.mfaTOTPCode,\r\n      };\r\n\r\n      let apiName = \"Fiji-Dev\";\r\n      let path = \"/mfavalidator\";\r\n      let myInit = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body,\r\n      };\r\n      console.log(\"AQUI!!!\");\r\n      await API.post(apiName, path, myInit).then((data) => {\r\n        // console.log(\"result\");\r\n        // console.log(data);\r\n        // console.log(data.body.AuthenticationResult.AccessToken);\r\n\r\n        // var session = new CognitoUserSession({\r\n        //   IdToken: new CognitoIdToken({\r\n        //     IdToken: data.body.AuthenticationResult.IdToken\r\n        //   }),\r\n        //   RefreshToken: new CognitoRefreshToken({\r\n        //     RefreshToken: data.body.AuthenticationResult.RefreshToken\r\n        //   }),\r\n        //   AccessToken: new CognitoAccessToken({\r\n        //     AccessToken: data.body.AuthenticationResult.AccessToken\r\n        //   })\r\n        // });\r\n\r\n        // Credentials.set(session, \"session\");\r\n\r\n        // \"Login\"\r\n        // NOT CLEAN! Amplify is shit and doesn't leave us with many other choices...\r\n\r\n        localStorage.setItem(\r\n          `CognitoIdentityServiceProvider.${config.cognito.APP_CLIENT_ID}.${userGuid}.accessToken`,\r\n          data.body.AuthenticationResult.AccessToken\r\n        );\r\n        localStorage.setItem(\r\n          `CognitoIdentityServiceProvider.${config.cognito.APP_CLIENT_ID}.${userGuid}.clockDrift`,\r\n          0\r\n        );\r\n        localStorage.setItem(\r\n          `CognitoIdentityServiceProvider.${config.cognito.APP_CLIENT_ID}.${userGuid}.idToken`,\r\n          data.body.AuthenticationResult.IdToken\r\n        );\r\n        localStorage.setItem(\r\n          `CognitoIdentityServiceProvider.${config.cognito.APP_CLIENT_ID}.${userGuid}.refreshToken`,\r\n          data.body.AuthenticationResult.RefreshToken\r\n        );\r\n        // localStorage.setItem(\r\n        //   `CognitoIdentityServiceProvider.${config.cognito.APP_CLIENT_ID}.${userGuid}.userData`,\r\n        //   result.body.RefreshToken\r\n        // );\r\n        localStorage.setItem(\r\n          `CognitoIdentityServiceProvider.${config.cognito.APP_CLIENT_ID}.LastAuthUser`,\r\n          userGuid\r\n        );\r\n        localStorage.setItem(`amplify-signin-with-hostedUI`, false);\r\n        result = true;\r\n      });\r\n    } catch (e) {\r\n      if (e.message === \"Request failed with status code 502\") {\r\n      } else {\r\n        alert(JSON.stringify(e));\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  function redirectToHome() {\r\n    // console.log(\"redirecting\");\r\n    window.location.reload();\r\n    return <Redirect to={`/Dashboardtest`} />;\r\n  }\r\n\r\n  function renderLogin() {\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"8\">\r\n              <CardGroup>\r\n                <Card className=\"p-4\">\r\n                  <CardBody>\r\n                    <Form onSubmit={handleLoginSubmit}>\r\n                      <h1>Login</h1>\r\n                      <p className=\"text-muted\">Sign In to your account</p>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"icon-user\"></i>\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          id=\"email\"\r\n                          autoFocus\r\n                          type=\"email\"\r\n                          placeholder=\"email\"\r\n                          value={fields.email}\r\n                          onChange={handleFieldChange}\r\n                        />\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-4\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"icon-lock\"></i>\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          id=\"password\"\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          value={fields.password}\r\n                          onChange={handleFieldChange}\r\n                        />\r\n                      </InputGroup>\r\n                      <Row>\r\n                        <Col xs=\"6\">\r\n                          <LoaderButton\r\n                            block\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            isLoading={isLoading}\r\n                            disabled={!validateForm()}\r\n                            className=\"px-4\"\r\n                          >\r\n                            Login\r\n                          </LoaderButton>\r\n                        </Col>\r\n                        <Col xs=\"6\" className=\"text-right\">\r\n                          <Button color=\"link\" className=\"px-0\">\r\n                            Forgot password?\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n                <Card\r\n                  className=\"text-white bg-primary py-5 d-md-down-none\"\r\n                  style={{ width: \"44%\" }}\r\n                >\r\n                  <CardBody className=\"text-center\">\r\n                    <div>\r\n                      <h2>Sign up</h2>\r\n                      <p>Register your user.</p>\r\n                      <Link to=\"/register\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          className=\"mt-3\"\r\n                          active\r\n                          tabIndex={-1}\r\n                        >\r\n                          Register Now!\r\n                        </Button>\r\n                      </Link>\r\n                      {/* <br />\r\n                      <Link to=\"/registervendor\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          className=\"mt-3\"\r\n                          active\r\n                          tabIndex={-1}\r\n                        >\r\n                          Register as a vendor.\r\n                        </Button>\r\n                      </Link> */}\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderMFA() {\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <Card className=\"mx-4\">\r\n                <CardBody className=\"p-4\">\r\n                  <Form onSubmit={handleMFASubmit}>\r\n                    <h1>MFA</h1>\r\n                    <p>\r\n                      Enter the value in the field below to verify the account.\r\n                    </p>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>#</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        id=\"mfaTOTPCode\"\r\n                        type=\"tel\"\r\n                        placeholder=\"MFA Code\"\r\n                        onChange={handleFieldChange}\r\n                        autoFocus\r\n                      />\r\n                    </InputGroup>\r\n                    <LoaderButton\r\n                      color=\"success\"\r\n                      block\r\n                      isLoading={isLoading}\r\n                      disabled={isLoading}\r\n                    >\r\n                      Enter Code\r\n                    </LoaderButton>\r\n                  </Form>\r\n                </CardBody>\r\n                <CardFooter className=\"p-4\"></CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {validCreds ? (mfaValid ? redirectToHome() : renderMFA()) : renderLogin()}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Spinner } from \"reactstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n  isLoading,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Button\r\n      className={`LoaderButton ${className}`}\r\n      disabled={disabled || isLoading}\r\n      {...props}>\r\n      {isLoading && <Spinner size='sm' color='light' />}\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}\r\n"],"sourceRoot":""}