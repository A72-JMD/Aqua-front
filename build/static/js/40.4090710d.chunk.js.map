{"version":3,"sources":["../node_modules/reactstrap/es/CardColumns.js","views/Tickets/TicketDashboard.js"],"names":["_excluded","propTypes","tag","tagPropType","className","PropTypes","string","cssModule","object","CardColumns","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","TicketDashboard","apiResult","setApiResult","useState","infiniteLoopStopper","toInfinity","apiResults","graphdata","options","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","useEffect","onLoad","async","getData","apiName","path","myInit","headers","Authorization","concat","Auth","currentSession","getIdToken","getJwtToken","result","API","get","e","message","alert","JSON","stringify","onLogout","StatGraphs","formatGraphData","proj","console","log","d","l","polar","datasets","data","backgroundColor","label","labels","Object","values","map","a","push","keys","p","i","Card","key","CardHeader","CardBody","Pie"],"mappings":"4RAEIA,EAAY,CAAC,YAAa,YAAa,OAKvCC,EAAY,CACdC,IAAKC,IACLC,UAAWC,IAAUC,OACrBC,UAAWF,IAAUG,QAMnBC,EAAc,SAAqBC,GACrC,IAAIN,EAAYM,EAAMN,UAClBG,EAAYG,EAAMH,UAClBI,EAAMD,EAAMR,IACZU,EAAaC,YAA8BH,EAAOV,GAElDc,EAAUC,YAAgBC,IAAWZ,EAAW,gBAAiBG,GACrE,OAAoBU,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpER,UAAWU,MAIfL,EAAYR,UAAYA,EACxBQ,EAAYW,aAjBO,CACjBlB,IAAK,OAiBQO,Q,mCCyFAY,UA/Gf,SAAyBX,GACvB,MAAOY,EAAWC,GAAgBC,mBAAS,KACpCC,EAAqBC,GAAcF,mBAAS,IACnD,IAAIG,EAAa,GACbC,EAAY,GAEhB,MAAMC,EAAU,CACdC,SAAU,CACRC,SAAS,EACTC,OAAQC,kBAEVC,qBAAqB,GAGvBC,oBAAU,KACRC,KACC,CAACX,IAEJ,MAAMW,EAASC,WACbV,QAAmBW,MAEjBf,EAAaI,IAKXW,EAAUD,UACd,IACE,IAAIE,EAAU,WACVC,EAAO,qBACPC,EAAS,CACXC,QAAS,CACPC,cAAc,UAADC,cAAmBC,IAAKC,kBAClCC,aACAC,iBAGP,IAAIC,QAAeC,IAAIC,IAAIZ,EAASC,EAAMC,GAC1C,MAAOW,GACW,wCAAdA,EAAEC,UAEJC,MAAMC,KAAKC,UAAUJ,IACrB1C,EAAM+C,YAGV,OAAOR,GAsCHS,EAAaA,KAnCKC,MAGtB,IAAK,IAAIC,KAFTC,QAAQC,IAAI,QAEKxC,EAAW,CAC1B,IAAIyC,EAAI,GACJC,EAAI,GACJC,EAAQ,CACVC,SAAU,CACR,CACEC,KAAM,GACNC,gBAAiB,CACf,UACA,UACA,UACA,UACA,WAEFC,MAAO,KAGXC,OAAQ,IAGVC,OAAOC,OAAOlD,EAAUsC,GAAc,QAAGa,IAAIC,GAAKX,EAAEY,KAAKD,IACzDH,OAAOK,KAAKtD,EAAUsC,GAAc,QAAGa,IAAIC,GAAKV,EAAEW,KAAKD,IAEvDT,EAAMC,SAAS,GAAGC,KAAOJ,EACzBE,EAAMK,OAASN,EACfC,EAAMC,SAAS,GAAGG,MAAQT,EAE1BhC,EAAUN,EAAUsC,GAAkB,YAAKK,EAG7CJ,QAAQC,IAAIlC,IAGZ+B,GAEE1C,IAAAC,cAACT,EAAW,CAACL,UAAU,UACpBmE,OAAOK,KAAKtD,GAAWmD,IAAI,CAACI,EAAGC,IAC9B7D,IAAAC,cAAC6D,IAAI,CAACC,IAAK1D,EAAUuD,GAAe,YAClC5D,IAAAC,cAAC+D,IAAU,KAAC,sBAAoBJ,GAChC5D,IAAAC,cAACgE,IAAQ,KACPjE,IAAAC,cAAA,OAAKd,UAAU,iBACba,IAAAC,cAACiE,MAAG,CACFhB,KAAMvC,EAAUN,EAAUuD,GAAe,YACzChD,QAASA,UAUzB,OACEZ,IAAAC,cAAA,OAAKd,UAAU,mBACba,IAAAC,cAACwC,EAAU","file":"static/js/40.4090710d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardColumns = function CardColumns(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-columns'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardColumns.propTypes = propTypes;\nCardColumns.defaultProps = defaultProps;\nexport default CardColumns;","import React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { CustomTooltips } from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\r\n\r\nimport { Card, CardBody, CardColumns, CardHeader } from \"reactstrap\";\r\n\r\nimport { Auth, API } from \"aws-amplify\";\r\n\r\nfunction TicketDashboard(props) {\r\n  const [apiResult, setApiResult] = useState({});\r\n  const [infiniteLoopStopper, toInfinity] = useState({}); //eslint-disable-line\r\n  var apiResults = {};\r\n  var graphdata = {};\r\n\r\n  const options = {\r\n    tooltips: {\r\n      enabled: false,\r\n      custom: CustomTooltips\r\n    },\r\n    maintainAspectRatio: false\r\n  };\r\n\r\n  useEffect(() => {\r\n    onLoad();\r\n  }, [infiniteLoopStopper]); //eslint-disable-line\r\n\r\n  const onLoad = async () => {\r\n    apiResults = await getData();\r\n    if (apiResults) {\r\n      setApiResult(apiResults);\r\n    }\r\n  };\r\n\r\n  // Pull out into a generic reusable function\r\n  const getData = async () => {\r\n    try {\r\n      let apiName = \"Fiji-Dev\";\r\n      let path = \"/tickets/dashboard\";\r\n      let myInit = {\r\n        headers: {\r\n          Authorization: `Bearer ${(await Auth.currentSession())\r\n            .getIdToken()\r\n            .getJwtToken()}`\r\n        }\r\n      };\r\n      var result = await API.get(apiName, path, myInit);\r\n    } catch (e) {\r\n      if (e.message === \"Request failed with status code 502\") {\r\n      } else {\r\n        alert(JSON.stringify(e));\r\n        props.onLogout();\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const formatGraphData = () => {\r\n    console.log(\"test\");\r\n\r\n    for (var proj in apiResult) {\r\n      var d = [];\r\n      var l = [];\r\n      var polar = {\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            backgroundColor: [\r\n              \"#FF6384\",\r\n              \"#4BC0C0\",\r\n              \"#FFCE56\",\r\n              \"#E7E9ED\",\r\n              \"#36A2EB\"\r\n            ],\r\n            label: \"\" // for legend\r\n          }\r\n        ],\r\n        labels: []\r\n      };\r\n\r\n      Object.values(apiResult[proj][\"Counts\"]).map(a => d.push(a)); //eslint-disable-line\r\n      Object.keys(apiResult[proj][\"Counts\"]).map(a => l.push(a)); //eslint-disable-line\r\n\r\n      polar.datasets[0].data = d;\r\n      polar.labels = l;\r\n      polar.datasets[0].label = proj;\r\n\r\n      graphdata[apiResult[proj][\"projectKey\"]] = polar;\r\n    }\r\n\r\n    console.log(graphdata);\r\n  };\r\n  const StatGraphs = () => {\r\n    formatGraphData();\r\n    return (\r\n      <CardColumns className=\"cols-2\">\r\n        {Object.keys(apiResult).map((p, i) => (\r\n          <Card key={apiResult[p][\"projectKey\"]}>\r\n            <CardHeader>Tickets by status: {p}</CardHeader>\r\n            <CardBody>\r\n              <div className=\"chart-wrapper\">\r\n                <Pie\r\n                  data={graphdata[apiResult[p][\"projectKey\"]]}\r\n                  options={options}\r\n                />\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        ))}\r\n      </CardColumns>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <StatGraphs />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TicketDashboard;\r\n"],"sourceRoot":""}