{"version":3,"sources":["views/BackofficeArea/RequestPositionsFiles.js","Common/helpers.js"],"names":["LoadPositionsFiles","props","apiError502","setApiError502","useState","positions","setPositions","Authheader","setHeader","useEffect","async","result","concat","Auth","currentSession","getIdToken","getJwtToken","getheader","HeaderAuth","apiName","path","myInit","headers","filetype","fileType","Authorization","console","log","Array","isArray","API","get","e","message","alert","JSON","stringify","onLogout","getData","React","createElement","Files","map","Positions","file","class","onClick","Helpers","httpRequest","then","response","blob","url","window","URL","createObjectURL","Blob","link","document","href","setAttribute","body","appendChild","click","parentNode","removeChild","handleSubmit","File","aria-label","role","type","Bank","method","authorization","payload","config","toLowerCase","length","Object","keys","fetch","ok","data","Promise","reject"],"mappings":"8KAAA,4CA8IeA,UAzIf,SAA4BC,GAC1B,MAAOC,EAAaC,GAAkBC,oBAAS,IACxCC,EAAWC,GAAgBF,mBAAS,KACpCG,EAAYC,GAAaJ,qBA6EhC,OAvCAK,oBAAU,KApCQC,WAChB,IAAIC,EAAM,UAAAC,cAAoBC,IAAKC,kBAChCC,aACAC,eACHR,EAAUG,IAkCVM,GAEA,IAAIC,EAAa,OACDR,WACd,IACE,IAAIS,EAAU,WACVC,EAAO,aACPC,EAAS,CACXC,QAAS,CACPC,SAAUC,EACVC,cAAc,UAADb,cAAmBC,IAAKC,kBAClCC,aACAC,iBAGPU,QAAQC,IAAI,2CACZC,MAAMC,QAAQR,EAAOC,SACrBJ,EAAaG,EAAOC,QAAQG,cAC5BC,QAAQC,IAAI,4BAEZ,IAAIhB,QAAemB,IAAIC,IAAIZ,EAASC,EAAMC,GAC1CK,QAAQC,IAAIhB,GACZL,EAAaK,GACb,MAAOqB,GACW,wCAAdA,EAAEC,QACJ9B,GAAe,IAEf+B,MAAMC,KAAKC,UAAUJ,IACrB/B,EAAMoC,cAKZC,CAAQ,aACRZ,QAAQC,IAAIT,IACX,IAGDqB,IAAAC,cAAA,WAEGZ,MAAMC,QAAQxB,EAAUoC,QACvBpC,EAAUoC,MAAMC,IAAKnB,GAEjBgB,IAAAC,cAAA,WACGjB,EAASoB,UAAUD,KAAI,SAAUE,GAChC,OACEL,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKK,MAAM,qCACTN,IAAAC,cAAA,UACEM,QAASA,IAhF/BpC,eAA4BkC,GAC1BG,IAAQC,YACN,2GACEJ,EACF,MACArC,GAGC0C,KAAMC,GAAaA,EAASC,QAC5BF,KAAME,IAEL,MAAMC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACL,KAC3CM,EAAOC,SAASlB,cAAc,KACpCiB,EAAKE,KAAOP,EACZK,EAAKG,aAAa,WAAYhB,GAE9Bc,SAASG,KAAKC,YAAYL,GAE1BA,EAAKM,QAELN,EAAKO,WAAWC,YAAYR,KA4DGS,CAAatB,EAAKuB,MACjCtB,MAAM,+BAENN,IAAAC,cAAA,KAAGK,MAAM,yBAEXN,IAAAC,cAAA,OACE4B,aAAW,6BACXC,KAAK,UACLxB,MAAM,2BAENN,IAAAC,cAAA,OACE4B,aAAW,cACXC,KAAK,QACLxB,MAAM,kBAENN,IAAAC,cAAA,UACE8B,KAAK,SACLzB,MAAM,oCAELD,EAAK2B,MAERhC,IAAAC,cAAA,UACE8B,KAAK,SACLzB,MAAM,6BAELD,EAAKuB,MAER5B,IAAAC,cAAA,UACE8B,KAAK,SACLzB,MAAM,6BACP,sB,iCC/H3B,MAAME,EAAU,CAEdC,YAAaA,CAACI,EAAKoB,EAAQC,EAAeC,EAASpD,KAEjD,MAAMqD,EAAS,CACbH,SACAlD,QAAS,CACP,eAAgB,mBAChBmD,kBAgBJ,MAZ6B,SAAzBD,EAAOI,eAA4BF,GAAWA,EAAQG,OAAS,IACjEF,EAAOd,KAAO1B,KAAKC,UAAUsC,IAK7BpD,GACmB,kBAAZA,GACPwD,OAAOC,KAAKzD,GAASuD,OAAS,IAE9BF,EAAOrD,QAAUA,GAEZ0D,MAAM5B,EAAKuB,GAAQ1B,KAAMC,IAE9B,GAAIA,EAAS+B,GAAI,CACf,IAAIC,EAAOhC,EASX,OARAxB,QAAQC,IAAI,cACZD,QAAQC,IAAIuD,GAOLA,EAGT,OAAOC,QAAQC,OAAOlC,OAIbH","file":"static/js/37.770d5cf2.chunk.js","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\r\nimport { Auth, API } from \"aws-amplify\";\r\nimport Helpers from \"../../Common/helpers.js\";\r\n\r\n\r\nfunction LoadPositionsFiles(props) {\r\n  const [apiError502, setApiError502] = useState(false);\r\n  const [positions, setPositions] = useState([]);\r\n  const [Authheader, setHeader] = useState();\r\n\r\n  const getheader = async () => {\r\n    var result = `Bearer ${(await Auth.currentSession()) //Call aws-aplyfy Auth method\r\n      .getIdToken()\r\n      .getJwtToken()}`;\r\n    setHeader(result); // set the auth header here;\r\n    return result;\r\n  };\r\n  async function handleSubmit(file) {\r\n    Helpers.httpRequest(\r\n      `https://ww8jinvodc.execute-api.ap-southeast-2.amazonaws.com/V1/fiji-web-files/Banks%2FLGT%2FPositions%2F` +\r\n        file,\r\n      \"get\",\r\n      Authheader\r\n    )\r\n      // 1. Convert the data into 'blob'\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        // 2. Create blob link to download\r\n        const url = window.URL.createObjectURL(new Blob([blob]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", file);\r\n        // 3. Append to html page\r\n        document.body.appendChild(link);\r\n        // 4. Force download\r\n        link.click();\r\n        // 5. Clean up and remove the link\r\n        link.parentNode.removeChild(link);\r\n\r\n        //.then((response) => {\r\n      });\r\n\r\n    // prevent form submit\r\n    //event.preventDefault();\r\n  }\r\n\r\n  useEffect(() => {\r\n    //Load Auth header\r\n    getheader();\r\n    // Pull out into a generic reusable function\r\n    var HeaderAuth = \"test\";\r\n    const getData = async (fileType) => {\r\n      try {\r\n        let apiName = \"Fiji-Dev\";\r\n        let path = \"/listfiles\";\r\n        let myInit = {\r\n          headers: {\r\n            filetype: fileType,\r\n            Authorization: `Bearer ${(await Auth.currentSession())\r\n              .getIdToken()\r\n              .getJwtToken()}`,\r\n          },\r\n        };\r\n        console.log(\"==========INIT with token==============\");\r\n        Array.isArray(myInit.headers);\r\n        HeaderAuth = myInit.headers.Authorization;\r\n        console.log(\"========================\");\r\n\r\n        var result = await API.get(apiName, path, myInit);\r\n        console.log(result);\r\n        setPositions(result); // set your files here;\r\n      } catch (e) {\r\n        if (e.message === \"Request failed with status code 502\") {\r\n          setApiError502(true);\r\n        } else {\r\n          alert(JSON.stringify(e));\r\n          props.onLogout();\r\n        }\r\n      }\r\n    };\r\n    // call getData\r\n    getData(\"Positions\");\r\n    console.log(HeaderAuth);\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      \r\n      {Array.isArray(positions.Files) &&\r\n        positions.Files.map((filetype) => {\r\n          return (\r\n            <div>\r\n              {filetype.Positions.map(function (file) {\r\n                return (\r\n                  <div>\r\n                    <div class=\"d-none d-sm-inline-block col-sm-6\">\r\n                      <button\r\n                        onClick={() => handleSubmit(file.File)}\r\n                        class=\"float-right btn btn-primary\"\r\n                      >\r\n                        <i class=\"icon-cloud-download\"></i>\r\n                      </button>\r\n                      <div\r\n                        aria-label=\"Toolbar with button groups\"\r\n                        role=\"toolbar\"\r\n                        class=\"float-right btn-toolbar\"\r\n                      >\r\n                        <div\r\n                          aria-label=\"First group\"\r\n                          role=\"group\"\r\n                          class=\"mr-3 btn-group\"\r\n                        >\r\n                          <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-outline-secondary active\"\r\n                          >\r\n                            {file.Bank}\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-outline-secondary\"\r\n                          >\r\n                            {file.File}\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-outline-secondary\"\r\n                          >\r\n                            Status\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\nexport default LoadPositionsFiles;\r\n","const Helpers = {\n  // Main wrapper for Fetch API\n  httpRequest: (url, method, authorization, payload, headers) => {\n    // Configuration to accept json as a default\n    const config = {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization,\n      },\n    };\n    // method = post and payload, add it to the fetch request\n    if (method.toLowerCase() === \"post\" && payload && payload.length > 0) {\n      config.body = JSON.stringify(payload);\n    }\n    // if custom headers need to be set for the specific request\n    // override them here\n    if (\n      headers &&\n      typeof headers === \"object\" &&\n      Object.keys(headers).length > 0\n    ) {\n      config.headers = headers;\n    }\n    return fetch(url, config).then((response) => {\n      // Check if the request is 200\n      if (response.ok) {\n        let data = response;\n        console.log(\"check data\");\n        console.log(data);\n\n        // if the type is json return, interpret it as json\n        //  if (response.headers.get('Content-Type').indexOf('application/json') > -1) {\n\n        //  data = response.json();\n        //  }\n        return data;\n      }\n      // if an errors, anything but 200 then reject with the actuall response\n      return Promise.reject(response);\n    });\n  },\n};\nexport default Helpers;\n"],"sourceRoot":""}