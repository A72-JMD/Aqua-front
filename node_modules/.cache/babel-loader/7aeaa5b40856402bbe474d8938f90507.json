{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { isPredicateGroup, isPredicateObj } from './types';\nimport { v4 as uuid } from 'uuid';\nexport var exhaustiveCheck = function (obj, throwOnError) {\n  if (throwOnError === void 0) {\n    throwOnError = true;\n  }\n  if (throwOnError) {\n    throw new Error(\"Invalid \" + obj);\n  }\n};\nexport var validatePredicate = function (model, groupType, predicatesOrGroups) {\n  var filterType;\n  var isNegation = false;\n  if (predicatesOrGroups.length === 0) {\n    return true;\n  }\n  switch (groupType) {\n    case 'not':\n      filterType = 'every';\n      isNegation = true;\n      break;\n    case 'and':\n      filterType = 'every';\n      break;\n    case 'or':\n      filterType = 'some';\n      break;\n    default:\n      exhaustiveCheck(groupType);\n  }\n  var result = predicatesOrGroups[filterType](function (predicateOrGroup) {\n    if (isPredicateObj(predicateOrGroup)) {\n      var field = predicateOrGroup.field,\n        operator = predicateOrGroup.operator,\n        operand = predicateOrGroup.operand;\n      var value = model[field];\n      return validatePredicateField(value, operator, operand);\n    }\n    if (isPredicateGroup(predicateOrGroup)) {\n      var type = predicateOrGroup.type,\n        predicates = predicateOrGroup.predicates;\n      return validatePredicate(model, type, predicates);\n    }\n    throw new Error('Not a predicate or group');\n  });\n  return isNegation ? !result : result;\n};\nvar validatePredicateField = function (value, operator, operand) {\n  switch (operator) {\n    case 'ne':\n      return value !== operand;\n    case 'eq':\n      return value === operand;\n    case 'le':\n      return value <= operand;\n    case 'lt':\n      return value < operand;\n    case 'ge':\n      return value >= operand;\n    case 'gt':\n      return value > operand;\n    case 'between':\n      var _a = operand,\n        min = _a[0],\n        max = _a[1];\n      return value >= min && value <= max;\n    case 'beginsWith':\n      return value.startsWith(operand);\n    case 'contains':\n      return value.indexOf(operand) > -1;\n    case 'notContains':\n      return value.indexOf(operand) === -1;\n    default:\n      exhaustiveCheck(operator, false);\n      return false;\n  }\n};\nexport var isModelConstructor = function (obj) {\n  return obj && typeof obj.copyOf === 'function';\n};\nexport var establishRelation = function (namespace) {\n  var relationship = {};\n  Object.keys(namespace.models).forEach(function (mKey) {\n    relationship[mKey] = {\n      indexes: [],\n      relationTypes: []\n    };\n    var model = namespace.models[mKey];\n    Object.keys(model.fields).forEach(function (attr) {\n      var fieldAttribute = model.fields[attr];\n      if (typeof fieldAttribute.type === 'object' && 'model' in fieldAttribute.type) {\n        var connectionType = fieldAttribute.association.connectionType;\n        relationship[mKey].relationTypes.push({\n          fieldName: fieldAttribute.name,\n          modelName: fieldAttribute.type.model,\n          relationType: connectionType,\n          targetName: fieldAttribute.association['targetName']\n        });\n        if (connectionType === 'BELONGS_TO') {\n          relationship[mKey].indexes.push(fieldAttribute.association['targetName']);\n        }\n      }\n    });\n  });\n  return relationship;\n};\nvar topologicallySortedModels = new WeakMap();\nexport var traverseModel = function (srcModelName, instance, namespace, modelInstanceCreator, getModelConstructorByModelName) {\n  var relationships = namespace.relationships;\n  var modelConstructor = getModelConstructorByModelName(namespace.name, srcModelName);\n  var relation = relationships[srcModelName];\n  var result = [];\n  var newInstance = modelConstructor.copyOf(instance, function (draftInstance) {\n    relation.relationTypes.forEach(function (rItem) {\n      var modelConstructor = getModelConstructorByModelName(namespace.name, rItem.modelName);\n      switch (rItem.relationType) {\n        case 'HAS_ONE':\n          if (instance[rItem.fieldName]) {\n            var modelInstance = void 0;\n            try {\n              modelInstance = modelInstanceCreator(modelConstructor, instance[rItem.fieldName]);\n            } catch (error) {\n              // Do nothing\n            }\n            result.push({\n              modelName: rItem.modelName,\n              item: instance[rItem.fieldName],\n              instance: modelInstance\n            });\n            draftInstance[rItem.fieldName] = draftInstance[rItem.fieldName].id;\n          }\n          break;\n        case 'BELONGS_TO':\n          if (instance[rItem.fieldName]) {\n            var modelInstance = void 0;\n            try {\n              modelInstance = modelInstanceCreator(modelConstructor, instance[rItem.fieldName]);\n            } catch (error) {\n              // Do nothing\n            }\n            var isDeleted = draftInstance[rItem.fieldName]._deleted;\n            if (!isDeleted) {\n              result.push({\n                modelName: rItem.modelName,\n                item: instance[rItem.fieldName],\n                instance: modelInstance\n              });\n            }\n          }\n          draftInstance[rItem.targetName] = draftInstance[rItem.fieldName] ? draftInstance[rItem.fieldName].id : null;\n          delete draftInstance[rItem.fieldName];\n          break;\n        case 'HAS_MANY':\n          // Intentionally blank\n          break;\n        default:\n          exhaustiveCheck(rItem.relationType);\n          break;\n      }\n    });\n  });\n  result.unshift({\n    modelName: srcModelName,\n    item: newInstance,\n    instance: newInstance\n  });\n  if (!topologicallySortedModels.has(namespace)) {\n    topologicallySortedModels.set(namespace, Array.from(namespace.modelTopologicalOrdering.keys()));\n  }\n  var sortedModels = topologicallySortedModels.get(namespace);\n  result.sort(function (a, b) {\n    return sortedModels.indexOf(a.modelName) - sortedModels.indexOf(b.modelName);\n  });\n  return result;\n};\nexport var getIndex = function (rel, src) {\n  var index = '';\n  rel.some(function (relItem) {\n    if (relItem.modelName === src) {\n      index = relItem.targetName;\n    }\n  });\n  return index;\n};\nexport var NAMESPACES;\n(function (NAMESPACES) {\n  NAMESPACES[\"DATASTORE\"] = \"datastore\";\n  NAMESPACES[\"USER\"] = \"user\";\n  NAMESPACES[\"SYNC\"] = \"sync\";\n  NAMESPACES[\"STORAGE\"] = \"storage\";\n})(NAMESPACES || (NAMESPACES = {}));\nvar DATASTORE = NAMESPACES.DATASTORE;\nvar USER = NAMESPACES.USER;\nvar SYNC = NAMESPACES.SYNC;\nvar STORAGE = NAMESPACES.STORAGE;\nexport { USER, SYNC, STORAGE, DATASTORE };\nvar privateModeCheckResult;\nexport var isPrivateMode = function () {\n  return new Promise(function (resolve) {\n    var dbname = uuid();\n    var db;\n    var isPrivate = function () {\n      privateModeCheckResult = false;\n      resolve(true);\n    };\n    var isNotPrivate = function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(db && db.result && typeof db.result.close === 'function')) return [3 /*break*/, 2];\n              return [4 /*yield*/, db.result.close()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              return [4 /*yield*/, indexedDB.deleteDatabase(dbname)];\n            case 3:\n              _a.sent();\n              privateModeCheckResult = true;\n              return [2 /*return*/, resolve(false)];\n          }\n        });\n      });\n    };\n    if (privateModeCheckResult === true) {\n      return isNotPrivate();\n    }\n    if (privateModeCheckResult === false) {\n      return isPrivate();\n    }\n    if (indexedDB === null) return isPrivate();\n    db = indexedDB.open(dbname);\n    db.onerror = isPrivate;\n    db.onsuccess = isNotPrivate;\n  });\n};","map":{"version":3,"sources":["../src/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { isPredicateGroup, isPredicateObj, } from './types';\nimport { v4 as uuid } from 'uuid';\nexport var exhaustiveCheck = function (obj, throwOnError) {\n    if (throwOnError === void 0) { throwOnError = true; }\n    if (throwOnError) {\n        throw new Error(\"Invalid \" + obj);\n    }\n};\nexport var validatePredicate = function (model, groupType, predicatesOrGroups) {\n    var filterType;\n    var isNegation = false;\n    if (predicatesOrGroups.length === 0) {\n        return true;\n    }\n    switch (groupType) {\n        case 'not':\n            filterType = 'every';\n            isNegation = true;\n            break;\n        case 'and':\n            filterType = 'every';\n            break;\n        case 'or':\n            filterType = 'some';\n            break;\n        default:\n            exhaustiveCheck(groupType);\n    }\n    var result = predicatesOrGroups[filterType](function (predicateOrGroup) {\n        if (isPredicateObj(predicateOrGroup)) {\n            var field = predicateOrGroup.field, operator = predicateOrGroup.operator, operand = predicateOrGroup.operand;\n            var value = model[field];\n            return validatePredicateField(value, operator, operand);\n        }\n        if (isPredicateGroup(predicateOrGroup)) {\n            var type = predicateOrGroup.type, predicates = predicateOrGroup.predicates;\n            return validatePredicate(model, type, predicates);\n        }\n        throw new Error('Not a predicate or group');\n    });\n    return isNegation ? !result : result;\n};\nvar validatePredicateField = function (value, operator, operand) {\n    switch (operator) {\n        case 'ne':\n            return value !== operand;\n        case 'eq':\n            return value === operand;\n        case 'le':\n            return value <= operand;\n        case 'lt':\n            return value < operand;\n        case 'ge':\n            return value >= operand;\n        case 'gt':\n            return value > operand;\n        case 'between':\n            var _a = operand, min = _a[0], max = _a[1];\n            return value >= min && value <= max;\n        case 'beginsWith':\n            return value.startsWith(operand);\n        case 'contains':\n            return (value.indexOf(operand) > -1);\n        case 'notContains':\n            return (value.indexOf(operand) === -1);\n        default:\n            exhaustiveCheck(operator, false);\n            return false;\n    }\n};\nexport var isModelConstructor = function (obj) {\n    return (obj && typeof obj.copyOf === 'function');\n};\nexport var establishRelation = function (namespace) {\n    var relationship = {};\n    Object.keys(namespace.models).forEach(function (mKey) {\n        relationship[mKey] = { indexes: [], relationTypes: [] };\n        var model = namespace.models[mKey];\n        Object.keys(model.fields).forEach(function (attr) {\n            var fieldAttribute = model.fields[attr];\n            if (typeof fieldAttribute.type === 'object' &&\n                'model' in fieldAttribute.type) {\n                var connectionType = fieldAttribute.association.connectionType;\n                relationship[mKey].relationTypes.push({\n                    fieldName: fieldAttribute.name,\n                    modelName: fieldAttribute.type.model,\n                    relationType: connectionType,\n                    targetName: fieldAttribute.association['targetName'],\n                });\n                if (connectionType === 'BELONGS_TO') {\n                    relationship[mKey].indexes.push(fieldAttribute.association['targetName']);\n                }\n            }\n        });\n    });\n    return relationship;\n};\nvar topologicallySortedModels = new WeakMap();\nexport var traverseModel = function (srcModelName, instance, namespace, modelInstanceCreator, getModelConstructorByModelName) {\n    var relationships = namespace.relationships;\n    var modelConstructor = getModelConstructorByModelName(namespace.name, srcModelName);\n    var relation = relationships[srcModelName];\n    var result = [];\n    var newInstance = modelConstructor.copyOf(instance, function (draftInstance) {\n        relation.relationTypes.forEach(function (rItem) {\n            var modelConstructor = getModelConstructorByModelName(namespace.name, rItem.modelName);\n            switch (rItem.relationType) {\n                case 'HAS_ONE':\n                    if (instance[rItem.fieldName]) {\n                        var modelInstance = void 0;\n                        try {\n                            modelInstance = modelInstanceCreator(modelConstructor, instance[rItem.fieldName]);\n                        }\n                        catch (error) {\n                            // Do nothing\n                        }\n                        result.push({\n                            modelName: rItem.modelName,\n                            item: instance[rItem.fieldName],\n                            instance: modelInstance,\n                        });\n                        draftInstance[rItem.fieldName] = (draftInstance[rItem.fieldName]).id;\n                    }\n                    break;\n                case 'BELONGS_TO':\n                    if (instance[rItem.fieldName]) {\n                        var modelInstance = void 0;\n                        try {\n                            modelInstance = modelInstanceCreator(modelConstructor, instance[rItem.fieldName]);\n                        }\n                        catch (error) {\n                            // Do nothing\n                        }\n                        var isDeleted = (draftInstance[rItem.fieldName])._deleted;\n                        if (!isDeleted) {\n                            result.push({\n                                modelName: rItem.modelName,\n                                item: instance[rItem.fieldName],\n                                instance: modelInstance,\n                            });\n                        }\n                    }\n                    draftInstance[rItem.targetName] = draftInstance[rItem.fieldName]\n                        ? draftInstance[rItem.fieldName].id\n                        : null;\n                    delete draftInstance[rItem.fieldName];\n                    break;\n                case 'HAS_MANY':\n                    // Intentionally blank\n                    break;\n                default:\n                    exhaustiveCheck(rItem.relationType);\n                    break;\n            }\n        });\n    });\n    result.unshift({\n        modelName: srcModelName,\n        item: newInstance,\n        instance: newInstance,\n    });\n    if (!topologicallySortedModels.has(namespace)) {\n        topologicallySortedModels.set(namespace, Array.from(namespace.modelTopologicalOrdering.keys()));\n    }\n    var sortedModels = topologicallySortedModels.get(namespace);\n    result.sort(function (a, b) {\n        return (sortedModels.indexOf(a.modelName) - sortedModels.indexOf(b.modelName));\n    });\n    return result;\n};\nexport var getIndex = function (rel, src) {\n    var index = '';\n    rel.some(function (relItem) {\n        if (relItem.modelName === src) {\n            index = relItem.targetName;\n        }\n    });\n    return index;\n};\nexport var NAMESPACES;\n(function (NAMESPACES) {\n    NAMESPACES[\"DATASTORE\"] = \"datastore\";\n    NAMESPACES[\"USER\"] = \"user\";\n    NAMESPACES[\"SYNC\"] = \"sync\";\n    NAMESPACES[\"STORAGE\"] = \"storage\";\n})(NAMESPACES || (NAMESPACES = {}));\nvar DATASTORE = NAMESPACES.DATASTORE;\nvar USER = NAMESPACES.USER;\nvar SYNC = NAMESPACES.SYNC;\nvar STORAGE = NAMESPACES.STORAGE;\nexport { USER, SYNC, STORAGE, DATASTORE };\nvar privateModeCheckResult;\nexport var isPrivateMode = function () {\n    return new Promise(function (resolve) {\n        var dbname = uuid();\n        var db;\n        var isPrivate = function () {\n            privateModeCheckResult = false;\n            resolve(true);\n        };\n        var isNotPrivate = function () { return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(db && db.result && typeof db.result.close === 'function')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, db.result.close()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [4 /*yield*/, indexedDB.deleteDatabase(dbname)];\n                    case 3:\n                        _a.sent();\n                        privateModeCheckResult = true;\n                        return [2 /*return*/, resolve(false)];\n                }\n            });\n        }); };\n        if (privateModeCheckResult === true) {\n            return isNotPrivate();\n        }\n        if (privateModeCheckResult === false) {\n            return isPrivate();\n        }\n        if (indexedDB === null)\n            return isPrivate();\n        db = indexedDB.open(dbname);\n        db.onerror = isPrivate;\n        db.onsuccess = isNotPrivate;\n    });\n};\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}