{"ast":null,"code":"var _jsxFileName = \"/Users/JMD/Developments/Projects/Fiji-Web/src/views/Pages/RegisterVendor/RegisterVendor.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Alert, Card, CardBody, CardFooter, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from \"reactstrap\";\nimport LoaderButton from \"../../../components/LoaderButton/LoaderButton\";\nimport { Auth, API } from \"aws-amplify\";\nimport QRCode from \"qrcode.react\";\nimport \"./RegisterVendor.scss\";\nimport queryString from \"query-string\";\nimport LoadingBlock from \"../../../components/loadingBlock/loadingBlock\";\nimport { apiGET } from \"../../../Common/Api/apiHelper\";\nimport jwt from \"jsonwebtoken\";\nexport default function RegisterVendor(props) {\n  const [fields, setFields] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\",\n    mfaVerificationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [userConfirmed, setUserConfirmed] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [qrLink, setQRLink] = useState(\"\");\n  const [mfaQrCode, setMFAQRCode] = useState(\"\");\n  const [mfaSession, setMFASession] = useState(\"\");\n  const [userGuid, setUserGuid] = useState(\"\"); //eslint-disable-line\n  const [mfaFailedAlertVisible, setMFAFailedAlertVisible] = useState(false); //eslint-disable-line\n  const [jwtVald, setJWTValid] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true); // Render a loading block while we wait to verify the JWT\n  const [vendorId, setVendorId] = useState(\"\");\n  useEffect(() => {\n    onLoad();\n  }, []); // eslint-disable-line\n\n  // Validate the JWT before we go any further and set up State\n  const onLoad = async () => {\n    let params = queryString.parse(props.location.search);\n    if (params.jwt) {\n      var url = \"/jwtverify?jwt=\".concat(params.jwt);\n      var verifiedJWTResult = await apiGET(url, false);\n      if (verifiedJWTResult !== null) {\n        var decodedJWT = jwt.decode(params.jwt);\n        var fieldsTemp = {\n          ...fields\n        };\n        fieldsTemp.email = decodedJWT.VendorEmail;\n        setFields(fieldsTemp);\n        setVendorId(decodedJWT.VendorId);\n        setJWTValid(true); // Everything worked, display the registration form.\n      }\n    } else {\n      console.log(\"No JWT\");\n    }\n    setPageLoading(false);\n  };\n\n  // TODO: Use this\n  // function validateForm() {\n  //   return (\n  //     fields.email.length > 0 &&\n  //     fields.password.length > 0 &&\n  //     fields.password === fields.confirmPassword\n  //   );\n  // }\n\n  // function validateConfirmationForm() {\n  //   return fields.confirmationCode.length > 0;\n  // }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password,\n        attributes: {\n          \"custom:Group\": \"Vendor\",\n          // custom attribute, not standard\n          \"custom:VendorId\": vendorId // custom attribute, not standard\n        }\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n  const handleFieldChange = event => {\n    var stateTemp = {\n      ...fields,\n      [event.target.id]: event.target.value\n    };\n    setFields(stateTemp);\n  };\n\n  /// #1 send the user session to validate MFA,\n  /// returns: MFA secret, MFA Session\n  const validateMFA = async () => {\n    var x = await Auth.signIn(fields.email, fields.password);\n    setUserGuid(x.username);\n    var body = {\n      session: x.Session\n    };\n    try {\n      let apiName = \"Fiji-Dev\";\n      let path = \"/signup/validate-mfa\";\n      let myInit = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body\n      };\n      var result = await API.post(apiName, path, myInit);\n    } catch (e) {\n      if (e.message === \"Request failed with status code 502\") {} else {\n        alert(JSON.stringify(e));\n      }\n    }\n    return result;\n  };\n\n  /// #2 Finalise MFA using the TOTP and Session from #1\n  /// Returns: MFA Session (unused)\n  const finaliseMFA = async totp => {\n    var body = {\n      session: mfaSession,\n      code: totp,\n      device: \"\"\n    };\n    try {\n      let apiName = \"Fiji-Dev\";\n      let path = \"/signup/finalise-mfa\";\n      let myInit = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body\n      };\n      var result = await API.post(apiName, path, myInit);\n    } catch (e) {\n      // TODO: Gracefully handle failed MFA\n      if (e.message === \"Request failed with status code 502\") {} else {\n        alert(JSON.stringify(e));\n      }\n    }\n    return result;\n  };\n\n  // Authenticate with the user creds and MFA.\n  // Doesn't work because the TOTP is single use.\n  // const authWithMFA = async mses => {\n  //   try {\n  //     var mfaAuthSession = await Auth.signIn(fields.email, fields.password);\n\n  //     var body = {\n  //       session: mfaAuthSession.Session,\n  //       client_id: config.cognito.APP_CLIENT_ID,\n  //       username: userGuid,\n  //       code: fields.mfaVerificationCode\n  //     };\n\n  //     let apiName = \"Fiji-Dev\";\n  //     let path = \"/mfavalidator\";\n  //     let myInit = {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       },\n  //       body\n  //     };\n  //     var result = await API.post(apiName, path, myInit);\n  //   } catch (e) {\n  //     if (e.message === \"Request failed with status code 502\") {\n  //     } else {\n  //       alert(JSON.stringify(e));\n  //     }\n  //   }\n  //   return result;\n  // };\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    await Auth.confirmSignUp(fields.email, fields.confirmationCode).then(data => console.log(data));\n    try {\n      // Get secret from API\n      await validateMFA().then(data => {\n        setMFAQRCode(data.SecretCode);\n        setMFASession(data.Session);\n        setQRLink(\"otpauth://totp/Fortian:\" + fields.email + \"?secret=\" + data.SecretCode + \"&issuer=FortianMSS\");\n      }).catch(err => console.log(err));\n      setUserConfirmed(true);\n      setIsLoading(false);\n      //});\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n  async function handleMFASubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    await finaliseMFA(fields.mfaVerificationCode);\n    //.then(data => {\n    //   try {\n    //     var newMFASession = \"\";\n    //     newMFASession = data.body.Session;\n    //   } catch (e) {\n    //     alert(\"Waiting for Reece to fix the Lambda :)\");\n    //     alert(JSON.stringify(e.message));\n    //   }\n    // });\n    // TODO: make this a bit more graceful. provide user feedback (success alert)\n    props.history.push(\"/login\");\n    setIsLoading(false);\n  }\n\n  // function showMFAAlert() {\n  //   setMFAFailedAlertVisible(true);\n\n  //   setTimeout(() => {\n  //     setMFAFailedAlertVisible(false);\n  //   }, 5000);\n  // }\n\n  function renderInvalid() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app flex-row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      lg: \"7\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mx-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }, \"To register as a vendor, please contact Fortian.\")))))));\n  }\n  function renderQRCode() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app flex-row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      lg: \"7\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mx-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleMFASubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }, \"Enable MFA\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, \"Enter the code from your email to confirm.\"), /*#__PURE__*/React.createElement(QRCode, {\n      value: qrLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }, \"Scan the code above in your Authenticator app of choice.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }\n    }, \"If you are unable to scan the image, enter the following information:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 23\n      }\n    }), \"code: \", mfaQrCode), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, \"Enter the value in the field below to verify the account.\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    }, \"#\")), /*#__PURE__*/React.createElement(Input, {\n      id: \"mfaVerificationCode\",\n      type: \"tel\",\n      placeholder: \"Verify MFA Code\",\n      onChange: handleFieldChange,\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(LoaderButton, {\n      color: \"success\",\n      block: true,\n      isLoading: isLoading,\n      disabled: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, \"Verify Code\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      className: mfaFailedAlertVisible ? \"alert-shown\" : \"alert-hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 23\n      }\n    }, \"Failed to verify MFA code.\")))), /*#__PURE__*/React.createElement(CardFooter, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }))))));\n  }\n  function renderConfirmationForm() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app flex-row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      lg: \"7\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mx-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleConfirmationSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, \"Confirmation code\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }, \"Enter the code from your email to confirm.\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 25\n      }\n    }, \"#\")), /*#__PURE__*/React.createElement(Input, {\n      id: \"confirmationCode\",\n      type: \"tel\",\n      placeholder: \"Confirmation Code\",\n      onChange: handleFieldChange,\n      autoFocus: true,\n      value: fields.confirmationCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(LoaderButton, {\n      color: \"success\",\n      block: true,\n      isLoading: isLoading,\n      disabled: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }\n    }, \" \", \"Create Account\"))), /*#__PURE__*/React.createElement(CardFooter, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }\n    }))))));\n  }\n  function renderForm() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app flex-row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      lg: \"7\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mx-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }\n    }, \"Register Vendor\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, \"Create vendor account\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 25\n      }\n    }, \"@\")), /*#__PURE__*/React.createElement(Input, {\n      id: \"email\",\n      type: \"text\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      onChange: handleFieldChange,\n      value: fields.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-lock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      id: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"new-password\",\n      onChange: handleFieldChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-lock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      id: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      autoComplete: \"new-password\",\n      onChange: handleFieldChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(LoaderButton, {\n      color: \"success\",\n      block: true,\n      isLoading: isLoading,\n      disabled: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 21\n      }\n    }, \" \", \"Create Account\"))), /*#__PURE__*/React.createElement(CardFooter, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }\n    }))))));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 5\n    }\n  }, pageLoading ? /*#__PURE__*/React.createElement(LoadingBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }\n  }) : !jwtVald ? renderInvalid() : newUser === null ? renderForm() : userConfirmed === false ? renderConfirmationForm() : renderQRCode());\n}","map":{"version":3,"names":["React","useState","useEffect","Alert","Card","CardBody","CardFooter","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","LoaderButton","Auth","API","QRCode","queryString","LoadingBlock","apiGET","jwt","RegisterVendor","props","fields","setFields","email","password","confirmPassword","confirmationCode","mfaVerificationCode","newUser","setNewUser","userConfirmed","setUserConfirmed","isLoading","setIsLoading","qrLink","setQRLink","mfaQrCode","setMFAQRCode","mfaSession","setMFASession","userGuid","setUserGuid","mfaFailedAlertVisible","setMFAFailedAlertVisible","jwtVald","setJWTValid","pageLoading","setPageLoading","vendorId","setVendorId","onLoad","params","parse","location","search","url","concat","verifiedJWTResult","decodedJWT","decode","fieldsTemp","VendorEmail","VendorId","console","log","handleSubmit","event","preventDefault","signUp","username","attributes","e","alert","message","handleFieldChange","stateTemp","target","id","value","validateMFA","x","signIn","body","session","Session","apiName","path","myInit","headers","result","post","JSON","stringify","finaliseMFA","totp","code","device","handleConfirmationSubmit","confirmSignUp","then","data","SecretCode","catch","err","handleMFASubmit","history","push","renderInvalid","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","md","lg","xl","renderQRCode","onSubmit","addonType","type","placeholder","onChange","autoFocus","color","block","disabled","renderConfirmationForm","renderForm","autoComplete"],"sources":["/Users/JMD/Developments/Projects/Fiji-Web/src/views/Pages/RegisterVendor/RegisterVendor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nimport LoaderButton from \"../../../components/LoaderButton/LoaderButton\";\r\n\r\nimport { Auth, API } from \"aws-amplify\";\r\n\r\nimport QRCode from \"qrcode.react\";\r\n\r\nimport \"./RegisterVendor.scss\";\r\nimport queryString from \"query-string\";\r\nimport LoadingBlock from \"../../../components/loadingBlock/loadingBlock\";\r\nimport { apiGET } from \"../../../Common/Api/apiHelper\";\r\n\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport default function RegisterVendor(props) {\r\n  const [fields, setFields] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    confirmationCode: \"\",\r\n    mfaVerificationCode: \"\"\r\n  });\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [userConfirmed, setUserConfirmed] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [qrLink, setQRLink] = useState(\"\");\r\n  const [mfaQrCode, setMFAQRCode] = useState(\"\");\r\n  const [mfaSession, setMFASession] = useState(\"\");\r\n  const [userGuid, setUserGuid] = useState(\"\"); //eslint-disable-line\r\n  const [mfaFailedAlertVisible, setMFAFailedAlertVisible] = useState(false); //eslint-disable-line\r\n  const [jwtVald, setJWTValid] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true); // Render a loading block while we wait to verify the JWT\r\n  const [vendorId, setVendorId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    onLoad();\r\n  }, []); // eslint-disable-line\r\n\r\n  // Validate the JWT before we go any further and set up State\r\n  const onLoad = async () => {\r\n    let params = queryString.parse(props.location.search);\r\n\r\n    if (params.jwt) {\r\n      var url = `/jwtverify?jwt=${params.jwt}`;\r\n      var verifiedJWTResult = await apiGET(url, false);\r\n      if (verifiedJWTResult !== null) {\r\n        var decodedJWT = jwt.decode(params.jwt);\r\n\r\n        var fieldsTemp = { ...fields };\r\n        fieldsTemp.email = decodedJWT.VendorEmail;\r\n        setFields(fieldsTemp);\r\n\r\n        setVendorId(decodedJWT.VendorId);\r\n\r\n        setJWTValid(true); // Everything worked, display the registration form.\r\n      }\r\n    } else {\r\n      console.log(\"No JWT\");\r\n    }\r\n    setPageLoading(false);\r\n  };\r\n\r\n  // TODO: Use this\r\n  // function validateForm() {\r\n  //   return (\r\n  //     fields.email.length > 0 &&\r\n  //     fields.password.length > 0 &&\r\n  //     fields.password === fields.confirmPassword\r\n  //   );\r\n  // }\r\n\r\n  // function validateConfirmationForm() {\r\n  //   return fields.confirmationCode.length > 0;\r\n  // }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const newUser = await Auth.signUp({\r\n        username: fields.email,\r\n        password: fields.password,\r\n        attributes: {\r\n          \"custom:Group\": \"Vendor\", // custom attribute, not standard\r\n          \"custom:VendorId\": vendorId // custom attribute, not standard\r\n        }\r\n      });\r\n      setIsLoading(false);\r\n      setNewUser(newUser);\r\n    } catch (e) {\r\n      alert(e.message);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleFieldChange = event => {\r\n    var stateTemp = {\r\n      ...fields,\r\n      [event.target.id]: event.target.value\r\n    };\r\n\r\n    setFields(stateTemp);\r\n  };\r\n\r\n  /// #1 send the user session to validate MFA,\r\n  /// returns: MFA secret, MFA Session\r\n  const validateMFA = async () => {\r\n    var x = await Auth.signIn(fields.email, fields.password);\r\n    setUserGuid(x.username);\r\n    var body = {\r\n      session: x.Session\r\n    };\r\n\r\n    try {\r\n      let apiName = \"Fiji-Dev\";\r\n      let path = \"/signup/validate-mfa\";\r\n      let myInit = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body\r\n      };\r\n      var result = await API.post(apiName, path, myInit);\r\n    } catch (e) {\r\n      if (e.message === \"Request failed with status code 502\") {\r\n      } else {\r\n        alert(JSON.stringify(e));\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /// #2 Finalise MFA using the TOTP and Session from #1\r\n  /// Returns: MFA Session (unused)\r\n  const finaliseMFA = async totp => {\r\n    var body = {\r\n      session: mfaSession,\r\n      code: totp,\r\n      device: \"\"\r\n    };\r\n\r\n    try {\r\n      let apiName = \"Fiji-Dev\";\r\n      let path = \"/signup/finalise-mfa\";\r\n      let myInit = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body\r\n      };\r\n      var result = await API.post(apiName, path, myInit);\r\n    } catch (e) {\r\n      // TODO: Gracefully handle failed MFA\r\n      if (e.message === \"Request failed with status code 502\") {\r\n      } else {\r\n        alert(JSON.stringify(e));\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Authenticate with the user creds and MFA.\r\n  // Doesn't work because the TOTP is single use.\r\n  // const authWithMFA = async mses => {\r\n  //   try {\r\n  //     var mfaAuthSession = await Auth.signIn(fields.email, fields.password);\r\n\r\n  //     var body = {\r\n  //       session: mfaAuthSession.Session,\r\n  //       client_id: config.cognito.APP_CLIENT_ID,\r\n  //       username: userGuid,\r\n  //       code: fields.mfaVerificationCode\r\n  //     };\r\n\r\n  //     let apiName = \"Fiji-Dev\";\r\n  //     let path = \"/mfavalidator\";\r\n  //     let myInit = {\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\"\r\n  //       },\r\n  //       body\r\n  //     };\r\n  //     var result = await API.post(apiName, path, myInit);\r\n  //   } catch (e) {\r\n  //     if (e.message === \"Request failed with status code 502\") {\r\n  //     } else {\r\n  //       alert(JSON.stringify(e));\r\n  //     }\r\n  //   }\r\n  //   return result;\r\n  // };\r\n\r\n  async function handleConfirmationSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    await Auth.confirmSignUp(fields.email, fields.confirmationCode).then(data =>\r\n      console.log(data)\r\n    );\r\n\r\n    try {\r\n      // Get secret from API\r\n      await validateMFA()\r\n        .then(data => {\r\n          setMFAQRCode(data.SecretCode);\r\n\r\n          setMFASession(data.Session);\r\n\r\n          setQRLink(\r\n            \"otpauth://totp/Fortian:\" +\r\n              fields.email +\r\n              \"?secret=\" +\r\n              data.SecretCode +\r\n              \"&issuer=FortianMSS\"\r\n          );\r\n        })\r\n        .catch(err => console.log(err));\r\n      setUserConfirmed(true);\r\n      setIsLoading(false);\r\n      //});\r\n    } catch (e) {\r\n      alert(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handleMFASubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    await finaliseMFA(fields.mfaVerificationCode);\r\n    //.then(data => {\r\n    //   try {\r\n    //     var newMFASession = \"\";\r\n    //     newMFASession = data.body.Session;\r\n    //   } catch (e) {\r\n    //     alert(\"Waiting for Reece to fix the Lambda :)\");\r\n    //     alert(JSON.stringify(e.message));\r\n    //   }\r\n    // });\r\n    // TODO: make this a bit more graceful. provide user feedback (success alert)\r\n    props.history.push(\"/login\");\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  // function showMFAAlert() {\r\n  //   setMFAFailedAlertVisible(true);\r\n\r\n  //   setTimeout(() => {\r\n  //     setMFAFailedAlertVisible(false);\r\n  //   }, 5000);\r\n  // }\r\n\r\n  function renderInvalid() {\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <Card className=\"mx-4\">\r\n                <CardBody className=\"p-4\">\r\n                  <p>To register as a vendor, please contact Fortian.</p>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderQRCode() {\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <Card className=\"mx-4\">\r\n                <CardBody className=\"p-4\">\r\n                  <Form onSubmit={handleMFASubmit}>\r\n                    <h1>Enable MFA</h1>\r\n                    <p className=\"text-muted\">\r\n                      Enter the code from your email to confirm.\r\n                    </p>\r\n\r\n                    <QRCode value={qrLink} />\r\n                    <p>\r\n                      Scan the code above in your Authenticator app of choice.\r\n                    </p>\r\n                    <p>\r\n                      If you are unable to scan the image, enter the following\r\n                      information:\r\n                      <br />\r\n                      code: {mfaQrCode}\r\n                    </p>\r\n                    <p>\r\n                      Enter the value in the field below to verify the account.\r\n                    </p>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>#</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        id=\"mfaVerificationCode\"\r\n                        type=\"tel\"\r\n                        placeholder=\"Verify MFA Code\"\r\n                        onChange={handleFieldChange}\r\n                        autoFocus\r\n                      />\r\n                    </InputGroup>\r\n                    <LoaderButton\r\n                      color=\"success\"\r\n                      block\r\n                      isLoading={isLoading}\r\n                      disabled={isLoading}\r\n                    >\r\n                      Verify Code\r\n                    </LoaderButton>\r\n                    <p>\r\n                      <Alert\r\n                        color=\"danger\"\r\n                        className={\r\n                          mfaFailedAlertVisible ? \"alert-shown\" : \"alert-hidden\"\r\n                        }\r\n                      >\r\n                        Failed to verify MFA code.\r\n                      </Alert>\r\n                    </p>\r\n                  </Form>\r\n                </CardBody>\r\n                <CardFooter className=\"p-4\"></CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <Card className=\"mx-4\">\r\n                <CardBody className=\"p-4\">\r\n                  <Form onSubmit={handleConfirmationSubmit}>\r\n                    <h1>Confirmation code</h1>\r\n                    <p className=\"text-muted\">\r\n                      Enter the code from your email to confirm.\r\n                    </p>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>#</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        id=\"confirmationCode\"\r\n                        type=\"tel\"\r\n                        placeholder=\"Confirmation Code\"\r\n                        onChange={handleFieldChange}\r\n                        autoFocus\r\n                        value={fields.confirmationCode}\r\n                      />\r\n                    </InputGroup>\r\n                    <LoaderButton\r\n                      color=\"success\"\r\n                      block\r\n                      isLoading={isLoading}\r\n                      disabled={isLoading}\r\n                    >\r\n                      {\" \"}\r\n                      Create Account\r\n                    </LoaderButton>\r\n                  </Form>\r\n                </CardBody>\r\n                <CardFooter className=\"p-4\"></CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderForm() {\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <Card className=\"mx-4\">\r\n                <CardBody className=\"p-4\">\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <h1>Register Vendor</h1>\r\n                    <p className=\"text-muted\">Create vendor account</p>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>@</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleFieldChange}\r\n                        value={fields.email}\r\n                      />\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                          <i className=\"icon-lock\"></i>\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        autoComplete=\"new-password\"\r\n                        onChange={handleFieldChange}\r\n                      />\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-4\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                          <i className=\"icon-lock\"></i>\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        id=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm password\"\r\n                        autoComplete=\"new-password\"\r\n                        onChange={handleFieldChange}\r\n                      />\r\n                    </InputGroup>\r\n                    <LoaderButton\r\n                      color=\"success\"\r\n                      block\r\n                      isLoading={isLoading}\r\n                      disabled={isLoading}\r\n                    >\r\n                      {\" \"}\r\n                      Create Account\r\n                    </LoaderButton>\r\n                  </Form>\r\n                </CardBody>\r\n                <CardFooter className=\"p-4\">\r\n                  {/* <Row>\r\n                    <Col xs=\"12\" sm=\"6\">\r\n                      <Button className=\"btn-facebook mb-1\" block>\r\n                        <span>facebook</span>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col xs=\"12\" sm=\"6\">\r\n                      <Button className=\"btn-twitter mb-1\" block>\r\n                        <span>twitter</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row> */}\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Register\">\r\n      {pageLoading ? (\r\n        <LoadingBlock />\r\n      ) : !jwtVald ? (\r\n        renderInvalid()\r\n      ) : newUser === null ? (\r\n        renderForm()\r\n      ) : userConfirmed === false ? (\r\n        renderConfirmationForm()\r\n      ) : (\r\n        renderQRCode()\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,UAAU,EACVC,GAAG,EACHC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,UAAU,EACVC,eAAe,EACfC,cAAc,EACdC,GAAG,QACE,YAAY;AAEnB,OAAOC,YAAY,MAAM,+CAA+C;AAExE,SAASC,IAAI,EAAEC,GAAG,QAAQ,aAAa;AAEvC,OAAOC,MAAM,MAAM,cAAc;AAEjC,OAAO,uBAAuB;AAC9B,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,YAAY,MAAM,+CAA+C;AACxE,SAASC,MAAM,QAAQ,+BAA+B;AAEtD,OAAOC,GAAG,MAAM,cAAc;AAE9B,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC;IACnC0B,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,gBAAgB,EAAE,EAAE;IACpBC,mBAAmB,EAAE;EACvB,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqC,MAAM,EAAEC,SAAS,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAAC6C,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3E,MAAM,CAAC+C,OAAO,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACmD,QAAQ,EAAEC,WAAW,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdoD,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMA,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAIC,MAAM,GAAGpC,WAAW,CAACqC,KAAK,CAAChC,KAAK,CAACiC,QAAQ,CAACC,MAAM,CAAC;IAErD,IAAIH,MAAM,CAACjC,GAAG,EAAE;MACd,IAAIqC,GAAG,qBAAAC,MAAA,CAAqBL,MAAM,CAACjC,GAAG,CAAE;MACxC,IAAIuC,iBAAiB,GAAG,MAAMxC,MAAM,CAACsC,GAAG,EAAE,KAAK,CAAC;MAChD,IAAIE,iBAAiB,KAAK,IAAI,EAAE;QAC9B,IAAIC,UAAU,GAAGxC,GAAG,CAACyC,MAAM,CAACR,MAAM,CAACjC,GAAG,CAAC;QAEvC,IAAI0C,UAAU,GAAG;UAAE,GAAGvC;QAAO,CAAC;QAC9BuC,UAAU,CAACrC,KAAK,GAAGmC,UAAU,CAACG,WAAW;QACzCvC,SAAS,CAACsC,UAAU,CAAC;QAErBX,WAAW,CAACS,UAAU,CAACI,QAAQ,CAAC;QAEhCjB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;MACrB;IACF,CAAC,MAAM;MACLkB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB;IACAjB,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,eAAekB,YAAYA,CAACC,KAAK,EAAE;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtBlC,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAML,OAAO,GAAG,MAAMhB,IAAI,CAACwD,MAAM,CAAC;QAChCC,QAAQ,EAAEhD,MAAM,CAACE,KAAK;QACtBC,QAAQ,EAAEH,MAAM,CAACG,QAAQ;QACzB8C,UAAU,EAAE;UACV,cAAc,EAAE,QAAQ;UAAE;UAC1B,iBAAiB,EAAEtB,QAAQ,CAAC;QAC9B;MACF,CAAC,CAAC;MACFf,YAAY,CAAC,KAAK,CAAC;MACnBJ,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC,OAAO2C,CAAC,EAAE;MACVC,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;MAChBxC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF;EAEA,MAAMyC,iBAAiB,GAAGR,KAAK,IAAI;IACjC,IAAIS,SAAS,GAAG;MACd,GAAGtD,MAAM;MACT,CAAC6C,KAAK,CAACU,MAAM,CAACC,EAAE,GAAGX,KAAK,CAACU,MAAM,CAACE;IAClC,CAAC;IAEDxD,SAAS,CAACqD,SAAS,CAAC;EACtB,CAAC;;EAED;EACA;EACA,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIC,CAAC,GAAG,MAAMpE,IAAI,CAACqE,MAAM,CAAC5D,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,QAAQ,CAAC;IACxDiB,WAAW,CAACuC,CAAC,CAACX,QAAQ,CAAC;IACvB,IAAIa,IAAI,GAAG;MACTC,OAAO,EAAEH,CAAC,CAACI;IACb,CAAC;IAED,IAAI;MACF,IAAIC,OAAO,GAAG,UAAU;MACxB,IAAIC,IAAI,GAAG,sBAAsB;MACjC,IAAIC,MAAM,GAAG;QACXC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDN;MACF,CAAC;MACD,IAAIO,MAAM,GAAG,MAAM5E,GAAG,CAAC6E,IAAI,CAACL,OAAO,EAAEC,IAAI,EAAEC,MAAM,CAAC;IACpD,CAAC,CAAC,OAAOhB,CAAC,EAAE;MACV,IAAIA,CAAC,CAACE,OAAO,KAAK,qCAAqC,EAAE,CACzD,CAAC,MAAM;QACLD,KAAK,CAACmB,IAAI,CAACC,SAAS,CAACrB,CAAC,CAAC,CAAC;MAC1B;IACF;IACA,OAAOkB,MAAM;EACf,CAAC;;EAED;EACA;EACA,MAAMI,WAAW,GAAG,MAAMC,IAAI,IAAI;IAChC,IAAIZ,IAAI,GAAG;MACTC,OAAO,EAAE7C,UAAU;MACnByD,IAAI,EAAED,IAAI;MACVE,MAAM,EAAE;IACV,CAAC;IAED,IAAI;MACF,IAAIX,OAAO,GAAG,UAAU;MACxB,IAAIC,IAAI,GAAG,sBAAsB;MACjC,IAAIC,MAAM,GAAG;QACXC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDN;MACF,CAAC;MACD,IAAIO,MAAM,GAAG,MAAM5E,GAAG,CAAC6E,IAAI,CAACL,OAAO,EAAEC,IAAI,EAAEC,MAAM,CAAC;IACpD,CAAC,CAAC,OAAOhB,CAAC,EAAE;MACV;MACA,IAAIA,CAAC,CAACE,OAAO,KAAK,qCAAqC,EAAE,CACzD,CAAC,MAAM;QACLD,KAAK,CAACmB,IAAI,CAACC,SAAS,CAACrB,CAAC,CAAC,CAAC;MAC1B;IACF;IACA,OAAOkB,MAAM;EACf,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,eAAeQ,wBAAwBA,CAAC/B,KAAK,EAAE;IAC7CA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBlC,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMrB,IAAI,CAACsF,aAAa,CAAC7E,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACK,gBAAgB,CAAC,CAACyE,IAAI,CAACC,IAAI,IACvErC,OAAO,CAACC,GAAG,CAACoC,IAAI,CAClB,CAAC;IAED,IAAI;MACF;MACA,MAAMrB,WAAW,CAAC,CAAC,CAChBoB,IAAI,CAACC,IAAI,IAAI;QACZ/D,YAAY,CAAC+D,IAAI,CAACC,UAAU,CAAC;QAE7B9D,aAAa,CAAC6D,IAAI,CAAChB,OAAO,CAAC;QAE3BjD,SAAS,CACP,yBAAyB,GACvBd,MAAM,CAACE,KAAK,GACZ,UAAU,GACV6E,IAAI,CAACC,UAAU,GACf,oBACJ,CAAC;MACH,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIxC,OAAO,CAACC,GAAG,CAACuC,GAAG,CAAC,CAAC;MACjCxE,gBAAgB,CAAC,IAAI,CAAC;MACtBE,YAAY,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,OAAOsC,CAAC,EAAE;MACVC,KAAK,CAACD,CAAC,CAAC;MACRtC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF;EAEA,eAAeuE,eAAeA,CAACtC,KAAK,EAAE;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBlC,YAAY,CAAC,IAAI,CAAC;IAClB,MAAM4D,WAAW,CAACxE,MAAM,CAACM,mBAAmB,CAAC;IAC7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAP,KAAK,CAACqF,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAE5BzE,YAAY,CAAC,KAAK,CAAC;EACrB;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,SAAS0E,aAAaA,CAAA,EAAG;IACvB,oBACE/G,KAAA,CAAAgH,aAAA;MAAKC,SAAS,EAAC,iCAAiC;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9CvH,KAAA,CAAAgH,aAAA,CAACxG,SAAS;MAAA0G,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACRvH,KAAA,CAAAgH,aAAA,CAAClG,GAAG;MAACmG,SAAS,EAAC,wBAAwB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrCvH,KAAA,CAAAgH,aAAA,CAACzG,GAAG;MAACiH,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBvH,KAAA,CAAAgH,aAAA,CAAC5G,IAAI;MAAC6G,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpBvH,KAAA,CAAAgH,aAAA,CAAC3G,QAAQ;MAAC4G,SAAS,EAAC,KAAK;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBvH,KAAA,CAAAgH,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,kDAAmD,CAC9C,CACN,CACH,CACF,CACI,CACR,CAAC;EAEV;EAEA,SAASI,YAAYA,CAAA,EAAG;IACtB,oBACE3H,KAAA,CAAAgH,aAAA;MAAKC,SAAS,EAAC,iCAAiC;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9CvH,KAAA,CAAAgH,aAAA,CAACxG,SAAS;MAAA0G,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACRvH,KAAA,CAAAgH,aAAA,CAAClG,GAAG;MAACmG,SAAS,EAAC,wBAAwB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrCvH,KAAA,CAAAgH,aAAA,CAACzG,GAAG;MAACiH,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBvH,KAAA,CAAAgH,aAAA,CAAC5G,IAAI;MAAC6G,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpBvH,KAAA,CAAAgH,aAAA,CAAC3G,QAAQ;MAAC4G,SAAS,EAAC,KAAK;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBvH,KAAA,CAAAgH,aAAA,CAACvG,IAAI;MAACmH,QAAQ,EAAEhB,eAAgB;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9BvH,KAAA,CAAAgH,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,YAAc,CAAC,eACnBvH,KAAA,CAAAgH,aAAA;MAAGC,SAAS,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,4CAEvB,CAAC,eAEJvH,KAAA,CAAAgH,aAAA,CAAC9F,MAAM;MAACgE,KAAK,EAAE5C,MAAO;MAAA4E,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,eACzBvH,KAAA,CAAAgH,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,0DAEA,CAAC,eACJvH,KAAA,CAAAgH,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,uEAGD,eAAAvH,KAAA,CAAAgH,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAK,CAAC,UACA,EAAC/E,SACN,CAAC,eACJxC,KAAA,CAAAgH,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,2DAEA,CAAC,eACJvH,KAAA,CAAAgH,aAAA,CAACrG,UAAU;MAACsG,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1BvH,KAAA,CAAAgH,aAAA,CAACpG,eAAe;MAACiH,SAAS,EAAC,SAAS;MAAAX,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClCvH,KAAA,CAAAgH,aAAA,CAACnG,cAAc;MAAAqG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,GAAiB,CAClB,CAAC,eAClBvH,KAAA,CAAAgH,aAAA,CAACtG,KAAK;MACJuE,EAAE,EAAC,qBAAqB;MACxB6C,IAAI,EAAC,KAAK;MACVC,WAAW,EAAC,iBAAiB;MAC7BC,QAAQ,EAAElD,iBAAkB;MAC5BmD,SAAS;MAAAf,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACV,CACS,CAAC,eACbvH,KAAA,CAAAgH,aAAA,CAACjG,YAAY;MACXmH,KAAK,EAAC,SAAS;MACfC,KAAK;MACL/F,SAAS,EAAEA,SAAU;MACrBgG,QAAQ,EAAEhG,SAAU;MAAA8E,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACrB,aAEa,CAAC,eACfvH,KAAA,CAAAgH,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEvH,KAAA,CAAAgH,aAAA,CAAC7G,KAAK;MACJ+H,KAAK,EAAC,QAAQ;MACdjB,SAAS,EACPnE,qBAAqB,GAAG,aAAa,GAAG,cACzC;MAAAoE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACF,4BAEM,CACN,CACC,CACE,CAAC,eACXvH,KAAA,CAAAgH,aAAA,CAAC1G,UAAU;MAAC2G,SAAS,EAAC,KAAK;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAa,CACpC,CACH,CACF,CACI,CACR,CAAC;EAEV;EAEA,SAASc,sBAAsBA,CAAA,EAAG;IAChC,oBACErI,KAAA,CAAAgH,aAAA;MAAKC,SAAS,EAAC,iCAAiC;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9CvH,KAAA,CAAAgH,aAAA,CAACxG,SAAS;MAAA0G,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACRvH,KAAA,CAAAgH,aAAA,CAAClG,GAAG;MAACmG,SAAS,EAAC,wBAAwB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrCvH,KAAA,CAAAgH,aAAA,CAACzG,GAAG;MAACiH,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBvH,KAAA,CAAAgH,aAAA,CAAC5G,IAAI;MAAC6G,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpBvH,KAAA,CAAAgH,aAAA,CAAC3G,QAAQ;MAAC4G,SAAS,EAAC,KAAK;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBvH,KAAA,CAAAgH,aAAA,CAACvG,IAAI;MAACmH,QAAQ,EAAEvB,wBAAyB;MAAAa,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvCvH,KAAA,CAAAgH,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,mBAAqB,CAAC,eAC1BvH,KAAA,CAAAgH,aAAA;MAAGC,SAAS,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,4CAEvB,CAAC,eACJvH,KAAA,CAAAgH,aAAA,CAACrG,UAAU;MAACsG,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1BvH,KAAA,CAAAgH,aAAA,CAACpG,eAAe;MAACiH,SAAS,EAAC,SAAS;MAAAX,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClCvH,KAAA,CAAAgH,aAAA,CAACnG,cAAc;MAAAqG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,GAAiB,CAClB,CAAC,eAClBvH,KAAA,CAAAgH,aAAA,CAACtG,KAAK;MACJuE,EAAE,EAAC,kBAAkB;MACrB6C,IAAI,EAAC,KAAK;MACVC,WAAW,EAAC,mBAAmB;MAC/BC,QAAQ,EAAElD,iBAAkB;MAC5BmD,SAAS;MACT/C,KAAK,EAAEzD,MAAM,CAACK,gBAAiB;MAAAoF,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAChC,CACS,CAAC,eACbvH,KAAA,CAAAgH,aAAA,CAACjG,YAAY;MACXmH,KAAK,EAAC,SAAS;MACfC,KAAK;MACL/F,SAAS,EAAEA,SAAU;MACrBgG,QAAQ,EAAEhG,SAAU;MAAA8E,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEnB,GAAG,EAAC,gBAEO,CACV,CACE,CAAC,eACXvH,KAAA,CAAAgH,aAAA,CAAC1G,UAAU;MAAC2G,SAAS,EAAC,KAAK;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAa,CACpC,CACH,CACF,CACI,CACR,CAAC;EAEV;EAEA,SAASe,UAAUA,CAAA,EAAG;IACpB,oBACEtI,KAAA,CAAAgH,aAAA;MAAKC,SAAS,EAAC,iCAAiC;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9CvH,KAAA,CAAAgH,aAAA,CAACxG,SAAS;MAAA0G,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACRvH,KAAA,CAAAgH,aAAA,CAAClG,GAAG;MAACmG,SAAS,EAAC,wBAAwB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrCvH,KAAA,CAAAgH,aAAA,CAACzG,GAAG;MAACiH,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBvH,KAAA,CAAAgH,aAAA,CAAC5G,IAAI;MAAC6G,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpBvH,KAAA,CAAAgH,aAAA,CAAC3G,QAAQ;MAAC4G,SAAS,EAAC,KAAK;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBvH,KAAA,CAAAgH,aAAA,CAACvG,IAAI;MAACmH,QAAQ,EAAEvD,YAAa;MAAA6C,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC3BvH,KAAA,CAAAgH,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,iBAAmB,CAAC,eACxBvH,KAAA,CAAAgH,aAAA;MAAGC,SAAS,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,uBAAwB,CAAC,eACnDvH,KAAA,CAAAgH,aAAA,CAACrG,UAAU;MAACsG,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1BvH,KAAA,CAAAgH,aAAA,CAACpG,eAAe;MAACiH,SAAS,EAAC,SAAS;MAAAX,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClCvH,KAAA,CAAAgH,aAAA,CAACnG,cAAc;MAAAqG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,GAAiB,CAClB,CAAC,eAClBvH,KAAA,CAAAgH,aAAA,CAACtG,KAAK;MACJuE,EAAE,EAAC,OAAO;MACV6C,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,OAAO;MACnBQ,YAAY,EAAC,OAAO;MACpBP,QAAQ,EAAElD,iBAAkB;MAC5BI,KAAK,EAAEzD,MAAM,CAACE,KAAM;MAAAuF,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACrB,CACS,CAAC,eACbvH,KAAA,CAAAgH,aAAA,CAACrG,UAAU;MAACsG,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1BvH,KAAA,CAAAgH,aAAA,CAACpG,eAAe;MAACiH,SAAS,EAAC,SAAS;MAAAX,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClCvH,KAAA,CAAAgH,aAAA,CAACnG,cAAc;MAAAqG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACbvH,KAAA,CAAAgH,aAAA;MAAGC,SAAS,EAAC,WAAW;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAI,CACd,CACD,CAAC,eAClBvH,KAAA,CAAAgH,aAAA,CAACtG,KAAK;MACJuE,EAAE,EAAC,UAAU;MACb6C,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBQ,YAAY,EAAC,cAAc;MAC3BP,QAAQ,EAAElD,iBAAkB;MAAAoC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAC7B,CACS,CAAC,eACbvH,KAAA,CAAAgH,aAAA,CAACrG,UAAU;MAACsG,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1BvH,KAAA,CAAAgH,aAAA,CAACpG,eAAe;MAACiH,SAAS,EAAC,SAAS;MAAAX,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClCvH,KAAA,CAAAgH,aAAA,CAACnG,cAAc;MAAAqG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACbvH,KAAA,CAAAgH,aAAA;MAAGC,SAAS,EAAC,WAAW;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAI,CACd,CACD,CAAC,eAClBvH,KAAA,CAAAgH,aAAA,CAACtG,KAAK;MACJuE,EAAE,EAAC,iBAAiB;MACpB6C,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,kBAAkB;MAC9BQ,YAAY,EAAC,cAAc;MAC3BP,QAAQ,EAAElD,iBAAkB;MAAAoC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAC7B,CACS,CAAC,eACbvH,KAAA,CAAAgH,aAAA,CAACjG,YAAY;MACXmH,KAAK,EAAC,SAAS;MACfC,KAAK;MACL/F,SAAS,EAAEA,SAAU;MACrBgG,QAAQ,EAAEhG,SAAU;MAAA8E,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEnB,GAAG,EAAC,gBAEO,CACV,CACE,CAAC,eACXvH,KAAA,CAAAgH,aAAA,CAAC1G,UAAU;MAAC2G,SAAS,EAAC,KAAK;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAaf,CACR,CACH,CACF,CACI,CACR,CAAC;EAEV;EAEA,oBACEvH,KAAA,CAAAgH,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBrE,WAAW,gBACVlD,KAAA,CAAAgH,aAAA,CAAC5F,YAAY;IAAA8F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,GACd,CAACvE,OAAO,GACV+D,aAAa,CAAC,CAAC,GACb/E,OAAO,KAAK,IAAI,GAClBsG,UAAU,CAAC,CAAC,GACVpG,aAAa,KAAK,KAAK,GACzBmG,sBAAsB,CAAC,CAAC,GAExBV,YAAY,CAAC,CAEZ,CAAC;AAEV"},"metadata":{},"sourceType":"module"}