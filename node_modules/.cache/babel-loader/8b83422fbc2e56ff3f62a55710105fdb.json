{"ast":null,"code":"/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\nexport var DateUtils = {\n  /**\n   * Milliseconds to offset the date to compensate for clock skew between device & services\n   */\n  clockOffset: 0,\n  getDateWithClockOffset: function () {\n    if (DateUtils.clockOffset) {\n      return new Date(new Date().getTime() + DateUtils.clockOffset);\n    } else {\n      return new Date();\n    }\n  },\n  /**\n   * @returns {number} Clock offset in milliseconds\n   */\n  getClockOffset: function () {\n    return DateUtils.clockOffset;\n  },\n  /**\n   * @param {number} offset Clock offset in milliseconds\n   */\n  setClockOffset: function (offset) {\n    DateUtils.clockOffset = offset;\n  }\n};","map":{"version":3,"sources":["../../src/Util/DateUtils.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AAEH,OAAO,IAAM,SAAS,GAAG;EACxB;;AAEG;EACH,WAAW,EAAE,CAAC;EAEd,sBAAsB,EAAA,SAAA,CAAA,EAAA;IACrB,IAAI,SAAS,CAAC,WAAW,EAAE;MAC1B,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,CAAA,CAAE,CAAC,OAAO,CAAA,CAAE,GAAG,SAAS,CAAC,WAAW,CAAC;KAC7D,MAAM;MACN,OAAO,IAAI,IAAI,CAAA,CAAE;IACjB;EACF,CAAC;EAED;;AAEG;EACH,cAAc,EAAA,SAAA,CAAA,EAAA;IACb,OAAO,SAAS,CAAC,WAAW;EAC7B,CAAC;EAED;;AAEG;EACH,cAAc,EAAd,SAAA,CAAe,MAAc,EAAA;IAC5B,SAAS,CAAC,WAAW,GAAG,MAAM;EAC/B;CACA","sourceRoot":"","sourcesContent":["/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\nexport var DateUtils = {\n    /**\n     * Milliseconds to offset the date to compensate for clock skew between device & services\n     */\n    clockOffset: 0,\n    getDateWithClockOffset: function () {\n        if (DateUtils.clockOffset) {\n            return new Date(new Date().getTime() + DateUtils.clockOffset);\n        }\n        else {\n            return new Date();\n        }\n    },\n    /**\n     * @returns {number} Clock offset in milliseconds\n     */\n    getClockOffset: function () {\n        return DateUtils.clockOffset;\n    },\n    /**\n     * @param {number} offset Clock offset in milliseconds\n     */\n    setClockOffset: function (offset) {\n        DateUtils.clockOffset = offset;\n    },\n};\n//# sourceMappingURL=DateUtils.js.map"]},"metadata":{},"sourceType":"module"}