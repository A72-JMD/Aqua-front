{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global['custom-tooltips'] = {}));\n})(this, function (exports) {\n  'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n  function CustomTooltips(tooltipModel) {\n    var _this = this;\n\n    // Add unique id if not exist\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n    var position = this._chart.canvas.getBoundingClientRect();\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft;\n    var positionLeft = positionX + tooltipModel.caretX;\n    var positionTop = positionY + tooltipModel.caretY; // eslint-disable-next-line\n\n    var halfWidth = tooltipModel.width / 2;\n    if (positionLeft + halfWidth > position.width) {\n      positionLeft -= halfWidth;\n    } else if (positionLeft < halfWidth) {\n      positionLeft += halfWidth;\n    } // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionLeft + \"px\";\n    tooltip.style.top = positionTop + \"px\";\n  }\n  var customTooltips = CustomTooltips; // TODO: camel-case\n\n  exports.CustomTooltips = CustomTooltips;\n  exports.customTooltips = customTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../../js/custom-tooltips.js","../../js/index.js"],"names":["CustomTooltips","tooltipModel","_setCanvasId","_idMaker","_hex","_multiplier","Math","random","toString","_canvasId","_chart","canvas","id","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","tooltip","document","getElementById","createElement","className","parentNode","appendChild","opacity","style","classList","remove","yAlign","add","body","titleLines","title","tooltipHeader","forEach","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","map","item","lines","i","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","backgroundColor","split","length","tooltipBodyItemLabel","tooltipBodyItemValue","pop","position","getBoundingClientRect","positionY","offsetTop","positionX","offsetLeft","positionLeft","caretX","positionTop","caretY","halfWidth","width","left","top","customTooltips"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\n * Licensed under MIT (https://coreui.io/license)\n * --------------------------------------------------------------------------\n */\n\nfunction CustomTooltips(tooltipModel) {\n  // Add unique id if not exist\n  const _setCanvasId = () => {\n    const _idMaker = () => {\n      const _hex = 16\n      const _multiplier = 0x10000\n      return ((1 + Math.random()) * _multiplier | 0).toString(_hex)\n    }\n    const _canvasId = `_canvas-${_idMaker() + _idMaker()}`\n    this._chart.canvas.id = _canvasId\n    return _canvasId\n  }\n\n  const ClassName = {\n    ABOVE                   : 'above',\n    BELOW                   : 'below',\n    CHARTJS_TOOLTIP         : 'chartjs-tooltip',\n    NO_TRANSFORM            : 'no-transform',\n    TOOLTIP_BODY            : 'tooltip-body',\n    TOOLTIP_BODY_ITEM       : 'tooltip-body-item',\n    TOOLTIP_BODY_ITEM_COLOR : 'tooltip-body-item-color',\n    TOOLTIP_BODY_ITEM_LABEL : 'tooltip-body-item-label',\n    TOOLTIP_BODY_ITEM_VALUE : 'tooltip-body-item-value',\n    TOOLTIP_HEADER          : 'tooltip-header',\n    TOOLTIP_HEADER_ITEM     : 'tooltip-header-item'\n  }\n\n  const Selector = {\n    DIV     : 'div',\n    SPAN    : 'span',\n    TOOLTIP : `${this._chart.canvas.id || _setCanvasId()}-tooltip`\n  }\n\n  let tooltip = document.getElementById(Selector.TOOLTIP)\n\n  if (!tooltip) {\n    tooltip = document.createElement('div')\n    tooltip.id = Selector.TOOLTIP\n    tooltip.className = ClassName.CHARTJS_TOOLTIP\n    this._chart.canvas.parentNode.appendChild(tooltip)\n  }\n\n  // Hide if no tooltip\n  if (tooltipModel.opacity === 0) {\n    tooltip.style.opacity = 0\n    return\n  }\n\n  // Set caret Position\n  tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM)\n  if (tooltipModel.yAlign) {\n    tooltip.classList.add(tooltipModel.yAlign)\n  } else {\n    tooltip.classList.add(ClassName.NO_TRANSFORM)\n  }\n\n  // Set Text\n  if (tooltipModel.body) {\n    const titleLines = tooltipModel.title || []\n\n    const tooltipHeader = document.createElement(Selector.DIV)\n    tooltipHeader.className = ClassName.TOOLTIP_HEADER\n\n    titleLines.forEach((title) => {\n      const tooltipHeaderTitle = document.createElement(Selector.DIV)\n      tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM\n      tooltipHeaderTitle.innerHTML = title\n      tooltipHeader.appendChild(tooltipHeaderTitle)\n    })\n\n    const tooltipBody = document.createElement(Selector.DIV)\n    tooltipBody.className = ClassName.TOOLTIP_BODY\n\n    const tooltipBodyItems = tooltipModel.body.map((item) => item.lines)\n    tooltipBodyItems.forEach((item, i) => {\n      const tooltipBodyItem = document.createElement(Selector.DIV)\n      tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM\n\n      const colors = tooltipModel.labelColors[i]\n\n      const tooltipBodyItemColor = document.createElement(Selector.SPAN)\n      tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR\n      tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor\n\n      tooltipBodyItem.appendChild(tooltipBodyItemColor)\n\n      if (item[0].split(':').length > 1) {\n        const tooltipBodyItemLabel = document.createElement(Selector.SPAN)\n        tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL\n        tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0]\n\n        tooltipBodyItem.appendChild(tooltipBodyItemLabel)\n\n        const tooltipBodyItemValue = document.createElement(Selector.SPAN)\n        tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE\n        tooltipBodyItemValue.innerHTML = item[0].split(': ').pop()\n\n        tooltipBodyItem.appendChild(tooltipBodyItemValue)\n      } else {\n        const tooltipBodyItemValue = document.createElement(Selector.SPAN)\n        tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE\n        tooltipBodyItemValue.innerHTML = item[0]\n\n        tooltipBodyItem.appendChild(tooltipBodyItemValue)\n      }\n\n      tooltipBody.appendChild(tooltipBodyItem)\n    })\n\n    tooltip.innerHTML = ''\n\n    tooltip.appendChild(tooltipHeader)\n    tooltip.appendChild(tooltipBody)\n  }\n\n  const position = this._chart.canvas.getBoundingClientRect()\n\n  const positionY = this._chart.canvas.offsetTop\n  const positionX = this._chart.canvas.offsetLeft\n\n  let positionLeft = positionX + tooltipModel.caretX\n  const positionTop = positionY + tooltipModel.caretY\n  // eslint-disable-next-line\n  const halfWidth = tooltipModel.width / 2\n\n  if (positionLeft + halfWidth > position.width) {\n    positionLeft -= halfWidth\n  } else if (positionLeft < halfWidth) {\n    positionLeft += halfWidth\n  }\n\n  // Display, position, and set styles for font\n  tooltip.style.opacity = 1\n  tooltip.style.left = `${positionLeft}px`\n  tooltip.style.top = `${positionTop}px`\n}\n\nexport default CustomTooltips\n","import CustomTooltips from './custom-tooltips'\nconst customTooltips = CustomTooltips\n// TODO: camel-case\nexport {\n  CustomTooltips,\n  customTooltips\n}\n"]},"metadata":{},"sourceType":"script"}