{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport API from '@aws-amplify/api';\nimport Observable from 'zen-observable-ts';\nimport { buildGraphQLOperation } from '../utils';\nimport { jitteredExponentialRetry } from '@aws-amplify/core';\nvar DEFAULT_PAGINATION_LIMIT = 100;\nvar DEFAULT_MAX_RECORDS_TO_SYNC = 10000;\nvar SyncProcessor = /** @class */function () {\n  function SyncProcessor(schema, maxRecordsToSync, syncPageSize) {\n    if (maxRecordsToSync === void 0) {\n      maxRecordsToSync = DEFAULT_MAX_RECORDS_TO_SYNC;\n    }\n    if (syncPageSize === void 0) {\n      syncPageSize = DEFAULT_PAGINATION_LIMIT;\n    }\n    this.schema = schema;\n    this.maxRecordsToSync = maxRecordsToSync;\n    this.syncPageSize = syncPageSize;\n    this.typeQuery = new WeakMap();\n    this.generateQueries();\n  }\n  SyncProcessor.prototype.generateQueries = function () {\n    var _this = this;\n    Object.values(this.schema.namespaces).forEach(function (namespace) {\n      Object.values(namespace.models).filter(function (_a) {\n        var syncable = _a.syncable;\n        return syncable;\n      }).forEach(function (model) {\n        var _a = buildGraphQLOperation(namespace, model, 'LIST')[0],\n          opNameQuery = _a.slice(1);\n        _this.typeQuery.set(model, opNameQuery);\n      });\n    });\n  };\n  SyncProcessor.prototype.retrievePage = function (modelDefinition, lastSync, nextToken, limit) {\n    if (limit === void 0) {\n      limit = null;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, opName, query, variables, data, _b, opResult, items, newNextToken, startedAt;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.typeQuery.get(modelDefinition), opName = _a[0], query = _a[1];\n            variables = {\n              limit: limit,\n              nextToken: nextToken,\n              lastSync: lastSync\n            };\n            return [4 /*yield*/, this.jitteredRetry(query, variables)];\n          case 1:\n            data = _c.sent().data;\n            _b = opName, opResult = data[_b];\n            items = opResult.items, newNextToken = opResult.nextToken, startedAt = opResult.startedAt;\n            return [2 /*return*/, {\n              nextToken: newNextToken,\n              startedAt: startedAt,\n              items: items\n            }];\n        }\n      });\n    });\n  };\n  SyncProcessor.prototype.jitteredRetry = function (query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, jitteredExponentialRetry(function (query, variables) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4 /*yield*/, API.graphql({\n                        query: query,\n                        variables: variables\n                      })];\n                    case 1:\n                      return [2 /*return*/, _a.sent()];\n                  }\n                });\n              });\n            }, [query, variables])];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  SyncProcessor.prototype.start = function (typesLastSync) {\n    var _this = this;\n    var processing = true;\n    var maxRecordsToSync = this.maxRecordsToSync !== undefined ? this.maxRecordsToSync : DEFAULT_MAX_RECORDS_TO_SYNC;\n    var syncPageSize = this.syncPageSize !== undefined ? this.syncPageSize : DEFAULT_PAGINATION_LIMIT;\n    var parentPromises = new Map();\n    var observable = new Observable(function (observer) {\n      var sortedTypesLastSyncs = Object.values(_this.schema.namespaces).reduce(function (map, namespace) {\n        for (var _i = 0, _a = Array.from(namespace.modelTopologicalOrdering.keys()); _i < _a.length; _i++) {\n          var modelName = _a[_i];\n          var typeLastSync = typesLastSync.get(namespace.models[modelName]);\n          map.set(namespace.models[modelName], typeLastSync);\n        }\n        return map;\n      }, new Map());\n      var allModelsReady = Array.from(sortedTypesLastSyncs.entries()).filter(function (_a) {\n        var syncable = _a[0].syncable;\n        return syncable;\n      }).map(function (_a) {\n        var modelDefinition = _a[0],\n          _b = _a[1],\n          namespace = _b[0],\n          lastSync = _b[1];\n        return __awaiter(_this, void 0, void 0, function () {\n          var done, nextToken, startedAt, items, recordsReceived, parents, promises, promise;\n          var _this = this;\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                done = false;\n                nextToken = null;\n                startedAt = null;\n                items = null;\n                recordsReceived = 0;\n                parents = this.schema.namespaces[namespace].modelTopologicalOrdering.get(modelDefinition.name);\n                promises = parents.map(function (parent) {\n                  return parentPromises.get(namespace + \"_\" + parent);\n                });\n                promise = new Promise(function (res) {\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var limit;\n                    var _a;\n                    return __generator(this, function (_b) {\n                      switch (_b.label) {\n                        case 0:\n                          return [4 /*yield*/, Promise.all(promises)];\n                        case 1:\n                          _b.sent();\n                          _b.label = 2;\n                        case 2:\n                          if (!processing) {\n                            return [2 /*return*/];\n                          }\n                          limit = Math.min(maxRecordsToSync - recordsReceived, syncPageSize);\n                          return [4 /*yield*/, this.retrievePage(modelDefinition, lastSync, nextToken, limit)];\n                        case 3:\n                          _a = _b.sent(), items = _a.items, nextToken = _a.nextToken, startedAt = _a.startedAt;\n                          recordsReceived += items.length;\n                          done = nextToken === null || recordsReceived >= maxRecordsToSync;\n                          observer.next({\n                            namespace: namespace,\n                            modelDefinition: modelDefinition,\n                            items: items,\n                            done: done,\n                            startedAt: startedAt,\n                            isFullSync: !lastSync\n                          });\n                          _b.label = 4;\n                        case 4:\n                          if (!done) return [3 /*break*/, 2];\n                          _b.label = 5;\n                        case 5:\n                          res();\n                          return [2 /*return*/];\n                      }\n                    });\n                  });\n                });\n                parentPromises.set(namespace + \"_\" + modelDefinition.name, promise);\n                return [4 /*yield*/, promise];\n              case 1:\n                _c.sent();\n                return [2 /*return*/];\n            }\n          });\n        });\n      });\n      Promise.all(allModelsReady).then(function () {\n        observer.complete();\n      });\n      return function () {\n        processing = false;\n      };\n    });\n    return observable;\n  };\n  return SyncProcessor;\n}();\nexport { SyncProcessor };","map":{"version":3,"sources":["../../../src/sync/processors/sync.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport API from '@aws-amplify/api';\nimport Observable from 'zen-observable-ts';\nimport { buildGraphQLOperation } from '../utils';\nimport { jitteredExponentialRetry } from '@aws-amplify/core';\nvar DEFAULT_PAGINATION_LIMIT = 100;\nvar DEFAULT_MAX_RECORDS_TO_SYNC = 10000;\nvar SyncProcessor = /** @class */ (function () {\n    function SyncProcessor(schema, maxRecordsToSync, syncPageSize) {\n        if (maxRecordsToSync === void 0) { maxRecordsToSync = DEFAULT_MAX_RECORDS_TO_SYNC; }\n        if (syncPageSize === void 0) { syncPageSize = DEFAULT_PAGINATION_LIMIT; }\n        this.schema = schema;\n        this.maxRecordsToSync = maxRecordsToSync;\n        this.syncPageSize = syncPageSize;\n        this.typeQuery = new WeakMap();\n        this.generateQueries();\n    }\n    SyncProcessor.prototype.generateQueries = function () {\n        var _this = this;\n        Object.values(this.schema.namespaces).forEach(function (namespace) {\n            Object.values(namespace.models)\n                .filter(function (_a) {\n                var syncable = _a.syncable;\n                return syncable;\n            })\n                .forEach(function (model) {\n                var _a = buildGraphQLOperation(namespace, model, 'LIST')[0], opNameQuery = _a.slice(1);\n                _this.typeQuery.set(model, opNameQuery);\n            });\n        });\n    };\n    SyncProcessor.prototype.retrievePage = function (modelDefinition, lastSync, nextToken, limit) {\n        if (limit === void 0) { limit = null; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, opName, query, variables, data, _b, opResult, items, newNextToken, startedAt;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.typeQuery.get(modelDefinition), opName = _a[0], query = _a[1];\n                        variables = {\n                            limit: limit,\n                            nextToken: nextToken,\n                            lastSync: lastSync,\n                        };\n                        return [4 /*yield*/, this.jitteredRetry(query, variables)];\n                    case 1:\n                        data = (_c.sent()).data;\n                        _b = opName, opResult = data[_b];\n                        items = opResult.items, newNextToken = opResult.nextToken, startedAt = opResult.startedAt;\n                        return [2 /*return*/, { nextToken: newNextToken, startedAt: startedAt, items: items }];\n                }\n            });\n        });\n    };\n    SyncProcessor.prototype.jitteredRetry = function (query, variables) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, jitteredExponentialRetry(function (query, variables) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, API.graphql({\n                                            query: query,\n                                            variables: variables,\n                                        })];\n                                    case 1: return [2 /*return*/, _a.sent()];\n                                }\n                            });\n                        }); }, [query, variables])];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    SyncProcessor.prototype.start = function (typesLastSync) {\n        var _this = this;\n        var processing = true;\n        var maxRecordsToSync = this.maxRecordsToSync !== undefined\n            ? this.maxRecordsToSync\n            : DEFAULT_MAX_RECORDS_TO_SYNC;\n        var syncPageSize = this.syncPageSize !== undefined\n            ? this.syncPageSize\n            : DEFAULT_PAGINATION_LIMIT;\n        var parentPromises = new Map();\n        var observable = new Observable(function (observer) {\n            var sortedTypesLastSyncs = Object.values(_this.schema.namespaces).reduce(function (map, namespace) {\n                for (var _i = 0, _a = Array.from(namespace.modelTopologicalOrdering.keys()); _i < _a.length; _i++) {\n                    var modelName = _a[_i];\n                    var typeLastSync = typesLastSync.get(namespace.models[modelName]);\n                    map.set(namespace.models[modelName], typeLastSync);\n                }\n                return map;\n            }, new Map());\n            var allModelsReady = Array.from(sortedTypesLastSyncs.entries())\n                .filter(function (_a) {\n                var syncable = _a[0].syncable;\n                return syncable;\n            })\n                .map(function (_a) {\n                var modelDefinition = _a[0], _b = _a[1], namespace = _b[0], lastSync = _b[1];\n                return __awaiter(_this, void 0, void 0, function () {\n                    var done, nextToken, startedAt, items, recordsReceived, parents, promises, promise;\n                    var _this = this;\n                    return __generator(this, function (_c) {\n                        switch (_c.label) {\n                            case 0:\n                                done = false;\n                                nextToken = null;\n                                startedAt = null;\n                                items = null;\n                                recordsReceived = 0;\n                                parents = this.schema.namespaces[namespace].modelTopologicalOrdering.get(modelDefinition.name);\n                                promises = parents.map(function (parent) {\n                                    return parentPromises.get(namespace + \"_\" + parent);\n                                });\n                                promise = new Promise(function (res) { return __awaiter(_this, void 0, void 0, function () {\n                                    var limit;\n                                    var _a;\n                                    return __generator(this, function (_b) {\n                                        switch (_b.label) {\n                                            case 0: return [4 /*yield*/, Promise.all(promises)];\n                                            case 1:\n                                                _b.sent();\n                                                _b.label = 2;\n                                            case 2:\n                                                if (!processing) {\n                                                    return [2 /*return*/];\n                                                }\n                                                limit = Math.min(maxRecordsToSync - recordsReceived, syncPageSize);\n                                                return [4 /*yield*/, this.retrievePage(modelDefinition, lastSync, nextToken, limit)];\n                                            case 3:\n                                                (_a = _b.sent(), items = _a.items, nextToken = _a.nextToken, startedAt = _a.startedAt);\n                                                recordsReceived += items.length;\n                                                done = nextToken === null || recordsReceived >= maxRecordsToSync;\n                                                observer.next({\n                                                    namespace: namespace,\n                                                    modelDefinition: modelDefinition,\n                                                    items: items,\n                                                    done: done,\n                                                    startedAt: startedAt,\n                                                    isFullSync: !lastSync,\n                                                });\n                                                _b.label = 4;\n                                            case 4:\n                                                if (!done) return [3 /*break*/, 2];\n                                                _b.label = 5;\n                                            case 5:\n                                                res();\n                                                return [2 /*return*/];\n                                        }\n                                    });\n                                }); });\n                                parentPromises.set(namespace + \"_\" + modelDefinition.name, promise);\n                                return [4 /*yield*/, promise];\n                            case 1:\n                                _c.sent();\n                                return [2 /*return*/];\n                        }\n                    });\n                });\n            });\n            Promise.all(allModelsReady).then(function () {\n                observer.complete();\n            });\n            return function () {\n                processing = false;\n            };\n        });\n        return observable;\n    };\n    return SyncProcessor;\n}());\nexport { SyncProcessor };\n//# sourceMappingURL=sync.js.map"]},"metadata":{},"sourceType":"module"}