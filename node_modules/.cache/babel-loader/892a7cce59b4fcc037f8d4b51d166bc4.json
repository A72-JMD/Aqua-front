{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport API, { GRAPHQL_AUTH_MODE } from '@aws-amplify/api';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport '@aws-amplify/pubsub';\nimport Observable from 'zen-observable-ts';\nimport { buildSubscriptionGraphQLOperation, getAuthorizationRules, TransformerMutationType } from '../utils';\nvar logger = new Logger('DataStore');\nexport var CONTROL_MSG;\n(function (CONTROL_MSG) {\n  CONTROL_MSG[\"CONNECTED\"] = \"CONNECTED\";\n})(CONTROL_MSG || (CONTROL_MSG = {}));\nexport var USER_CREDENTIALS;\n(function (USER_CREDENTIALS) {\n  USER_CREDENTIALS[USER_CREDENTIALS[\"none\"] = 0] = \"none\";\n  USER_CREDENTIALS[USER_CREDENTIALS[\"unauth\"] = 1] = \"unauth\";\n  USER_CREDENTIALS[USER_CREDENTIALS[\"auth\"] = 2] = \"auth\";\n})(USER_CREDENTIALS || (USER_CREDENTIALS = {}));\nvar SubscriptionProcessor = /** @class */function () {\n  function SubscriptionProcessor(schema) {\n    this.schema = schema;\n    this.typeQuery = new WeakMap();\n    this.buffer = [];\n  }\n  SubscriptionProcessor.prototype.buildSubscription = function (namespace, model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) {\n    var _a = this.getAuthorizationInfo(model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) || {},\n      authMode = _a.authMode,\n      isOwner = _a.isOwner,\n      ownerField = _a.ownerField,\n      ownerValue = _a.ownerValue;\n    var _b = buildSubscriptionGraphQLOperation(namespace, model, transformerMutationType, isOwner, ownerField),\n      opType = _b[0],\n      opName = _b[1],\n      query = _b[2];\n    return {\n      authMode: authMode,\n      opType: opType,\n      opName: opName,\n      query: query,\n      isOwner: isOwner,\n      ownerField: ownerField,\n      ownerValue: ownerValue\n    };\n  };\n  SubscriptionProcessor.prototype.getAuthorizationInfo = function (model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) {\n    if (cognitoTokenPayload === void 0) {\n      cognitoTokenPayload = {};\n    }\n    if (oidcTokenPayload === void 0) {\n      oidcTokenPayload = {};\n    }\n    var result;\n    var rules = getAuthorizationRules(model, transformerMutationType);\n    // check if has apiKey and public authorization\n    var apiKeyAuth = rules.find(function (rule) {\n      return rule.authStrategy === 'public' && rule.provider === 'apiKey';\n    });\n    if (apiKeyAuth) {\n      return {\n        authMode: GRAPHQL_AUTH_MODE.API_KEY,\n        isOwner: false\n      };\n    }\n    // check if has iam authorization\n    if (userCredentials === USER_CREDENTIALS.unauth || userCredentials === USER_CREDENTIALS.auth) {\n      var iamPublicAuth = rules.find(function (rule) {\n        return rule.authStrategy === 'public' && rule.provider === 'iam';\n      });\n      if (iamPublicAuth) {\n        return {\n          authMode: GRAPHQL_AUTH_MODE.AWS_IAM,\n          isOwner: false\n        };\n      }\n      var iamPrivateAuth = userCredentials === USER_CREDENTIALS.auth && rules.find(function (rule) {\n        return rule.authStrategy === 'private' && rule.provider === 'iam';\n      });\n      if (iamPrivateAuth) {\n        return {\n          authMode: GRAPHQL_AUTH_MODE.AWS_IAM,\n          isOwner: false\n        };\n      }\n    }\n    // if not check if has groups authorization and token has groupClaim allowed for cognito token\n    var groupAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'group' && rule.provider === 'userPools';\n    });\n    var validCognitoGroup = groupAuthRules.find(function (groupAuthRule) {\n      // validate token agains groupClaim\n      var userGroups = cognitoTokenPayload[groupAuthRule.groupClaim] || [];\n      return userGroups.find(function (userGroup) {\n        return groupAuthRule.groups.find(function (group) {\n          return group === userGroup;\n        });\n      });\n    });\n    if (validCognitoGroup) {\n      return {\n        authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\n        isOwner: false\n      };\n    }\n    // if not check if has groups authorization and token has groupClaim allowed for oidc token\n    groupAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'group' && rule.provider === 'oidc';\n    });\n    var validOidcGroup = groupAuthRules.find(function (groupAuthRule) {\n      // validate token agains groupClaim\n      var userGroups = oidcTokenPayload[groupAuthRule.groupClaim] || [];\n      userGroups.find(function (userGroup) {\n        return groupAuthRule.groups.find(function (group) {\n          return group === userGroup;\n        });\n      });\n    });\n    if (validOidcGroup) {\n      return {\n        authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\n        isOwner: false\n      };\n    }\n    // check if has owner auth authorization and token ownerField for cognito token\n    var ownerAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'owner' && rule.provider === 'userPools';\n    });\n    ownerAuthRules.forEach(function (ownerAuthRule) {\n      var ownerValue = cognitoTokenPayload[ownerAuthRule.identityClaim];\n      if (ownerValue) {\n        result = {\n          authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\n          isOwner: true,\n          ownerField: ownerAuthRule.ownerField,\n          ownerValue: ownerValue\n        };\n      }\n    });\n    if (result) {\n      return result;\n    }\n    // check if has owner auth authorization and token ownerField for oidc token\n    ownerAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'owner' && rule.provider === 'oidc';\n    });\n    ownerAuthRules.forEach(function (ownerAuthRule) {\n      var ownerValue = oidcTokenPayload[ownerAuthRule.identityClaim];\n      if (ownerValue) {\n        result = {\n          authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\n          isOwner: true,\n          ownerField: ownerAuthRule.ownerField,\n          ownerValue: ownerValue\n        };\n      }\n    });\n    if (result) {\n      return result;\n    }\n    return null;\n  };\n  SubscriptionProcessor.prototype.hubQueryCompletionListener = function (completed, variables, capsule) {\n    if (variables === capsule.payload.data.variables) {\n      completed();\n    }\n  };\n  SubscriptionProcessor.prototype.start = function () {\n    var _this = this;\n    var ctlObservable = new Observable(function (observer) {\n      var promises = [];\n      var subscriptions = [];\n      var cognitoTokenPayload, oidcTokenPayload;\n      var userCredentials = USER_CREDENTIALS.none;\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var credentials, err_1, session, err_2, federatedInfo, token, payload, err_3;\n          var _this = this;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 2,, 3]);\n                return [4 /*yield*/, Auth.currentCredentials()];\n              case 1:\n                credentials = _a.sent();\n                userCredentials = credentials.authenticated ? USER_CREDENTIALS.auth : USER_CREDENTIALS.unauth;\n                return [3 /*break*/, 3];\n              case 2:\n                err_1 = _a.sent();\n                return [3 /*break*/, 3];\n              case 3:\n                _a.trys.push([3, 5,, 6]);\n                return [4 /*yield*/, Auth.currentSession()];\n              case 4:\n                session = _a.sent();\n                cognitoTokenPayload = session.getIdToken().decodePayload();\n                return [3 /*break*/, 6];\n              case 5:\n                err_2 = _a.sent();\n                return [3 /*break*/, 6];\n              case 6:\n                _a.trys.push([6, 8,, 9]);\n                return [4 /*yield*/, Cache.getItem('federatedInfo')];\n              case 7:\n                federatedInfo = _a.sent();\n                token = federatedInfo.token;\n                payload = token.split('.')[1];\n                oidcTokenPayload = JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n                return [3 /*break*/, 9];\n              case 8:\n                err_3 = _a.sent();\n                return [3 /*break*/, 9];\n              case 9:\n                Object.values(this.schema.namespaces).forEach(function (namespace) {\n                  Object.values(namespace.models).filter(function (_a) {\n                    var syncable = _a.syncable;\n                    return syncable;\n                  }).forEach(function (modelDefinition) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var queriesMetadata;\n                      var _this = this;\n                      return __generator(this, function (_a) {\n                        queriesMetadata = [TransformerMutationType.CREATE, TransformerMutationType.UPDATE, TransformerMutationType.DELETE].map(function (op) {\n                          return _this.buildSubscription(namespace, modelDefinition, op, userCredentials, cognitoTokenPayload, oidcTokenPayload);\n                        });\n                        queriesMetadata.forEach(function (_a) {\n                          var transformerMutationType = _a.opType,\n                            opName = _a.opName,\n                            query = _a.query,\n                            isOwner = _a.isOwner,\n                            ownerField = _a.ownerField,\n                            ownerValue = _a.ownerValue,\n                            authMode = _a.authMode;\n                          return __awaiter(_this, void 0, void 0, function () {\n                            var marker, queryObservable;\n                            var _this = this;\n                            return __generator(this, function (_b) {\n                              marker = {};\n                              if (isOwner) {\n                                if (!ownerValue) {\n                                  // Check if there is an owner field, check where this error should be located\n                                  observer.error('Owner field required, sign in is needed in order to perform this operation');\n                                  return [2 /*return*/];\n                                }\n                                marker[ownerField] = ownerValue;\n                              }\n                              queryObservable = API.graphql(__assign({\n                                query: query,\n                                variables: marker\n                              }, {\n                                authMode: authMode\n                              }));\n                              subscriptions.push(queryObservable.map(function (_a) {\n                                var value = _a.value;\n                                return value;\n                              }).subscribe({\n                                next: function (_a) {\n                                  var data = _a.data,\n                                    errors = _a.errors;\n                                  if (Array.isArray(errors) && errors.length > 0) {\n                                    var messages = errors.map(function (_a) {\n                                      var message = _a.message;\n                                      return message;\n                                    });\n                                    logger.warn(\"Skipping incoming subscription. Messages: \" + messages.join('\\n'));\n                                    _this.drainBuffer();\n                                    return;\n                                  }\n                                  var _b = opName,\n                                    record = data[_b];\n                                  _this.pushToBuffer(transformerMutationType, modelDefinition, record);\n                                  _this.drainBuffer();\n                                },\n                                error: function (subscriptionError) {\n                                  var _a = subscriptionError.error,\n                                    _b = (_a === void 0 ? {\n                                      errors: []\n                                    } : _a).errors[0],\n                                    _c = (_b === void 0 ? {} : _b).message,\n                                    message = _c === void 0 ? '' : _c;\n                                  observer.error(message);\n                                }\n                              }));\n                              promises.push(function () {\n                                return __awaiter(_this, void 0, void 0, function () {\n                                  var boundFunction;\n                                  var _this = this;\n                                  return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                      case 0:\n                                        return [4 /*yield*/, new Promise(function (res) {\n                                          boundFunction = _this.hubQueryCompletionListener.bind(_this, res, marker);\n                                          Hub.listen('api', boundFunction);\n                                        })];\n                                      case 1:\n                                        _a.sent();\n                                        Hub.remove('api', boundFunction);\n                                        return [2 /*return*/];\n                                    }\n                                  });\n                                });\n                              }());\n                              return [2 /*return*/];\n                            });\n                          });\n                        });\n                        return [2 /*return*/];\n                      });\n                    });\n                  });\n                });\n                Promise.all(promises).then(function () {\n                  return observer.next(CONTROL_MSG.CONNECTED);\n                });\n                return [2 /*return*/];\n            }\n          });\n        });\n      })();\n      return function () {\n        subscriptions.forEach(function (subscription) {\n          return subscription.unsubscribe();\n        });\n      };\n    });\n    var dataObservable = new Observable(function (observer) {\n      _this.dataObserver = observer;\n      _this.drainBuffer();\n      return function () {\n        _this.dataObserver = null;\n      };\n    });\n    return [ctlObservable, dataObservable];\n  };\n  SubscriptionProcessor.prototype.pushToBuffer = function (transformerMutationType, modelDefinition, data) {\n    this.buffer.push([transformerMutationType, modelDefinition, data]);\n  };\n  SubscriptionProcessor.prototype.drainBuffer = function () {\n    var _this = this;\n    if (this.dataObserver) {\n      this.buffer.forEach(function (data) {\n        return _this.dataObserver.next(data);\n      });\n      this.buffer = [];\n    }\n  };\n  return SubscriptionProcessor;\n}();\nexport { SubscriptionProcessor };","map":{"version":3,"sources":["../../../src/sync/processors/subscription.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport API, { GRAPHQL_AUTH_MODE } from '@aws-amplify/api';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport '@aws-amplify/pubsub';\nimport Observable from 'zen-observable-ts';\nimport { buildSubscriptionGraphQLOperation, getAuthorizationRules, TransformerMutationType, } from '../utils';\nvar logger = new Logger('DataStore');\nexport var CONTROL_MSG;\n(function (CONTROL_MSG) {\n    CONTROL_MSG[\"CONNECTED\"] = \"CONNECTED\";\n})(CONTROL_MSG || (CONTROL_MSG = {}));\nexport var USER_CREDENTIALS;\n(function (USER_CREDENTIALS) {\n    USER_CREDENTIALS[USER_CREDENTIALS[\"none\"] = 0] = \"none\";\n    USER_CREDENTIALS[USER_CREDENTIALS[\"unauth\"] = 1] = \"unauth\";\n    USER_CREDENTIALS[USER_CREDENTIALS[\"auth\"] = 2] = \"auth\";\n})(USER_CREDENTIALS || (USER_CREDENTIALS = {}));\nvar SubscriptionProcessor = /** @class */ (function () {\n    function SubscriptionProcessor(schema) {\n        this.schema = schema;\n        this.typeQuery = new WeakMap();\n        this.buffer = [];\n    }\n    SubscriptionProcessor.prototype.buildSubscription = function (namespace, model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) {\n        var _a = this.getAuthorizationInfo(model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) || {}, authMode = _a.authMode, isOwner = _a.isOwner, ownerField = _a.ownerField, ownerValue = _a.ownerValue;\n        var _b = buildSubscriptionGraphQLOperation(namespace, model, transformerMutationType, isOwner, ownerField), opType = _b[0], opName = _b[1], query = _b[2];\n        return { authMode: authMode, opType: opType, opName: opName, query: query, isOwner: isOwner, ownerField: ownerField, ownerValue: ownerValue };\n    };\n    SubscriptionProcessor.prototype.getAuthorizationInfo = function (model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) {\n        if (cognitoTokenPayload === void 0) { cognitoTokenPayload = {}; }\n        if (oidcTokenPayload === void 0) { oidcTokenPayload = {}; }\n        var result;\n        var rules = getAuthorizationRules(model, transformerMutationType);\n        // check if has apiKey and public authorization\n        var apiKeyAuth = rules.find(function (rule) { return rule.authStrategy === 'public' && rule.provider === 'apiKey'; });\n        if (apiKeyAuth) {\n            return { authMode: GRAPHQL_AUTH_MODE.API_KEY, isOwner: false };\n        }\n        // check if has iam authorization\n        if (userCredentials === USER_CREDENTIALS.unauth ||\n            userCredentials === USER_CREDENTIALS.auth) {\n            var iamPublicAuth = rules.find(function (rule) { return rule.authStrategy === 'public' && rule.provider === 'iam'; });\n            if (iamPublicAuth) {\n                return { authMode: GRAPHQL_AUTH_MODE.AWS_IAM, isOwner: false };\n            }\n            var iamPrivateAuth = userCredentials === USER_CREDENTIALS.auth &&\n                rules.find(function (rule) { return rule.authStrategy === 'private' && rule.provider === 'iam'; });\n            if (iamPrivateAuth) {\n                return { authMode: GRAPHQL_AUTH_MODE.AWS_IAM, isOwner: false };\n            }\n        }\n        // if not check if has groups authorization and token has groupClaim allowed for cognito token\n        var groupAuthRules = rules.filter(function (rule) { return rule.authStrategy === 'group' && rule.provider === 'userPools'; });\n        var validCognitoGroup = groupAuthRules.find(function (groupAuthRule) {\n            // validate token agains groupClaim\n            var userGroups = cognitoTokenPayload[groupAuthRule.groupClaim] || [];\n            return userGroups.find(function (userGroup) {\n                return groupAuthRule.groups.find(function (group) { return group === userGroup; });\n            });\n        });\n        if (validCognitoGroup) {\n            return {\n                authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\n                isOwner: false,\n            };\n        }\n        // if not check if has groups authorization and token has groupClaim allowed for oidc token\n        groupAuthRules = rules.filter(function (rule) { return rule.authStrategy === 'group' && rule.provider === 'oidc'; });\n        var validOidcGroup = groupAuthRules.find(function (groupAuthRule) {\n            // validate token agains groupClaim\n            var userGroups = oidcTokenPayload[groupAuthRule.groupClaim] || [];\n            userGroups.find(function (userGroup) {\n                return groupAuthRule.groups.find(function (group) { return group === userGroup; });\n            });\n        });\n        if (validOidcGroup) {\n            return {\n                authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\n                isOwner: false,\n            };\n        }\n        // check if has owner auth authorization and token ownerField for cognito token\n        var ownerAuthRules = rules.filter(function (rule) { return rule.authStrategy === 'owner' && rule.provider === 'userPools'; });\n        ownerAuthRules.forEach(function (ownerAuthRule) {\n            var ownerValue = cognitoTokenPayload[ownerAuthRule.identityClaim];\n            if (ownerValue) {\n                result = {\n                    authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\n                    isOwner: true,\n                    ownerField: ownerAuthRule.ownerField,\n                    ownerValue: ownerValue,\n                };\n            }\n        });\n        if (result) {\n            return result;\n        }\n        // check if has owner auth authorization and token ownerField for oidc token\n        ownerAuthRules = rules.filter(function (rule) { return rule.authStrategy === 'owner' && rule.provider === 'oidc'; });\n        ownerAuthRules.forEach(function (ownerAuthRule) {\n            var ownerValue = oidcTokenPayload[ownerAuthRule.identityClaim];\n            if (ownerValue) {\n                result = {\n                    authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\n                    isOwner: true,\n                    ownerField: ownerAuthRule.ownerField,\n                    ownerValue: ownerValue,\n                };\n            }\n        });\n        if (result) {\n            return result;\n        }\n        return null;\n    };\n    SubscriptionProcessor.prototype.hubQueryCompletionListener = function (completed, variables, capsule) {\n        if (variables === capsule.payload.data.variables) {\n            completed();\n        }\n    };\n    SubscriptionProcessor.prototype.start = function () {\n        var _this = this;\n        var ctlObservable = new Observable(function (observer) {\n            var promises = [];\n            var subscriptions = [];\n            var cognitoTokenPayload, oidcTokenPayload;\n            var userCredentials = USER_CREDENTIALS.none;\n            (function () { return __awaiter(_this, void 0, void 0, function () {\n                var credentials, err_1, session, err_2, federatedInfo, token, payload, err_3;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _a.trys.push([0, 2, , 3]);\n                            return [4 /*yield*/, Auth.currentCredentials()];\n                        case 1:\n                            credentials = _a.sent();\n                            userCredentials = credentials.authenticated\n                                ? USER_CREDENTIALS.auth\n                                : USER_CREDENTIALS.unauth;\n                            return [3 /*break*/, 3];\n                        case 2:\n                            err_1 = _a.sent();\n                            return [3 /*break*/, 3];\n                        case 3:\n                            _a.trys.push([3, 5, , 6]);\n                            return [4 /*yield*/, Auth.currentSession()];\n                        case 4:\n                            session = _a.sent();\n                            cognitoTokenPayload = session.getIdToken().decodePayload();\n                            return [3 /*break*/, 6];\n                        case 5:\n                            err_2 = _a.sent();\n                            return [3 /*break*/, 6];\n                        case 6:\n                            _a.trys.push([6, 8, , 9]);\n                            return [4 /*yield*/, Cache.getItem('federatedInfo')];\n                        case 7:\n                            federatedInfo = _a.sent();\n                            token = federatedInfo.token;\n                            payload = token.split('.')[1];\n                            oidcTokenPayload = JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n                            return [3 /*break*/, 9];\n                        case 8:\n                            err_3 = _a.sent();\n                            return [3 /*break*/, 9];\n                        case 9:\n                            Object.values(this.schema.namespaces).forEach(function (namespace) {\n                                Object.values(namespace.models)\n                                    .filter(function (_a) {\n                                    var syncable = _a.syncable;\n                                    return syncable;\n                                })\n                                    .forEach(function (modelDefinition) { return __awaiter(_this, void 0, void 0, function () {\n                                    var queriesMetadata;\n                                    var _this = this;\n                                    return __generator(this, function (_a) {\n                                        queriesMetadata = [\n                                            TransformerMutationType.CREATE,\n                                            TransformerMutationType.UPDATE,\n                                            TransformerMutationType.DELETE,\n                                        ].map(function (op) {\n                                            return _this.buildSubscription(namespace, modelDefinition, op, userCredentials, cognitoTokenPayload, oidcTokenPayload);\n                                        });\n                                        queriesMetadata.forEach(function (_a) {\n                                            var transformerMutationType = _a.opType, opName = _a.opName, query = _a.query, isOwner = _a.isOwner, ownerField = _a.ownerField, ownerValue = _a.ownerValue, authMode = _a.authMode;\n                                            return __awaiter(_this, void 0, void 0, function () {\n                                                var marker, queryObservable;\n                                                var _this = this;\n                                                return __generator(this, function (_b) {\n                                                    marker = {};\n                                                    if (isOwner) {\n                                                        if (!ownerValue) {\n                                                            // Check if there is an owner field, check where this error should be located\n                                                            observer.error('Owner field required, sign in is needed in order to perform this operation');\n                                                            return [2 /*return*/];\n                                                        }\n                                                        marker[ownerField] = ownerValue;\n                                                    }\n                                                    queryObservable = API.graphql(__assign({ query: query, variables: marker }, { authMode: authMode }));\n                                                    subscriptions.push(queryObservable\n                                                        .map(function (_a) {\n                                                        var value = _a.value;\n                                                        return value;\n                                                    })\n                                                        .subscribe({\n                                                        next: function (_a) {\n                                                            var data = _a.data, errors = _a.errors;\n                                                            if (Array.isArray(errors) && errors.length > 0) {\n                                                                var messages = errors.map(function (_a) {\n                                                                    var message = _a.message;\n                                                                    return message;\n                                                                });\n                                                                logger.warn(\"Skipping incoming subscription. Messages: \" + messages.join('\\n'));\n                                                                _this.drainBuffer();\n                                                                return;\n                                                            }\n                                                            var _b = opName, record = data[_b];\n                                                            _this.pushToBuffer(transformerMutationType, modelDefinition, record);\n                                                            _this.drainBuffer();\n                                                        },\n                                                        error: function (subscriptionError) {\n                                                            var _a = subscriptionError.error, _b = (_a === void 0 ? {\n                                                                errors: [],\n                                                            } : _a).errors[0], _c = (_b === void 0 ? {} : _b).message, message = _c === void 0 ? '' : _c;\n                                                            observer.error(message);\n                                                        },\n                                                    }));\n                                                    promises.push((function () { return __awaiter(_this, void 0, void 0, function () {\n                                                        var boundFunction;\n                                                        var _this = this;\n                                                        return __generator(this, function (_a) {\n                                                            switch (_a.label) {\n                                                                case 0: return [4 /*yield*/, new Promise(function (res) {\n                                                                        boundFunction = _this.hubQueryCompletionListener.bind(_this, res, marker);\n                                                                        Hub.listen('api', boundFunction);\n                                                                    })];\n                                                                case 1:\n                                                                    _a.sent();\n                                                                    Hub.remove('api', boundFunction);\n                                                                    return [2 /*return*/];\n                                                            }\n                                                        });\n                                                    }); })());\n                                                    return [2 /*return*/];\n                                                });\n                                            });\n                                        });\n                                        return [2 /*return*/];\n                                    });\n                                }); });\n                            });\n                            Promise.all(promises).then(function () { return observer.next(CONTROL_MSG.CONNECTED); });\n                            return [2 /*return*/];\n                    }\n                });\n            }); })();\n            return function () {\n                subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); });\n            };\n        });\n        var dataObservable = new Observable(function (observer) {\n            _this.dataObserver = observer;\n            _this.drainBuffer();\n            return function () {\n                _this.dataObserver = null;\n            };\n        });\n        return [ctlObservable, dataObservable];\n    };\n    SubscriptionProcessor.prototype.pushToBuffer = function (transformerMutationType, modelDefinition, data) {\n        this.buffer.push([transformerMutationType, modelDefinition, data]);\n    };\n    SubscriptionProcessor.prototype.drainBuffer = function () {\n        var _this = this;\n        if (this.dataObserver) {\n            this.buffer.forEach(function (data) { return _this.dataObserver.next(data); });\n            this.buffer = [];\n        }\n    };\n    return SubscriptionProcessor;\n}());\nexport { SubscriptionProcessor };\n//# sourceMappingURL=subscription.js.map"]},"metadata":{},"sourceType":"module"}