{"ast":null,"code":"var _jsxFileName = \"/Users/JMD/Developments/Projects/Fiji-Web/src/components/DynamicForm/DynamicForm.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Card, CardBody, CardFooter, CardHeader, Col, Form, FormGroup, Input, Label, Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport LoaderButton from \"../../components/LoaderButton/LoaderButton\";\nimport { apiGET } from \"../../Common/Api/apiHelper\";\nexport default function DynamicForm(props) {\n  var _this = this;\n  const [state, setState] = useState({\n    isLoading: false,\n    doneBuildingModel: false,\n    dependencies: {},\n    formModel: {}\n  });\n  const [visiblePage, setVisiblePage] = useState(0);\n  const [maxPages, setMaxPages] = useState(0);\n\n  // const [validationSuccess, setValidationSuccess] = useState(false);\n  const [minPage, setMinPage] = useState(0); //eslint-disable-line\n\n  const file = useRef(null); // useRef will not trigger component rerender on change\n\n  var validationRules = [{}];\n  useEffect(() => {\n    const fetchData = async () => {\n      await onLoad();\n    };\n    fetchData();\n  }, []); //eslint-disable-line\n\n  // When the component loads, update state with any pre-filled values\n  const onLoad = () => {\n    // console.log(\"ON LOAD TRIGGERED\");\n    let model = props.model;\n    var stateTemp = {\n      ...state\n    };\n    console.log(\"JMD-\");\n    setVisiblePage(props.visiblePage ? props.visiblePage : 0);\n    setMaxPages(props.maxPages ? props.maxPages : 1);\n    stateTemp.formModel = model;\n\n    // console.log(\"DUMP: \", stateTemp.formModel);\n    stateTemp.doneBuildingModel = true;\n    setState({\n      ...stateTemp\n    });\n  };\n  const performValidation = () => {\n    var success = true;\n    // console.log(\"validating...\");\n    try {\n      // console.log(\"validationRules\");\n      // console.log(validationRules);\n      // console.log(\"state\");\n      // console.log(state);\n      Object.keys(state.formModel).map(function (key) {\n        console.log(validationRules[key].required);\n\n        // TODO trigger validation message useful tot he specific field\n        if (validationRules[key].required && state.formModel[key].length <= 0) {\n          success = false;\n        }\n        if (state.formModel[key].length > 0) {\n          if (state.formModel[key].length < validationRules[key].length) {\n            success = false;\n          }\n        }\n      });\n\n      // validationRules.map((i, c) => {\n      //   console.log(i);\n      //   console.log(validationRules[i]);\n      //   if (validationRules[c][\"rules\"][\"required\"]) {\n      //     if (state[validationRules[c].field].length === 0) {\n      //       setValidationSuccess(false);\n      //     }\n      //   }\n      // });\n    } catch (e) {}\n    return success;\n  };\n  const setValidationRules = async model => {\n    // model.map((i, c) => {\n    //   console.log(Object.keys(model[c].validation));\n    //   console.log(Object.values(model[c].validation));\n    // });\n\n    model.map((i, c) => {\n      var key = model[c].key;\n      var x = {\n        //field: key,\n      };\n      validationRules[key] = {\n        ...model[c].validation\n      };\n    });\n  };\n  const handleSubmit = async event => {\n    console.log(\"submitted\");\n    event.preventDefault();\n    let model = state.formModel;\n    let formValues = {};\n    model.map(m => {\n      if (m.options) {\n        formValues[m.key] = m.value || Object.keys(m.options)[0].toString();\n      } else {\n        formValues[m.key] = m.value || \"\";\n      }\n    });\n    if (performValidation()) {\n      setState({\n        ...state,\n        isLoading: true\n      });\n      if (props.onSubmit) props.onSubmit(formValues);\n      setState({\n        ...state,\n        isLoading: false\n      });\n      console.log(\"Validation Success\");\n    } else {\n      alert(\"Validation Failed\");\n    }\n  };\n  const updateMultiFieldValue = (guid, newValue, selected) => {\n    var stateTemp = {\n      ...state\n    };\n    var index = stateTemp.formModel.findIndex(object => {\n      return object.key === guid;\n    });\n    if (index > -1) {\n      var vals = [];\n      if (stateTemp.formModel[index][\"value\"] === \"\") stateTemp.formModel[index][\"value\"] = vals;\n      vals = stateTemp.formModel[index][\"value\"];\n      if (selected) vals.push(newValue);else vals = vals.filter(x => x !== newValue);\n      stateTemp.formModel[index][\"value\"] = vals;\n    } else console.log(\"Failed to find index in model\");\n    setState({\n      ...stateTemp\n    });\n  };\n  const updateFieldValue = (guid, newValue) => {\n    var stateTemp = {\n      ...state\n    };\n    var index = stateTemp.formModel.findIndex(object => {\n      return object.key === guid;\n    });\n    if (index > -1) stateTemp.formModel[index][\"value\"] = newValue;else console.log(\"Failed to find index in model\");\n    setState({\n      ...stateTemp\n    });\n  };\n  function findFieldByKey(keyval) {\n    let index = state.formModel.findIndex(object => {\n      return object.key === keyval;\n    });\n    if (index > -1) return state.formModel[index];else console.log(\"findFieldByKey() failed to find index\");\n    return null;\n  }\n\n  // Update local state, call parent onChange if any.\n  //TODO: CHANGE ALL TO USE ON CHANGE\n  const onChange = e => {\n    var inputField = e.target.name;\n    var desiredValue = e.target.value;\n    updateFieldValue(inputField, desiredValue);\n    var fieldObject = findFieldByKey(inputField);\n    if (fieldObject.onChange) {\n      fieldObject.onChange(e, state);\n    }\n  };\n  const onRadioChange = e => {\n    var inputField = e.target.name;\n    var desiredValue = e.target.value;\n    updateFieldValue(inputField, desiredValue);\n    var fieldObject = findFieldByKey(inputField);\n    if (fieldObject.onChange) {\n      fieldObject.onChange(e, state);\n    }\n  };\n  const onCheckboxChange = e => {\n    // console.log(\"e.target\");\n    // console.log(e.target);\n\n    var inputField = e.target.name;\n    var desiredValue = e.target.value;\n    var wasChecked = e.target.checked;\n    updateMultiFieldValue(inputField, desiredValue, wasChecked);\n    var fieldObject = findFieldByKey(inputField);\n    if (fieldObject.onChange) {\n      fieldObject.onChange(e, state);\n    }\n  };\n  const getPresignedUrl = async fileName => {\n    return apiGET(\"/files/presignedurl?fileName=\".concat(fileName, \"&assessment=\").concat(props.assessmentId));\n  };\n\n  // Upload the file to S3\n  /// Validate the file input (file type, size etc...)\n  /// GET the presigned url\n  /// PUT the file using the presigned url\n  const onFileChange = async e => {\n    setState({\n      ...state,\n      isLoading: true\n    });\n    // console.log(\"e.target\");\n    // console.log(e.target);\n    // console.log(e.target.attributes[\"order\"].value);\n    file.current = e.target.files[0];\n    var fileName = e.target.attributes[\"order\"].value;\n    var fileExt = file.current.name.split(\".\").pop();\n    var fieldId = e.target.id;\n\n    // basic file validation to make sure it works.\n    var maxFileSize = 5000000;\n    // basic file size validation:\n    if (file.current && file.current.size > maxFileSize) {\n      alert(\"Please pick a file smaller than \".concat(maxFileSize / 1000000, \" MB.\"));\n      return;\n    }\n\n    // Get a presigned url.\n    //console.log(\"Getting presigned url\");\n    var presignedUrl = await getPresignedUrl(\"\".concat(fileName, \".\").concat(fileExt));\n    //console.log(presignedUrl);\n\n    // upload the file.\n    try {\n      var fileTest = await fetch(presignedUrl[\"body\"], {\n        method: \"PUT\",\n        body: file.current,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => response.json());\n\n      // console.log(\"fileTest\");\n      // console.log(fileTest);\n    } catch (e) {\n      if (e.message === \"Request failed with status code 502\") {\n        //toggleApiError502(true);\n      } else {\n        console.log(e);\n        //props.onLogout();\n      }\n    }\n    var stateTemp = {\n      ...state\n    };\n    updateFieldValue(fieldId, file.current.name);\n    //stateTemp.formModel[fieldId] = file.current.name;\n\n    setState({\n      ...stateTemp\n    });\n    if (props.onSubmit) props.onSubmit(stateTemp);\n    setState({\n      ...state,\n      isLoading: false\n    });\n  };\n  const setDependencyRules = model => {\n    var stateTemp = {\n      ...state\n    };\n    model.map((m, c) => {\n      if (m.dependencies.length > 0) {\n        stateTemp[\"dependencies\"][m.key] = m.dependencies;\n      }\n    });\n  };\n\n  /// TODO: Implement hide/show dependent questions.\n  const hideField = () => {};\n  const showField = () => {};\n\n  /// Pagination functions\n\n  // Go to the next page\n  // Make sure that the next page exists before setting it.\n  const nextPage = e => {\n    e.preventDefault(); // Stop the form from submitting and triggering validation for now\n    // apparently ! for 'not' doesn't work in react ¯\\_(ツ)_/¯\n    if (visiblePage + 2 > maxPages) {\n      console.log(\"\".concat(visiblePage + 2, \" is greater than the max pages \").concat(maxPages));\n    } else {\n      setVisiblePage(visiblePage + 1);\n    }\n  };\n\n  // Go to the previous page.\n  // Make sure that the previous page exists before setting it.\n  const prevPage = e => {\n    e.preventDefault(); // Stop the form from submitting and triggering validation for now\n\n    if (visiblePage - 1 < minPage) {\n      console.log(\"\".concat(visiblePage - 1, \" is less than the min pages \").concat(minPage));\n    } else {\n      setVisiblePage(visiblePage - 1);\n    }\n  };\n\n  // Go to a specific page\n  // Make sure that the page exists before setting it.\n  const setPage = (e, i) => {\n    e.preventDefault(); // Stop the form from submitting and triggering validation for now\n\n    // console.log(\"setting the page\");\n    // console.log(`page: ${i}, min: ${minPage}, max:${maxPages}`);\n    if (i + 1 >= minPage && i + 1 <= maxPages) {\n      setVisiblePage(i);\n    } else {\n      console.log(\"\".concat(i, \" is out of bounds.\"));\n    }\n  };\n\n  /// Field render functions\n  const renderStatic = fieldValue => {\n    // console.log(\"Rendering Static\");\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"form-control-static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 12\n      }\n    }, fieldValue);\n  };\n  const renderCheckbox = function (options, key) {\n    let fieldValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    // console.log(\"Rendering Checkbox\");\n    var selectedValues = [];\n    var index = state.formModel.findIndex(object => {\n      return object.key === key;\n    });\n    if (index > -1) selectedValues = state.formModel[index][\"value\"];else console.log(\"Failed to find index in model\");\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 7\n      }\n    }, Object.keys(options).map((keyName, i) => /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      className: \"checkbox\",\n      key: \"\".concat(i, \"checkboxformgroup\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      id: \"\".concat(key, \"_\").concat(keyName),\n      name: key,\n      value: keyName,\n      parent: key,\n      onChange: e => {\n        onCheckboxChange(e);\n      },\n      checked: selectedValues.includes(keyName),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      className: \"form-check-label\",\n      htmlFor: \"\".concat(key, \"_\").concat(keyName),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    }, options[keyName]))));\n  };\n  const getInput = (isChecked, key, keyName) => {\n    if (isChecked === true) return /*#__PURE__*/React.createElement(Input, {\n      className: \"form-check-input\",\n      type: \"radio\",\n      id: \"\".concat(key, \"_\").concat(keyName),\n      questionId: key,\n      name: key,\n      value: keyName,\n      parent: key,\n      onChange: e => {\n        onRadioChange(e);\n      },\n      checked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }\n    });else return /*#__PURE__*/React.createElement(Input, {\n      className: \"form-check-input\",\n      type: \"radio\",\n      id: \"\".concat(key, \"_\").concat(keyName),\n      questionId: key,\n      name: key,\n      value: keyName,\n      parent: key,\n      onChange: e => {\n        onRadioChange(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }\n    });\n  };\n  const renderRadio = function (options, key, q_ref) {\n    let fieldValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n    //console.log(\"Rendering Radio\");\n    // console.log(options);\n    // console.log(key);\n    //console.log(fieldValue);\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 7\n      }\n    }, Object.keys(options).sort((a, b) => a < b).map((keyName, i) => /*#__PURE__*/React.createElement(FormGroup, {\n      key: \"\".concat(i, \"radioformgroup\"),\n      check: true,\n      className: \"radio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 13\n      }\n    }, getInput(keyName === fieldValue, key, keyName), /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      className: \"form-check-label\",\n      htmlFor: \"\".concat(key, \"_\").concat(keyName),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 15\n      }\n    }, options[keyName]))));\n  };\n  const renderSelect = (options, key, fieldValue) => {\n    // console.log(\"Rendering Select\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, Object.assign({}, props, {\n      type: \"select\",\n      id: key,\n      name: key,\n      key: \"\".concat(key, \"input\"),\n      defaultValue: fieldValue,\n      onChange: e => {\n        onChange(e);\n      },\n      required: true,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }\n    }), Object.keys(options).map((keyName, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: \"\".concat(i, \"selectOption\"),\n      value: keyName,\n      selected: options[keyName] === fieldValue ? \"selected\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 13\n      }\n    }, options[keyName]))));\n  };\n  const renderInput = (type, key, fieldValue) => {\n    // console.log(`Rendering Input ${type}`);\n    // console.log(state.dependencies[\"key\"]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, Object.assign({}, props, {\n      type: type,\n      id: key,\n      name: key,\n      key: \"\".concat(key, \"input\"),\n      defaultValue: fieldValue,\n      onChange: e => {\n        onChange(e);\n      },\n      required: true,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }\n    })));\n  };\n  const renderFileInput = (type, key, fieldValue, fieldOrder) => {\n    // console.log(`Rendering Input ${type}`);\n    // console.log(state.dependencies[\"key\"]);\n    // console.log(\"fieldValueFile\");\n    // console.log(fieldValue);\n\n    var hasValue = fieldValue !== \"\";\n    return hasValue === true ? renderStatic(fieldValue) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, Object.assign({}, props, {\n      type: type,\n      id: key,\n      name: key,\n      key: \"\".concat(key, \"input\"),\n      onChange: e => {\n        onFileChange(e);\n      },\n      order: fieldOrder,\n      \"data-order\": fieldOrder,\n      required: true,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  // Assuming for now there will always be at least one page.\n  const renderPagination = maxPages => {\n    return /*#__PURE__*/React.createElement(Pagination, {\n      listClassName: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PaginationItem, {\n      disabled: visiblePage === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      previous: true,\n      onClick: e => prevPage(e),\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }\n    })), [...Array(maxPages)].map((page, i) => /*#__PURE__*/React.createElement(PaginationItem, {\n      active: i === visiblePage,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      onClick: e => setPage(e, i),\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 13\n      }\n    }, i + 1))), /*#__PURE__*/React.createElement(PaginationItem, {\n      disabled: visiblePage + 1 === maxPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      next: true,\n      onClick: e => nextPage(e),\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }\n    })));\n  };\n  const renderTest = model => {\n    try {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, Object.keys(model[visiblePage]).map((keyName, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 15\n        }\n      }, keyName), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 15\n        }\n      }, model[visiblePage][keyName].sort((a, b) => a.order > b.order).map(m => {\n        let key = m.key;\n        let type = m.type || \"text\";\n        let props = m.props || {};\n        let placeholder = m.placeholder || \"\";\n        let fieldValue = m.value || \"\";\n        let options = m.options || {};\n        let questionRef = m.question_ref;\n        setValidationRules(model[visiblePage][keyName]);\n        setDependencyRules(model[visiblePage][keyName]);\n        return /*#__PURE__*/React.createElement(FormGroup, {\n          row: true,\n          key: \"\".concat(key, \"label\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          htmlFor: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 27\n          }\n        }, m.order, \" - \", m.label)), /*#__PURE__*/React.createElement(Col, {\n          xs: \"12\",\n          md: \"9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 25\n          }\n        }, (() => {\n          switch (type) {\n            case \"select\":\n              return renderSelect(options, key, fieldValue);\n            case \"radio\":\n              return renderRadio(options, key, questionRef, fieldValue);\n            case \"checkbox\":\n              return renderCheckbox(options, key, fieldValue);\n            case \"text\":\n              return renderInput(type, key, fieldValue);\n            case \"textarea\":\n              return renderInput(type, key, fieldValue);\n            case \"date\":\n              return renderInput(type, key, fieldValue);\n            case \"tel\":\n              return renderInput(type, key, fieldValue);\n            case \"file\":\n              return renderFileInput(type, key, fieldValue, m.order);\n            default:\n              return \"renderStatic(fieldValue)\";\n          }\n        })()));\n      })))), renderPagination(maxPages));\n    } catch (e) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 14\n        }\n      }, e.message);\n    }\n  };\n  const renderForm = () => {\n    // console.log(\"Form model\");\n    // console.log(props.model);\n    let model = state.formModel;\n    if (props.pagination === true) {\n      let categories = [...new Set(model.map(m => m.category))]; // Distinct list of the question categories\n      var paginatedModel = categories.map(cat => {\n        var temp = {};\n        temp[cat] = model.filter(i => {\n          return i.category === cat;\n        });\n        return temp;\n      });\n\n      // console.log(\"y\");\n      // console.log(paginatedModel);\n      return renderTest(paginatedModel);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"needs-validation\",\n    noValidate: true,\n    onSubmit: e => {\n      handleSubmit(e);\n    },\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 9\n    }\n  }, (() => {\n    if (props.title) {\n      return /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 19\n        }\n      }, props.title));\n    } else {}\n  })(), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 11\n    }\n  }, state.doneBuildingModel === true && renderForm()), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LoaderButton, {\n    size: \"sm\",\n    color: \"primary\",\n    type: \"submit\",\n    isLoading: state.isLoading,\n    className: \"mx-1\"\n    //   onClick={e => {\n    //     handleSubmit(e);\n    //   }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 13\n    }\n  }, \"Save\"), (() => {\n    if (props.cancelButton) {\n      return /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        color: \"link\",\n        type: \"reset\",\n        className: \"mx-1\",\n        onClick: props.cancelButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 19\n        }\n      }, props.cancelButtonText);\n    } else {}\n  })()))));\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Card","CardBody","CardFooter","CardHeader","Col","Form","FormGroup","Input","Label","Pagination","PaginationItem","PaginationLink","LoaderButton","apiGET","DynamicForm","props","_this","state","setState","isLoading","doneBuildingModel","dependencies","formModel","visiblePage","setVisiblePage","maxPages","setMaxPages","minPage","setMinPage","file","validationRules","fetchData","onLoad","model","stateTemp","console","log","performValidation","success","Object","keys","map","key","required","length","e","setValidationRules","i","c","x","validation","handleSubmit","event","preventDefault","formValues","m","options","value","toString","onSubmit","alert","updateMultiFieldValue","guid","newValue","selected","index","findIndex","object","vals","push","filter","updateFieldValue","findFieldByKey","keyval","onChange","inputField","target","name","desiredValue","fieldObject","onRadioChange","onCheckboxChange","wasChecked","checked","getPresignedUrl","fileName","concat","assessmentId","onFileChange","current","files","attributes","fileExt","split","pop","fieldId","id","maxFileSize","size","presignedUrl","fileTest","fetch","method","body","headers","then","response","json","message","setDependencyRules","hideField","showField","nextPage","prevPage","setPage","renderStatic","fieldValue","createElement","className","__self","__source","_jsxFileName","lineNumber","columnNumber","renderCheckbox","arguments","undefined","selectedValues","keyName","check","type","parent","includes","htmlFor","getInput","isChecked","questionId","renderRadio","q_ref","sort","a","b","renderSelect","assign","defaultValue","renderInput","renderFileInput","fieldOrder","hasValue","order","renderPagination","listClassName","disabled","previous","onClick","href","Array","page","active","next","renderTest","Fragment","placeholder","questionRef","question_ref","row","md","label","xs","renderForm","pagination","categories","Set","category","paginatedModel","cat","temp","noValidate","title","color","cancelButton","cancelButtonText"],"sources":["/Users/JMD/Developments/Projects/Fiji-Web/src/components/DynamicForm/DynamicForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink\r\n} from \"reactstrap\";\r\n\r\nimport LoaderButton from \"../../components/LoaderButton/LoaderButton\";\r\nimport { apiGET } from \"../../Common/Api/apiHelper\";\r\n\r\nexport default function DynamicForm(props) {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    doneBuildingModel: false,\r\n    dependencies: {},\r\n    formModel: {}\r\n  });\r\n  const [visiblePage, setVisiblePage] = useState(0);\r\n  const [maxPages, setMaxPages] = useState(0);\r\n\r\n  // const [validationSuccess, setValidationSuccess] = useState(false);\r\n  const [minPage, setMinPage] = useState(0); //eslint-disable-line\r\n\r\n  const file = useRef(null); // useRef will not trigger component rerender on change\r\n\r\n  var validationRules = [{}];\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await onLoad();\r\n    };\r\n    fetchData();\r\n  }, []); //eslint-disable-line\r\n\r\n  // When the component loads, update state with any pre-filled values\r\n  const onLoad = () => {\r\n    // console.log(\"ON LOAD TRIGGERED\");\r\n    let model = props.model;\r\n    var stateTemp = { ...state };\r\n    console.log(\"JMD-\");\r\n\r\n    setVisiblePage(props.visiblePage ? props.visiblePage : 0);\r\n    setMaxPages(props.maxPages ? props.maxPages : 1);\r\n\r\n    stateTemp.formModel = model;\r\n\r\n    // console.log(\"DUMP: \", stateTemp.formModel);\r\n    stateTemp.doneBuildingModel = true;\r\n\r\n    setState({ ...stateTemp });\r\n  };\r\n\r\n  const performValidation = () => {\r\n    var success = true;\r\n    // console.log(\"validating...\");\r\n    try {\r\n      // console.log(\"validationRules\");\r\n      // console.log(validationRules);\r\n      // console.log(\"state\");\r\n      // console.log(state);\r\n      Object.keys(state.formModel).map(function(key) {\r\n        console.log(validationRules[key].required);\r\n\r\n        // TODO trigger validation message useful tot he specific field\r\n        if (validationRules[key].required && state.formModel[key].length <= 0) {\r\n          success = false;\r\n        }\r\n\r\n        if (state.formModel[key].length > 0) {\r\n          if (state.formModel[key].length < validationRules[key].length) {\r\n            success = false;\r\n          }\r\n        }\r\n      });\r\n\r\n      // validationRules.map((i, c) => {\r\n      //   console.log(i);\r\n      //   console.log(validationRules[i]);\r\n      //   if (validationRules[c][\"rules\"][\"required\"]) {\r\n      //     if (state[validationRules[c].field].length === 0) {\r\n      //       setValidationSuccess(false);\r\n      //     }\r\n      //   }\r\n      // });\r\n    } catch (e) {}\r\n    return success;\r\n  };\r\n\r\n  const setValidationRules = async model => {\r\n    // model.map((i, c) => {\r\n    //   console.log(Object.keys(model[c].validation));\r\n    //   console.log(Object.values(model[c].validation));\r\n    // });\r\n\r\n    model.map((i, c) => {\r\n      var key = model[c].key;\r\n      var x = {\r\n        //field: key,\r\n      };\r\n      validationRules[key] = {\r\n        ...model[c].validation\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    console.log(\"submitted\");\r\n    event.preventDefault();\r\n\r\n    let model = state.formModel;\r\n    let formValues = {};\r\n\r\n    model.map(m => {\r\n      if (m.options) {\r\n        formValues[m.key] = m.value || Object.keys(m.options)[0].toString();\r\n      } else {\r\n        formValues[m.key] = m.value || \"\";\r\n      }\r\n    });\r\n\r\n    if (performValidation()) {\r\n      setState({ ...state, isLoading: true });\r\n      if (props.onSubmit) props.onSubmit(formValues);\r\n      setState({ ...state, isLoading: false });\r\n      console.log(\"Validation Success\");\r\n    } else {\r\n      alert(\"Validation Failed\");\r\n    }\r\n  };\r\n\r\n  const updateMultiFieldValue = (guid, newValue, selected) => {\r\n    var stateTemp = { ...state };\r\n\r\n    var index = stateTemp.formModel.findIndex(object => {\r\n      return object.key === guid;\r\n    });\r\n\r\n    if (index > -1) {\r\n      var vals = [];\r\n      if (stateTemp.formModel[index][\"value\"] === \"\")\r\n        stateTemp.formModel[index][\"value\"] = vals;\r\n\r\n      vals = stateTemp.formModel[index][\"value\"];\r\n      if (selected) vals.push(newValue);\r\n      else vals = vals.filter(x => x !== newValue);\r\n\r\n      stateTemp.formModel[index][\"value\"] = vals;\r\n    } else console.log(\"Failed to find index in model\");\r\n\r\n    setState({ ...stateTemp });\r\n  };\r\n\r\n  const updateFieldValue = (guid, newValue) => {\r\n    var stateTemp = { ...state };\r\n\r\n    var index = stateTemp.formModel.findIndex(object => {\r\n      return object.key === guid;\r\n    });\r\n\r\n    if (index > -1) stateTemp.formModel[index][\"value\"] = newValue;\r\n    else console.log(\"Failed to find index in model\");\r\n\r\n    setState({ ...stateTemp });\r\n  };\r\n\r\n  function findFieldByKey(keyval) {\r\n    let index = state.formModel.findIndex(object => {\r\n      return object.key === keyval;\r\n    });\r\n\r\n    if (index > -1) return state.formModel[index];\r\n    else console.log(\"findFieldByKey() failed to find index\");\r\n    return null;\r\n  }\r\n\r\n  // Update local state, call parent onChange if any.\r\n  //TODO: CHANGE ALL TO USE ON CHANGE\r\n  const onChange = e => {\r\n    var inputField = e.target.name;\r\n    var desiredValue = e.target.value;\r\n    updateFieldValue(inputField, desiredValue);\r\n\r\n    var fieldObject = findFieldByKey(inputField);\r\n    if (fieldObject.onChange) {\r\n      fieldObject.onChange(e, state);\r\n    }\r\n  };\r\n\r\n  const onRadioChange = e => {\r\n    var inputField = e.target.name;\r\n    var desiredValue = e.target.value;\r\n    updateFieldValue(inputField, desiredValue);\r\n\r\n    var fieldObject = findFieldByKey(inputField);\r\n    if (fieldObject.onChange) {\r\n      fieldObject.onChange(e, state);\r\n    }\r\n  };\r\n\r\n  const onCheckboxChange = e => {\r\n    // console.log(\"e.target\");\r\n    // console.log(e.target);\r\n\r\n    var inputField = e.target.name;\r\n    var desiredValue = e.target.value;\r\n    var wasChecked = e.target.checked;\r\n    updateMultiFieldValue(inputField, desiredValue, wasChecked);\r\n\r\n    var fieldObject = findFieldByKey(inputField);\r\n    if (fieldObject.onChange) {\r\n      fieldObject.onChange(e, state);\r\n    }\r\n  };\r\n\r\n  const getPresignedUrl = async fileName => {\r\n    return apiGET(\r\n      `/files/presignedurl?fileName=${fileName}&assessment=${props.assessmentId}`\r\n    );\r\n  };\r\n\r\n  // Upload the file to S3\r\n  /// Validate the file input (file type, size etc...)\r\n  /// GET the presigned url\r\n  /// PUT the file using the presigned url\r\n  const onFileChange = async e => {\r\n    setState({ ...state, isLoading: true });\r\n    // console.log(\"e.target\");\r\n    // console.log(e.target);\r\n    // console.log(e.target.attributes[\"order\"].value);\r\n    file.current = e.target.files[0];\r\n    var fileName = e.target.attributes[\"order\"].value;\r\n    var fileExt = file.current.name.split(\".\").pop();\r\n    var fieldId = e.target.id;\r\n\r\n    // basic file validation to make sure it works.\r\n    var maxFileSize = 5000000;\r\n    // basic file size validation:\r\n    if (file.current && file.current.size > maxFileSize) {\r\n      alert(`Please pick a file smaller than ${maxFileSize / 1000000} MB.`);\r\n      return;\r\n    }\r\n\r\n    // Get a presigned url.\r\n    //console.log(\"Getting presigned url\");\r\n    var presignedUrl = await getPresignedUrl(`${fileName}.${fileExt}`);\r\n    //console.log(presignedUrl);\r\n\r\n    // upload the file.\r\n    try {\r\n      var fileTest = await fetch(presignedUrl[\"body\"], {\r\n        method: \"PUT\",\r\n        body: file.current,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      }).then(response => response.json());\r\n\r\n      // console.log(\"fileTest\");\r\n      // console.log(fileTest);\r\n    } catch (e) {\r\n      if (e.message === \"Request failed with status code 502\") {\r\n        //toggleApiError502(true);\r\n      } else {\r\n        console.log(e);\r\n        //props.onLogout();\r\n      }\r\n    }\r\n\r\n    var stateTemp = { ...state };\r\n\r\n    updateFieldValue(fieldId, file.current.name);\r\n    //stateTemp.formModel[fieldId] = file.current.name;\r\n\r\n    setState({ ...stateTemp });\r\n\r\n    if (props.onSubmit) props.onSubmit(stateTemp);\r\n    setState({ ...state, isLoading: false });\r\n  };\r\n\r\n  const setDependencyRules = model => {\r\n    var stateTemp = { ...state };\r\n\r\n    model.map((m, c) => {\r\n      if (m.dependencies.length > 0) {\r\n        stateTemp[\"dependencies\"][m.key] = m.dependencies;\r\n      }\r\n    });\r\n  };\r\n\r\n  /// TODO: Implement hide/show dependent questions.\r\n  const hideField = () => {};\r\n\r\n  const showField = () => {};\r\n\r\n  /// Pagination functions\r\n\r\n  // Go to the next page\r\n  // Make sure that the next page exists before setting it.\r\n  const nextPage = e => {\r\n    e.preventDefault(); // Stop the form from submitting and triggering validation for now\r\n    // apparently ! for 'not' doesn't work in react ¯\\_(ツ)_/¯\r\n    if (visiblePage + 2 > maxPages) {\r\n      console.log(\r\n        `${visiblePage + 2} is greater than the max pages ${maxPages}`\r\n      );\r\n    } else {\r\n      setVisiblePage(visiblePage + 1);\r\n    }\r\n  };\r\n\r\n  // Go to the previous page.\r\n  // Make sure that the previous page exists before setting it.\r\n  const prevPage = e => {\r\n    e.preventDefault(); // Stop the form from submitting and triggering validation for now\r\n\r\n    if (visiblePage - 1 < minPage) {\r\n      console.log(`${visiblePage - 1} is less than the min pages ${minPage}`);\r\n    } else {\r\n      setVisiblePage(visiblePage - 1);\r\n    }\r\n  };\r\n\r\n  // Go to a specific page\r\n  // Make sure that the page exists before setting it.\r\n  const setPage = (e, i) => {\r\n    e.preventDefault(); // Stop the form from submitting and triggering validation for now\r\n\r\n    // console.log(\"setting the page\");\r\n    // console.log(`page: ${i}, min: ${minPage}, max:${maxPages}`);\r\n    if (i + 1 >= minPage && i + 1 <= maxPages) {\r\n      setVisiblePage(i);\r\n    } else {\r\n      console.log(`${i} is out of bounds.`);\r\n    }\r\n  };\r\n\r\n  /// Field render functions\r\n  const renderStatic = fieldValue => {\r\n    // console.log(\"Rendering Static\");\r\n    return <p className=\"form-control-static\">{fieldValue}</p>;\r\n  };\r\n\r\n  const renderCheckbox = (options, key, fieldValue = -1) => {\r\n    // console.log(\"Rendering Checkbox\");\r\n    var selectedValues = [];\r\n    var index = state.formModel.findIndex(object => {\r\n      return object.key === key;\r\n    });\r\n\r\n    if (index > -1) selectedValues = state.formModel[index][\"value\"];\r\n    else console.log(\"Failed to find index in model\");\r\n\r\n    return (\r\n      <span>\r\n        {Object.keys(options).map((keyName, i) => (\r\n          <FormGroup check className=\"checkbox\" key={`${i}checkboxformgroup`}>\r\n            <Input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id={`${key}_${keyName}`}\r\n              name={key}\r\n              value={keyName}\r\n              parent={key}\r\n              onChange={e => {\r\n                onCheckboxChange(e);\r\n              }}\r\n              checked={selectedValues.includes(keyName)}\r\n            />\r\n            <Label\r\n              check\r\n              className=\"form-check-label\"\r\n              htmlFor={`${key}_${keyName}`}\r\n            >\r\n              {options[keyName]}\r\n            </Label>\r\n          </FormGroup>\r\n        ))}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const getInput = (isChecked, key, keyName) => {\r\n    if (isChecked === true)\r\n      return (\r\n        <Input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          id={`${key}_${keyName}`}\r\n          questionId={key}\r\n          name={key}\r\n          value={keyName}\r\n          parent={key}\r\n          onChange={e => {\r\n            onRadioChange(e);\r\n          }}\r\n          checked={true}\r\n        />\r\n      );\r\n    else\r\n      return (\r\n        <Input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          id={`${key}_${keyName}`}\r\n          questionId={key}\r\n          name={key}\r\n          value={keyName}\r\n          parent={key}\r\n          onChange={e => {\r\n            onRadioChange(e);\r\n          }}\r\n        />\r\n      );\r\n  };\r\n\r\n  const renderRadio = (options, key, q_ref, fieldValue = -1) => {\r\n    //console.log(\"Rendering Radio\");\r\n    // console.log(options);\r\n    // console.log(key);\r\n    //console.log(fieldValue);\r\n    return (\r\n      <span>\r\n        {Object.keys(options)\r\n          .sort((a, b) => a < b)\r\n          .map((keyName, i) => (\r\n            <FormGroup key={`${i}radioformgroup`} check className=\"radio\">\r\n              {getInput(keyName === fieldValue, key, keyName)}\r\n              <Label\r\n                check\r\n                className=\"form-check-label\"\r\n                htmlFor={`${key}_${keyName}`}\r\n              >\r\n                {options[keyName]}\r\n              </Label>\r\n            </FormGroup>\r\n          ))}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderSelect = (options, key, fieldValue) => {\r\n    // console.log(\"Rendering Select\");\r\n    return (\r\n      <div>\r\n        <Input\r\n          {...props}\r\n          type=\"select\"\r\n          id={key}\r\n          name={key}\r\n          key={`${key}input`}\r\n          defaultValue={fieldValue}\r\n          onChange={e => {\r\n            onChange(e);\r\n          }}\r\n          required\r\n          className=\"form-control\"\r\n        >\r\n          {Object.keys(options).map((keyName, i) => (\r\n            <option\r\n              key={`${i}selectOption`}\r\n              value={keyName}\r\n              selected={options[keyName] === fieldValue ? \"selected\" : \"\"}\r\n            >\r\n              {options[keyName]}\r\n            </option>\r\n          ))}\r\n        </Input>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderInput = (type, key, fieldValue) => {\r\n    // console.log(`Rendering Input ${type}`);\r\n    // console.log(state.dependencies[\"key\"]);\r\n    return (\r\n      <div>\r\n        <Input\r\n          {...props}\r\n          type={type}\r\n          id={key}\r\n          name={key}\r\n          key={`${key}input`}\r\n          defaultValue={fieldValue}\r\n          onChange={e => {\r\n            onChange(e);\r\n          }}\r\n          required\r\n          className=\"form-control\"\r\n        ></Input>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderFileInput = (type, key, fieldValue, fieldOrder) => {\r\n    // console.log(`Rendering Input ${type}`);\r\n    // console.log(state.dependencies[\"key\"]);\r\n    // console.log(\"fieldValueFile\");\r\n    // console.log(fieldValue);\r\n\r\n    var hasValue = fieldValue !== \"\";\r\n    return hasValue === true ? (\r\n      renderStatic(fieldValue)\r\n    ) : (\r\n      <div>\r\n        <Input\r\n          {...props}\r\n          type={type}\r\n          id={key}\r\n          name={key}\r\n          key={`${key}input`}\r\n          onChange={e => {\r\n            onFileChange(e);\r\n          }}\r\n          order={fieldOrder}\r\n          data-order={fieldOrder}\r\n          required\r\n          className=\"form-control\"\r\n        ></Input>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Assuming for now there will always be at least one page.\r\n  const renderPagination = maxPages => {\r\n    return (\r\n      <Pagination listClassName=\"justify-content-center\">\r\n        <PaginationItem disabled={visiblePage === 0}>\r\n          <PaginationLink previous onClick={e => prevPage(e)} href=\"#\" />\r\n        </PaginationItem>\r\n        {[...Array(maxPages)].map((page, i) => (\r\n          <PaginationItem active={i === visiblePage} key={i}>\r\n            <PaginationLink onClick={e => setPage(e, i)} href=\"#\">\r\n              {i + 1}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        ))}\r\n        <PaginationItem disabled={visiblePage + 1 === maxPages}>\r\n          <PaginationLink next onClick={e => nextPage(e)} href=\"#\" />\r\n        </PaginationItem>\r\n      </Pagination>\r\n    );\r\n  };\r\n\r\n  const renderTest = model => {\r\n    try {\r\n      return (\r\n        <>\r\n          {/* {model.map((mod, i) => {\r\n            return ( */}\r\n          {Object.keys(model[visiblePage]).map((keyName, i) => (\r\n            <>\r\n              <h3>{keyName}</h3>\r\n              <p></p>\r\n              {/* <p> {JSON.stringify(mod[keyName])}</p> */}\r\n              <div>\r\n                {model[visiblePage][keyName]\r\n                  .sort((a, b) => a.order > b.order)\r\n                  .map(m => {\r\n                    let key = m.key;\r\n                    let type = m.type || \"text\";\r\n                    let props = m.props || {};\r\n                    let placeholder = m.placeholder || \"\";\r\n                    let fieldValue = m.value || \"\";\r\n                    let options = m.options || {};\r\n                    let questionRef = m.question_ref;\r\n\r\n                    setValidationRules(model[visiblePage][keyName]);\r\n                    setDependencyRules(model[visiblePage][keyName]);\r\n\r\n                    return (\r\n                      <FormGroup row key={`${key}label`}>\r\n                        <Col md=\"3\">\r\n                          <Label htmlFor={key}>\r\n                            {m.order} - {m.label}\r\n                          </Label>\r\n                        </Col>\r\n                        <Col xs=\"12\" md=\"9\">\r\n                          {(() => {\r\n                            switch (type) {\r\n                              case \"select\":\r\n                                return renderSelect(options, key, fieldValue);\r\n                              case \"radio\":\r\n                                return renderRadio(\r\n                                  options,\r\n                                  key,\r\n                                  questionRef,\r\n                                  fieldValue\r\n                                );\r\n                              case \"checkbox\":\r\n                                return renderCheckbox(options, key, fieldValue);\r\n                              case \"text\":\r\n                                return renderInput(type, key, fieldValue);\r\n                              case \"textarea\":\r\n                                return renderInput(type, key, fieldValue);\r\n                              case \"date\":\r\n                                return renderInput(type, key, fieldValue);\r\n                              case \"tel\":\r\n                                return renderInput(type, key, fieldValue);\r\n                              case \"file\":\r\n                                return renderFileInput(\r\n                                  type,\r\n                                  key,\r\n                                  fieldValue,\r\n                                  m.order\r\n                                );\r\n                              default:\r\n                                return \"renderStatic(fieldValue)\";\r\n                            }\r\n                          })()}\r\n                        </Col>\r\n                      </FormGroup>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </>\r\n          ))}\r\n          {/* );\r\n           })} */}\r\n          {renderPagination(maxPages)}\r\n        </>\r\n      );\r\n    } catch (e) {\r\n      return <div>{e.message}</div>;\r\n    }\r\n  };\r\n\r\n  const renderForm = () => {\r\n    // console.log(\"Form model\");\r\n    // console.log(props.model);\r\n    let model = state.formModel;\r\n\r\n    if (props.pagination === true) {\r\n      let categories = [...new Set(model.map(m => m.category))]; // Distinct list of the question categories\r\n      var paginatedModel = categories.map(cat => {\r\n        var temp = {};\r\n        temp[cat] = model.filter(i => {\r\n          return i.category === cat;\r\n        });\r\n        return temp;\r\n      });\r\n\r\n      // console.log(\"y\");\r\n      // console.log(paginatedModel);\r\n      return renderTest(paginatedModel);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Col md=\"12\">\r\n      <Card>\r\n        <Form\r\n          className=\"needs-validation\"\r\n          noValidate\r\n          onSubmit={e => {\r\n            handleSubmit(e);\r\n          }}\r\n          method=\"post\"\r\n        >\r\n          {(() => {\r\n            if (props.title) {\r\n              return (\r\n                <CardHeader>\r\n                  <strong>{props.title}</strong>\r\n                </CardHeader>\r\n              );\r\n            } else {\r\n            }\r\n          })()}\r\n          <CardBody>\r\n            {state.doneBuildingModel === true && renderForm()}\r\n          </CardBody>\r\n          <CardFooter>\r\n            <div></div>\r\n            <LoaderButton\r\n              size=\"sm\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              isLoading={state.isLoading}\r\n              className=\"mx-1\"\r\n              //   onClick={e => {\r\n              //     handleSubmit(e);\r\n              //   }}\r\n            >\r\n              Save\r\n            </LoaderButton>\r\n\r\n            {(() => {\r\n              if (props.cancelButton) {\r\n                return (\r\n                  <Button\r\n                    size=\"sm\"\r\n                    color=\"link\"\r\n                    type=\"reset\"\r\n                    className=\"mx-1\"\r\n                    onClick={props.cancelButton}\r\n                  >\r\n                    {props.cancelButtonText}\r\n                  </Button>\r\n                );\r\n              } else {\r\n              }\r\n            })()}\r\n\r\n            {/* {props.maxPages ? renderPagination(state.maxPages) : \"\"} */}\r\n          </CardFooter>\r\n        </Form>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}