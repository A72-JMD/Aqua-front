{"ast":null,"code":"import * as Observable from 'zen-observable';\nvar ReachabilityNavigator = /** @class */function () {\n  function ReachabilityNavigator() {}\n  ReachabilityNavigator.prototype.networkMonitor = function () {\n    return new Observable(function (observer) {\n      observer.next({\n        online: window.navigator.onLine\n      });\n      var notifyOnline = function () {\n        return observer.next({\n          online: true\n        });\n      };\n      var notifyOffline = function () {\n        return observer.next({\n          online: false\n        });\n      };\n      window.addEventListener('online', notifyOnline);\n      window.addEventListener('offline', notifyOffline);\n      return function () {\n        window.removeEventListener('online', notifyOnline);\n        window.removeEventListener('offline', notifyOffline);\n      };\n    });\n  };\n  return ReachabilityNavigator;\n}();\nexport default ReachabilityNavigator;","map":{"version":3,"sources":["../../src/Util/Reachability.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,UAAU,MAAM,gBAAgB;AAM5C,IAAA,qBAAA,GAAA,aAAA,YAAA;EAAA,SAAA,qBAAA,CAAA,EAAA,CAiBA;EAhBC,qBAAA,CAAA,SAAA,CAAA,cAAc,GAAd,YAAA;IACC,OAAO,IAAI,UAAU,CAAC,UAAA,QAAQ,EAAA;MAC7B,QAAQ,CAAC,IAAI,CAAC;QAAE,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC;MAAM,CAAE,CAAC;MAElD,IAAM,YAAY,GAAG,SAAA,CAAA,EAAA;QAAM,OAAA,QAAQ,CAAC,IAAI,CAAC;UAAE,MAAM,EAAE;QAAI,CAAE,CAAC;MAA/B,CAA+B;MAC1D,IAAM,aAAa,GAAG,SAAA,CAAA,EAAA;QAAM,OAAA,QAAQ,CAAC,IAAI,CAAC;UAAE,MAAM,EAAE;QAAK,CAAE,CAAC;MAAhC,CAAgC;MAE5D,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC;MAC/C,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC;MAEjD,OAAO,YAAA;QACN,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,YAAY,CAAC;QAClD,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,aAAa,CAAC;MACrD,CAAC;IACF,CAAC,CAAC;EACH,CAAC;EACF,OAAA,qBAAC;AAAD,CAAC,CAAA,CAAA","sourceRoot":"","sourcesContent":["import * as Observable from 'zen-observable';\nvar ReachabilityNavigator = /** @class */ (function () {\n    function ReachabilityNavigator() {\n    }\n    ReachabilityNavigator.prototype.networkMonitor = function () {\n        return new Observable(function (observer) {\n            observer.next({ online: window.navigator.onLine });\n            var notifyOnline = function () { return observer.next({ online: true }); };\n            var notifyOffline = function () { return observer.next({ online: false }); };\n            window.addEventListener('online', notifyOnline);\n            window.addEventListener('offline', notifyOffline);\n            return function () {\n                window.removeEventListener('online', notifyOnline);\n                window.removeEventListener('offline', notifyOffline);\n            };\n        });\n    };\n    return ReachabilityNavigator;\n}());\nexport default ReachabilityNavigator;\n//# sourceMappingURL=Reachability.js.map"]},"metadata":{},"sourceType":"module"}