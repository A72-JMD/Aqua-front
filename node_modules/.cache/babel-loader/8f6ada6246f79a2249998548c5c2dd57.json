{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { ModelPredicateCreator } from '../predicates';\nimport { QueryOne } from '../types';\nimport { SYNC } from '../util';\nimport { TransformerMutationType } from './utils';\n// TODO: Persist deleted ids\nvar MutationEventOutbox = /** @class */function () {\n  function MutationEventOutbox(schema, namespaceResolver, MutationEvent, ownSymbol) {\n    this.schema = schema;\n    this.namespaceResolver = namespaceResolver;\n    this.MutationEvent = MutationEvent;\n    this.ownSymbol = ownSymbol;\n  }\n  MutationEventOutbox.prototype.enqueue = function (storage, mutationEvent) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mutationEventModelDefinition, predicate, first, incomingMutationType, incomingConditionJSON, incomingCondition;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n            predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n              return c.modelId('eq', mutationEvent.modelId).id('ne', _this.inProgressMutationEventId);\n            });\n            return [4 /*yield*/, storage.query(this.MutationEvent, predicate)];\n          case 1:\n            first = _a.sent()[0];\n            if (!(first === undefined)) return [3 /*break*/, 3];\n            return [4 /*yield*/, storage.save(mutationEvent, undefined, this.ownSymbol)];\n          case 2:\n            _a.sent();\n            return [2 /*return*/];\n          case 3:\n            incomingMutationType = mutationEvent.operation;\n            if (!(first.operation === TransformerMutationType.CREATE)) return [3 /*break*/, 8];\n            if (!(incomingMutationType === TransformerMutationType.DELETE)) return [3 /*break*/, 5];\n            // delete all for model\n            return [4 /*yield*/, storage.delete(this.MutationEvent, predicate)];\n          case 4:\n            // delete all for model\n            _a.sent();\n            return [3 /*break*/, 7];\n          case 5:\n            // first gets updated with incoming's data, condition intentionally skiped\n            return [4 /*yield*/, storage.save(this.MutationEvent.copyOf(first, function (draft) {\n              draft.data = mutationEvent.data;\n            }), undefined, this.ownSymbol)];\n          case 6:\n            // first gets updated with incoming's data, condition intentionally skiped\n            _a.sent();\n            _a.label = 7;\n          case 7:\n            return [3 /*break*/, 12];\n          case 8:\n            incomingConditionJSON = mutationEvent.condition;\n            incomingCondition = JSON.parse(incomingConditionJSON);\n            if (!(Object.keys(incomingCondition).length === 0)) return [3 /*break*/, 10];\n            // delete all for model\n            return [4 /*yield*/, storage.delete(this.MutationEvent, predicate)];\n          case 9:\n            // delete all for model\n            _a.sent();\n            _a.label = 10;\n          case 10:\n            // Enqueue new one\n            return [4 /*yield*/, storage.save(mutationEvent, undefined, this.ownSymbol)];\n          case 11:\n            // Enqueue new one\n            _a.sent();\n            _a.label = 12;\n          case 12:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  MutationEventOutbox.prototype.dequeue = function (storage) {\n    return __awaiter(this, void 0, void 0, function () {\n      var head;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.peek(storage)];\n          case 1:\n            head = _a.sent();\n            return [4 /*yield*/, storage.delete(head)];\n          case 2:\n            _a.sent();\n            this.inProgressMutationEventId = undefined;\n            return [2 /*return*/, head];\n        }\n      });\n    });\n  };\n  /**\n   * Doing a peek() implies that the mutation goes \"inProgress\"\n   *\n   * @param storage\n   */\n  MutationEventOutbox.prototype.peek = function (storage) {\n    return __awaiter(this, void 0, void 0, function () {\n      var head;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, storage.queryOne(this.MutationEvent, QueryOne.FIRST)];\n          case 1:\n            head = _a.sent();\n            this.inProgressMutationEventId = head ? head.id : undefined;\n            return [2 /*return*/, head];\n        }\n      });\n    });\n  };\n  MutationEventOutbox.prototype.getForModel = function (storage, model) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mutationEventModelDefinition, mutationEvents;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            mutationEventModelDefinition = this.schema.namespaces[SYNC].models.MutationEvent;\n            return [4 /*yield*/, storage.query(this.MutationEvent, ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n              return c.modelId('eq', model.id);\n            }))];\n          case 1:\n            mutationEvents = _a.sent();\n            return [2 /*return*/, mutationEvents];\n        }\n      });\n    });\n  };\n  return MutationEventOutbox;\n}();\nexport { MutationEventOutbox };","map":{"version":3,"sources":["../../src/sync/outbox.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ModelPredicateCreator } from '../predicates';\nimport { QueryOne, } from '../types';\nimport { SYNC } from '../util';\nimport { TransformerMutationType } from './utils';\n// TODO: Persist deleted ids\nvar MutationEventOutbox = /** @class */ (function () {\n    function MutationEventOutbox(schema, namespaceResolver, MutationEvent, ownSymbol) {\n        this.schema = schema;\n        this.namespaceResolver = namespaceResolver;\n        this.MutationEvent = MutationEvent;\n        this.ownSymbol = ownSymbol;\n    }\n    MutationEventOutbox.prototype.enqueue = function (storage, mutationEvent) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationEventModelDefinition, predicate, first, incomingMutationType, incomingConditionJSON, incomingCondition;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n                        predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n                            return c\n                                .modelId('eq', mutationEvent.modelId)\n                                .id('ne', _this.inProgressMutationEventId);\n                        });\n                        return [4 /*yield*/, storage.query(this.MutationEvent, predicate)];\n                    case 1:\n                        first = (_a.sent())[0];\n                        if (!(first === undefined)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, storage.save(mutationEvent, undefined, this.ownSymbol)];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 3:\n                        incomingMutationType = mutationEvent.operation;\n                        if (!(first.operation === TransformerMutationType.CREATE)) return [3 /*break*/, 8];\n                        if (!(incomingMutationType === TransformerMutationType.DELETE)) return [3 /*break*/, 5];\n                        // delete all for model\n                        return [4 /*yield*/, storage.delete(this.MutationEvent, predicate)];\n                    case 4:\n                        // delete all for model\n                        _a.sent();\n                        return [3 /*break*/, 7];\n                    case 5: \n                    // first gets updated with incoming's data, condition intentionally skiped\n                    return [4 /*yield*/, storage.save(this.MutationEvent.copyOf(first, function (draft) {\n                            draft.data = mutationEvent.data;\n                        }), undefined, this.ownSymbol)];\n                    case 6:\n                        // first gets updated with incoming's data, condition intentionally skiped\n                        _a.sent();\n                        _a.label = 7;\n                    case 7: return [3 /*break*/, 12];\n                    case 8:\n                        incomingConditionJSON = mutationEvent.condition;\n                        incomingCondition = JSON.parse(incomingConditionJSON);\n                        if (!(Object.keys(incomingCondition).length === 0)) return [3 /*break*/, 10];\n                        // delete all for model\n                        return [4 /*yield*/, storage.delete(this.MutationEvent, predicate)];\n                    case 9:\n                        // delete all for model\n                        _a.sent();\n                        _a.label = 10;\n                    case 10: \n                    // Enqueue new one\n                    return [4 /*yield*/, storage.save(mutationEvent, undefined, this.ownSymbol)];\n                    case 11:\n                        // Enqueue new one\n                        _a.sent();\n                        _a.label = 12;\n                    case 12: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MutationEventOutbox.prototype.dequeue = function (storage) {\n        return __awaiter(this, void 0, void 0, function () {\n            var head;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.peek(storage)];\n                    case 1:\n                        head = _a.sent();\n                        return [4 /*yield*/, storage.delete(head)];\n                    case 2:\n                        _a.sent();\n                        this.inProgressMutationEventId = undefined;\n                        return [2 /*return*/, head];\n                }\n            });\n        });\n    };\n    /**\n     * Doing a peek() implies that the mutation goes \"inProgress\"\n     *\n     * @param storage\n     */\n    MutationEventOutbox.prototype.peek = function (storage) {\n        return __awaiter(this, void 0, void 0, function () {\n            var head;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, storage.queryOne(this.MutationEvent, QueryOne.FIRST)];\n                    case 1:\n                        head = _a.sent();\n                        this.inProgressMutationEventId = head ? head.id : undefined;\n                        return [2 /*return*/, head];\n                }\n            });\n        });\n    };\n    MutationEventOutbox.prototype.getForModel = function (storage, model) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationEventModelDefinition, mutationEvents;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        mutationEventModelDefinition = this.schema.namespaces[SYNC].models\n                            .MutationEvent;\n                        return [4 /*yield*/, storage.query(this.MutationEvent, ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) { return c.modelId('eq', model.id); }))];\n                    case 1:\n                        mutationEvents = _a.sent();\n                        return [2 /*return*/, mutationEvents];\n                }\n            });\n        });\n    };\n    return MutationEventOutbox;\n}());\nexport { MutationEventOutbox };\n//# sourceMappingURL=outbox.js.map"]},"metadata":{},"sourceType":"module"}