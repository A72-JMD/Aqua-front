{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { ConsoleLogger as Logger, Hub, Parser } from '@aws-amplify/core';\nimport AWSPinpointProvider from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\nvar dispatchAnalyticsEvent = function (event, data, message) {\n  Hub.dispatch('analytics', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Analytics', AMPLIFY_SYMBOL);\n};\nvar trackers = {\n  pageView: PageViewTracker,\n  event: EventTracker,\n  session: SessionTracker\n};\n/**\n * Provide mobile analytics client functions\n */\nvar AnalyticsClass = /** @class */function () {\n  /**\n   * Initialize Analtyics\n   * @param config - Configuration of the Analytics\n   */\n  function AnalyticsClass() {\n    this._config = {};\n    this._pluggables = [];\n    this._disabled = false;\n    this._trackers = {};\n    this.record = this.record.bind(this);\n  }\n  AnalyticsClass.prototype.getModuleName = function () {\n    return 'Analytics';\n  };\n  /**\n   * configure Analytics\n   * @param {Object} config - Configuration of the Analytics\n   */\n  AnalyticsClass.prototype.configure = function (config) {\n    var _this = this;\n    if (!config) return this._config;\n    logger.debug('configure Analytics', config);\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n    if (this._config['disabled']) {\n      this._disabled = true;\n    }\n    this._pluggables.forEach(function (pluggable) {\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !_this._config['AWSPinpoint'] ? _this._config : _this._config[pluggable.getProviderName()];\n      pluggable.configure(__assign({\n        disabled: _this._config['disabled']\n      }, providerConfig));\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSPinpointProvider());\n    }\n    // turn on the autoSessionRecord if not specified\n    if (this._config['autoSessionRecord'] === undefined) {\n      this._config['autoSessionRecord'] = true;\n    }\n    dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n    logger.debug('current configuration', this._config);\n    return this._config;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  AnalyticsClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Analytics') {\n      this._pluggables.push(pluggable);\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !this._config['AWSPinpoint'] ? this._config : this._config[pluggable.getProviderName()];\n      var config = __assign({\n        disabled: this._config['disabled']\n      }, providerConfig);\n      pluggable.configure(config);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n  AnalyticsClass.prototype.getPluggable = function (providerName) {\n    for (var i = 0; i < this._pluggables.length; i += 1) {\n      var pluggable = this._pluggables[i];\n      if (pluggable.getProviderName() === providerName) {\n        return pluggable;\n      }\n    }\n    logger.debug('No plugin found with providerName', providerName);\n    return null;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n  AnalyticsClass.prototype.removePluggable = function (providerName) {\n    var idx = 0;\n    while (idx < this._pluggables.length) {\n      if (this._pluggables[idx].getProviderName() === providerName) {\n        break;\n      }\n      idx += 1;\n    }\n    if (idx === this._pluggables.length) {\n      logger.debug('No plugin found with providerName', providerName);\n      return;\n    } else {\n      this._pluggables.splice(idx, idx + 1);\n      return;\n    }\n  };\n  /**\n   * stop sending events\n   */\n  AnalyticsClass.prototype.disable = function () {\n    this._disabled = true;\n  };\n  /**\n   * start sending events\n   */\n  AnalyticsClass.prototype.enable = function () {\n    this._disabled = false;\n  };\n  /**\n   * Record Session start\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.startSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: {\n            name: '_session.start'\n          },\n          provider: provider\n        };\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record Session stop\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.stopSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: {\n            name: '_session.stop'\n          },\n          provider: provider\n        };\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record one analytic event and send it to Pinpoint\n   * @param {String} name - The name of the event\n   * @param {Object} [attributs] - Attributes of the event\n   * @param {Object} [metrics] - Event metrics\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.record = function (event, provider, metrics) {\n    return __awaiter(this, void 0, void 0, function () {\n      var errMsg, params;\n      return __generator(this, function (_a) {\n        if (!this.isAnalyticsConfigured()) {\n          errMsg = 'Analytics has not been configured';\n          logger.debug(errMsg);\n          return [2 /*return*/, Promise.reject(new Error(errMsg))];\n        }\n        params = null;\n        // this is just for compatibility, going to be deprecated\n        if (typeof event === 'string') {\n          params = {\n            event: {\n              name: event,\n              attributes: provider,\n              metrics: metrics\n            },\n            provider: 'AWSPinpoint'\n          };\n        } else {\n          params = {\n            event: event,\n            provider: provider\n          };\n        }\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event;\n      return __generator(this, function (_a) {\n        event = __assign(__assign({}, attrs), {\n          name: '_update_endpoint'\n        });\n        return [2 /*return*/, this.record(event, provider)];\n      });\n    });\n  };\n  AnalyticsClass.prototype._sendEvent = function (params) {\n    var _this = this;\n    if (!this.isAnalyticsConfigured()) {\n      var errMsg = 'Analytics has not been configured';\n      logger.debug(errMsg);\n      return Promise.reject(new Error(errMsg));\n    }\n    if (this._disabled) {\n      logger.debug('Analytics has been disabled');\n      return Promise.resolve();\n    }\n    var provider = params.provider ? params.provider : 'AWSPinpoint';\n    return new Promise(function (resolve, reject) {\n      _this._pluggables.forEach(function (pluggable) {\n        if (pluggable.getProviderName() === provider) {\n          pluggable.record(params, {\n            resolve: resolve,\n            reject: reject\n          });\n        }\n      });\n    });\n  };\n  AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n    if (!trackers[trackerType]) {\n      logger.debug('invalid tracker type');\n      return;\n    }\n    // to sync up two different configuration ways of auto session tracking\n    if (trackerType === 'session') {\n      this._config['autoSessionRecord'] = opts['enable'];\n    }\n    var tracker = this._trackers[trackerType];\n    if (!tracker) {\n      this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n    } else {\n      tracker.configure(opts);\n    }\n  };\n  AnalyticsClass.prototype.isAnalyticsConfigured = function () {\n    return this._config && Object.entries(this._config).length > 0;\n  };\n  return AnalyticsClass;\n}();\nexport default AnalyticsClass;","map":{"version":3,"sources":["../src/Analytics.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ConsoleLogger as Logger, Hub, Parser } from '@aws-amplify/core';\nimport AWSPinpointProvider from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\n    typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchAnalyticsEvent = function (event, data, message) {\n    Hub.dispatch('analytics', { event: event, data: data, message: message }, 'Analytics', AMPLIFY_SYMBOL);\n};\nvar trackers = {\n    pageView: PageViewTracker,\n    event: EventTracker,\n    session: SessionTracker,\n};\n/**\n * Provide mobile analytics client functions\n */\nvar AnalyticsClass = /** @class */ (function () {\n    /**\n     * Initialize Analtyics\n     * @param config - Configuration of the Analytics\n     */\n    function AnalyticsClass() {\n        this._config = {};\n        this._pluggables = [];\n        this._disabled = false;\n        this._trackers = {};\n        this.record = this.record.bind(this);\n    }\n    AnalyticsClass.prototype.getModuleName = function () {\n        return 'Analytics';\n    };\n    /**\n     * configure Analytics\n     * @param {Object} config - Configuration of the Analytics\n     */\n    AnalyticsClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config;\n        logger.debug('configure Analytics', config);\n        var amplifyConfig = Parser.parseMobilehubConfig(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n        if (this._config['disabled']) {\n            this._disabled = true;\n        }\n        this._pluggables.forEach(function (pluggable) {\n            // for backward compatibility\n            var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' &&\n                !_this._config['AWSPinpoint']\n                ? _this._config\n                : _this._config[pluggable.getProviderName()];\n            pluggable.configure(__assign({ disabled: _this._config['disabled'] }, providerConfig));\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AWSPinpointProvider());\n        }\n        // turn on the autoSessionRecord if not specified\n        if (this._config['autoSessionRecord'] === undefined) {\n            this._config['autoSessionRecord'] = true;\n        }\n        dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n        logger.debug('current configuration', this._config);\n        return this._config;\n    };\n    /**\n     * add plugin into Analytics category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    AnalyticsClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Analytics') {\n            this._pluggables.push(pluggable);\n            // for backward compatibility\n            var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' &&\n                !this._config['AWSPinpoint']\n                ? this._config\n                : this._config[pluggable.getProviderName()];\n            var config = __assign({ disabled: this._config['disabled'] }, providerConfig);\n            pluggable.configure(config);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the plugin\n     */\n    AnalyticsClass.prototype.getPluggable = function (providerName) {\n        for (var i = 0; i < this._pluggables.length; i += 1) {\n            var pluggable = this._pluggables[i];\n            if (pluggable.getProviderName() === providerName) {\n                return pluggable;\n            }\n        }\n        logger.debug('No plugin found with providerName', providerName);\n        return null;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the plugin\n     */\n    AnalyticsClass.prototype.removePluggable = function (providerName) {\n        var idx = 0;\n        while (idx < this._pluggables.length) {\n            if (this._pluggables[idx].getProviderName() === providerName) {\n                break;\n            }\n            idx += 1;\n        }\n        if (idx === this._pluggables.length) {\n            logger.debug('No plugin found with providerName', providerName);\n            return;\n        }\n        else {\n            this._pluggables.splice(idx, idx + 1);\n            return;\n        }\n    };\n    /**\n     * stop sending events\n     */\n    AnalyticsClass.prototype.disable = function () {\n        this._disabled = true;\n    };\n    /**\n     * start sending events\n     */\n    AnalyticsClass.prototype.enable = function () {\n        this._disabled = false;\n    };\n    /**\n     * Record Session start\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.startSession = function (provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = { event: { name: '_session.start' }, provider: provider };\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    /**\n     * Record Session stop\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.stopSession = function (provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = { event: { name: '_session.stop' }, provider: provider };\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    /**\n     * Record one analytic event and send it to Pinpoint\n     * @param {String} name - The name of the event\n     * @param {Object} [attributs] - Attributes of the event\n     * @param {Object} [metrics] - Event metrics\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.record = function (event, provider, metrics) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errMsg, params;\n            return __generator(this, function (_a) {\n                if (!this.isAnalyticsConfigured()) {\n                    errMsg = 'Analytics has not been configured';\n                    logger.debug(errMsg);\n                    return [2 /*return*/, Promise.reject(new Error(errMsg))];\n                }\n                params = null;\n                // this is just for compatibility, going to be deprecated\n                if (typeof event === 'string') {\n                    params = {\n                        event: {\n                            name: event,\n                            attributes: provider,\n                            metrics: metrics,\n                        },\n                        provider: 'AWSPinpoint',\n                    };\n                }\n                else {\n                    params = { event: event, provider: provider };\n                }\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var event;\n            return __generator(this, function (_a) {\n                event = __assign(__assign({}, attrs), { name: '_update_endpoint' });\n                return [2 /*return*/, this.record(event, provider)];\n            });\n        });\n    };\n    AnalyticsClass.prototype._sendEvent = function (params) {\n        var _this = this;\n        if (!this.isAnalyticsConfigured()) {\n            var errMsg = 'Analytics has not been configured';\n            logger.debug(errMsg);\n            return Promise.reject(new Error(errMsg));\n        }\n        if (this._disabled) {\n            logger.debug('Analytics has been disabled');\n            return Promise.resolve();\n        }\n        var provider = params.provider ? params.provider : 'AWSPinpoint';\n        return new Promise(function (resolve, reject) {\n            _this._pluggables.forEach(function (pluggable) {\n                if (pluggable.getProviderName() === provider) {\n                    pluggable.record(params, { resolve: resolve, reject: reject });\n                }\n            });\n        });\n    };\n    AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n        if (!trackers[trackerType]) {\n            logger.debug('invalid tracker type');\n            return;\n        }\n        // to sync up two different configuration ways of auto session tracking\n        if (trackerType === 'session') {\n            this._config['autoSessionRecord'] = opts['enable'];\n        }\n        var tracker = this._trackers[trackerType];\n        if (!tracker) {\n            this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n        }\n        else {\n            tracker.configure(opts);\n        }\n    };\n    AnalyticsClass.prototype.isAnalyticsConfigured = function () {\n        return this._config && Object.entries(this._config).length > 0;\n    };\n    return AnalyticsClass;\n}());\nexport default AnalyticsClass;\n//# sourceMappingURL=Analytics.js.map"]},"metadata":{},"sourceType":"module"}