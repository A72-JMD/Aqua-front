{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { immerable, produce, setAutoFreeze } from 'immer';\nimport { v1 as uuid1, v4 as uuid4 } from 'uuid';\nimport Observable from 'zen-observable-ts';\nimport { isPredicatesAll, ModelPredicateCreator } from '../predicates';\nimport Storage from '../storage/storage';\nimport { SyncEngine } from '../sync';\nimport { GraphQLScalarType, isGraphQLScalarType } from '../types';\nimport { DATASTORE, establishRelation, exhaustiveCheck, isModelConstructor, STORAGE, SYNC, USER } from '../util';\nsetAutoFreeze(true);\nvar logger = new Logger('DataStore');\nvar SETTING_SCHEMA_VERSION = 'schemaVersion';\nvar storage;\nvar schema;\nvar modelNamespaceMap = new WeakMap();\nvar getModelDefinition = function (modelConstructor) {\n  var namespace = modelNamespaceMap.get(modelConstructor);\n  return schema.namespaces[namespace].models[modelConstructor.name];\n};\nvar isValidModelConstructor = function (obj) {\n  return isModelConstructor(obj) && modelNamespaceMap.has(obj);\n};\nvar namespaceResolver = function (modelConstructor) {\n  return modelNamespaceMap.get(modelConstructor);\n};\nvar dataStoreClasses;\nvar userClasses;\nvar syncClasses;\nvar storageClasses;\nvar initSchema = function (userSchema) {\n  var _a;\n  if (schema !== undefined) {\n    throw new Error('The schema has already been initialized');\n  }\n  logger.log('validating schema', {\n    schema: userSchema\n  });\n  var internalUserNamespace = __assign({\n    name: USER\n  }, userSchema);\n  logger.log('DataStore', 'Init models');\n  userClasses = createTypeClasses(internalUserNamespace);\n  logger.log('DataStore', 'Models initialized');\n  var dataStoreNamespace = getNamespace();\n  var storageNamespace = Storage.getNamespace();\n  var syncNamespace = SyncEngine.getNamespace();\n  dataStoreClasses = createTypeClasses(dataStoreNamespace);\n  storageClasses = createTypeClasses(storageNamespace);\n  syncClasses = createTypeClasses(syncNamespace);\n  schema = {\n    namespaces: (_a = {}, _a[dataStoreNamespace.name] = dataStoreNamespace, _a[internalUserNamespace.name] = internalUserNamespace, _a[storageNamespace.name] = storageNamespace, _a[syncNamespace.name] = syncNamespace, _a),\n    version: userSchema.version\n  };\n  Object.keys(schema.namespaces).forEach(function (namespace) {\n    schema.namespaces[namespace].relationships = establishRelation(schema.namespaces[namespace]);\n    var modelAssociations = new Map();\n    Object.values(schema.namespaces[namespace].models).forEach(function (model) {\n      var wea = [];\n      Object.values(model.fields).filter(function (field) {\n        return field.association && field.association.connectionType === 'BELONGS_TO' && field.type.model !== model.name;\n      }).forEach(function (field) {\n        return wea.push(field.type.model);\n      });\n      modelAssociations.set(model.name, wea);\n    });\n    var result = new Map();\n    var count = 1000;\n    while (true && count > 0) {\n      if (modelAssociations.size === 0) {\n        break;\n      }\n      count--;\n      if (count === 0) {\n        throw new Error('Models are not topologically sortable. Please verify your schema.');\n      }\n      for (var _i = 0, _a = Array.from(modelAssociations.keys()); _i < _a.length; _i++) {\n        var modelName = _a[_i];\n        var parents = modelAssociations.get(modelName);\n        if (parents.every(function (x) {\n          return result.has(x);\n        })) {\n          result.set(modelName, parents);\n        }\n      }\n      Array.from(result.keys()).forEach(function (x) {\n        return modelAssociations.delete(x);\n      });\n    }\n    schema.namespaces[namespace].modelTopologicalOrdering = result;\n  });\n  return userClasses;\n};\nvar createTypeClasses = function (namespace) {\n  var classes = {};\n  Object.entries(namespace.models).forEach(function (_a) {\n    var modelName = _a[0],\n      modelDefinition = _a[1];\n    var clazz = createModelClass(modelDefinition);\n    classes[modelName] = clazz;\n    modelNamespaceMap.set(clazz, namespace.name);\n  });\n  Object.entries(namespace.nonModels || {}).forEach(function (_a) {\n    var typeName = _a[0],\n      typeDefinition = _a[1];\n    var clazz = createNonModelClass(typeDefinition);\n    classes[typeName] = clazz;\n  });\n  return classes;\n};\nvar instancesMetadata = new WeakSet();\nfunction modelInstanceCreator(modelConstructor, init) {\n  instancesMetadata.add(init);\n  return new modelConstructor(init);\n}\nvar initializeInstance = function (init, modelDefinition, draft) {\n  Object.entries(init).forEach(function (_a) {\n    var k = _a[0],\n      v = _a[1];\n    var fieldDefinition = modelDefinition.fields[k];\n    if (fieldDefinition !== undefined) {\n      var type = fieldDefinition.type,\n        isRequired = fieldDefinition.isRequired,\n        name_1 = fieldDefinition.name,\n        isArray = fieldDefinition.isArray;\n      if (isRequired && (v === null || v === undefined)) {\n        throw new Error(\"Field \" + name_1 + \" is required\");\n      }\n      if (isGraphQLScalarType(type)) {\n        var jsType_1 = GraphQLScalarType.getJSType(type);\n        if (isArray) {\n          if (!Array.isArray(v)) {\n            throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \"[], \" + typeof v + \" received. \" + v);\n          }\n          if (v.some(function (e) {\n            return typeof e !== jsType_1;\n          })) {\n            var elemTypes = v.map(function (e) {\n              return typeof e;\n            }).join(',');\n            throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + jsType_1 + \", [\" + elemTypes + \"] received. \" + v);\n          }\n        } else if (typeof v !== jsType_1 && v !== null) {\n          throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \", \" + typeof v + \" received. \" + v);\n        }\n      }\n    }\n    draft[k] = v;\n  });\n};\nvar createModelClass = function (modelDefinition) {\n  var clazz = /** @class */function () {\n    function Model(init) {\n      var instance = produce(this, function (draft) {\n        initializeInstance(init, modelDefinition, draft);\n        var modelInstanceMetadata = instancesMetadata.has(init) ? init : {};\n        var _id = modelInstanceMetadata.id,\n          _version = modelInstanceMetadata._version,\n          _lastChangedAt = modelInstanceMetadata._lastChangedAt,\n          _deleted = modelInstanceMetadata._deleted;\n        var id =\n        // instancesIds is set by modelInstanceCreator, it is accessible only internally\n        _id !== null && _id !== undefined ? _id : modelDefinition.syncable ? uuid4() :\n        // Transform UUID v1 into a lexicographically sortable string for non-syncable models\n        uuid1().replace(/^(.{8})-(.{4})-(.{4})/, '$3-$2-$1');\n        draft.id = id;\n        if (modelDefinition.syncable) {\n          draft._version = _version;\n          draft._lastChangedAt = _lastChangedAt;\n          draft._deleted = _deleted;\n        }\n      });\n      return instance;\n    }\n    Model.copyOf = function (source, fn) {\n      var modelConstructor = Object.getPrototypeOf(source || {}).constructor;\n      if (!isValidModelConstructor(modelConstructor)) {\n        var msg = 'The source object is not a valid model';\n        logger.error(msg, {\n          source: source\n        });\n        throw new Error(msg);\n      }\n      return produce(source, function (draft) {\n        fn(draft);\n        draft.id = source.id;\n      });\n    };\n    return Model;\n  }();\n  clazz[immerable] = true;\n  Object.defineProperty(clazz, 'name', {\n    value: modelDefinition.name\n  });\n  return clazz;\n};\nvar createNonModelClass = function (typeDefinition) {\n  var clazz = /** @class */function () {\n    function Model(init) {\n      var instance = produce(this, function (draft) {\n        initializeInstance(init, typeDefinition, draft);\n      });\n      return instance;\n    }\n    return Model;\n  }();\n  clazz[immerable] = true;\n  Object.defineProperty(clazz, 'name', {\n    value: typeDefinition.name\n  });\n  return clazz;\n};\nvar save = function (model, condition) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var modelConstructor, msg, modelDefinition, producedCondition, savedModel;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, start()];\n        case 1:\n          _a.sent();\n          modelConstructor = model ? model.constructor : undefined;\n          if (!isValidModelConstructor(modelConstructor)) {\n            msg = 'Object is not an instance of a valid model';\n            logger.error(msg, {\n              model: model\n            });\n            throw new Error(msg);\n          }\n          modelDefinition = getModelDefinition(modelConstructor);\n          producedCondition = ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n          return [4 /*yield*/, storage.runExclusive(function (s) {\n            return __awaiter(void 0, void 0, void 0, function () {\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4 /*yield*/, s.save(model, producedCondition)];\n                  case 1:\n                    _a.sent();\n                    return [2 /*return*/, s.query(modelConstructor, ModelPredicateCreator.createForId(modelDefinition, model.id))];\n                }\n              });\n            });\n          })];\n        case 2:\n          savedModel = _a.sent()[0];\n          return [2 /*return*/, savedModel];\n      }\n    });\n  });\n};\nvar remove = function (modelOrConstructor, idOrCriteria) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var condition, msg, modelConstructor, msg, msg, deleted, model, modelConstructor, msg, modelDefinition, idPredicate, msg, deleted;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, start()];\n        case 1:\n          _a.sent();\n          if (!modelOrConstructor) {\n            msg = 'Model or Model Constructor required';\n            logger.error(msg, {\n              modelOrConstructor: modelOrConstructor\n            });\n            throw new Error(msg);\n          }\n          if (!isValidModelConstructor(modelOrConstructor)) return [3 /*break*/, 3];\n          modelConstructor = modelOrConstructor;\n          if (!idOrCriteria) {\n            msg = 'Id to delete or criteria required. Do you want to delete all? Pass Predicates.ALL';\n            logger.error(msg, {\n              idOrCriteria: idOrCriteria\n            });\n            throw new Error(msg);\n          }\n          if (typeof idOrCriteria === 'string') {\n            condition = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n          } else {\n            condition = ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor),\n            /**\n             * idOrCriteria is always a ProducerModelPredicate<T>, never a symbol.\n             * The symbol is used only for typing purposes. e.g. see Predicates.ALL\n             */\n            idOrCriteria);\n            if (!condition || !ModelPredicateCreator.isValidPredicate(condition)) {\n              msg = 'Criteria required. Do you want to delete all? Pass Predicates.ALL';\n              logger.error(msg, {\n                condition: condition\n              });\n              throw new Error(msg);\n            }\n          }\n          return [4 /*yield*/, storage.delete(modelConstructor, condition)];\n        case 2:\n          deleted = _a.sent()[0];\n          return [2 /*return*/, deleted];\n        case 3:\n          model = modelOrConstructor;\n          modelConstructor = Object.getPrototypeOf(model || {}).constructor;\n          if (!isValidModelConstructor(modelConstructor)) {\n            msg = 'Object is not an instance of a valid model';\n            logger.error(msg, {\n              model: model\n            });\n            throw new Error(msg);\n          }\n          modelDefinition = getModelDefinition(modelConstructor);\n          idPredicate = ModelPredicateCreator.createForId(modelDefinition, model.id);\n          if (idOrCriteria) {\n            if (typeof idOrCriteria !== 'function') {\n              msg = 'Invalid criteria';\n              logger.error(msg, {\n                idOrCriteria: idOrCriteria\n              });\n              throw new Error(msg);\n            }\n            condition = idOrCriteria(idPredicate);\n          } else {\n            condition = idPredicate;\n          }\n          return [4 /*yield*/, storage.delete(model, condition)];\n        case 4:\n          deleted = _a.sent()[0][0];\n          return [2 /*return*/, deleted];\n      }\n    });\n  });\n};\nvar observe = function (modelConstructor, idOrCriteria) {\n  var predicate;\n  if (idOrCriteria !== undefined && modelConstructor === undefined) {\n    var msg = 'Cannot provide criteria without a modelConstructor';\n    logger.error(msg, idOrCriteria);\n    throw new Error(msg);\n  }\n  if (modelConstructor && !isValidModelConstructor(modelConstructor)) {\n    var msg = 'Constructor is not for a valid model';\n    logger.error(msg, {\n      modelConstructor: modelConstructor\n    });\n    throw new Error(msg);\n  }\n  if (typeof idOrCriteria === 'string') {\n    predicate = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n  } else {\n    predicate = modelConstructor && ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), idOrCriteria);\n  }\n  return new Observable(function (observer) {\n    var handle;\n    (function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, start()];\n            case 1:\n              _a.sent();\n              handle = storage.observe(modelConstructor, predicate).filter(function (_a) {\n                var model = _a.model;\n                return namespaceResolver(model) === USER;\n              }).subscribe(observer);\n              return [2 /*return*/];\n          }\n        });\n      });\n    })();\n    return function () {\n      if (handle) {\n        handle.unsubscribe();\n      }\n    };\n  });\n};\nvar query = function (modelConstructor, idOrCriteria, pagination) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var msg, predicate_1, result, criteria, predicate, _a, limit, page;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4 /*yield*/, start()];\n        case 1:\n          _b.sent();\n          if (!isValidModelConstructor(modelConstructor)) {\n            msg = 'Constructor is not for a valid model';\n            logger.error(msg, {\n              modelConstructor: modelConstructor\n            });\n            throw new Error(msg);\n          }\n          if (!(typeof idOrCriteria === 'string')) return [3 /*break*/, 3];\n          if (pagination !== undefined) {\n            logger.warn('Pagination is ignored when querying by id');\n          }\n          predicate_1 = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n          return [4 /*yield*/, storage.query(modelConstructor, predicate_1)];\n        case 2:\n          result = _b.sent()[0];\n          if (result) {\n            return [2 /*return*/, result];\n          }\n          return [2 /*return*/, undefined];\n        case 3:\n          criteria = idOrCriteria;\n          predicate = !isPredicatesAll(criteria) ? ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), criteria) : undefined;\n          _a = pagination || {}, limit = _a.limit, page = _a.page;\n          if (page !== undefined && limit === undefined) {\n            throw new Error('Limit is required when requesting a page');\n          }\n          if (page !== undefined) {\n            if (typeof page !== 'number') {\n              throw new Error('Page should be a number');\n            }\n            if (page < 0) {\n              throw new Error(\"Page can't be negative\");\n            }\n          }\n          if (limit !== undefined) {\n            if (typeof limit !== 'number') {\n              throw new Error('Limit should be a number');\n            }\n            if (limit < 0) {\n              throw new Error(\"Limit can't be negative\");\n            }\n          }\n          return [2 /*return*/, storage.query(modelConstructor, predicate, pagination)];\n      }\n    });\n  });\n};\nvar sync;\nvar amplifyConfig = {};\nvar conflictHandler;\nvar errorHandler;\nvar maxRecordsToSync;\nvar syncPageSize;\nvar fullSyncInterval;\nfunction configure(config) {\n  if (config === void 0) {\n    config = {};\n  }\n  var configDataStore = config.DataStore,\n    configConflictHandler = config.conflictHandler,\n    configErrorHandler = config.errorHandler,\n    configMaxRecordsToSync = config.maxRecordsToSync,\n    configSyncPageSize = config.syncPageSize,\n    configFullSyncInterval = config.fullSyncInterval,\n    configFromAmplify = __rest(config, [\"DataStore\", \"conflictHandler\", \"errorHandler\", \"maxRecordsToSync\", \"syncPageSize\", \"fullSyncInterval\"]);\n  amplifyConfig = __assign(__assign({}, configFromAmplify), amplifyConfig);\n  conflictHandler = configDataStore && configDataStore.conflictHandler || conflictHandler || config.conflictHandler || defaultConflictHandler;\n  errorHandler = configDataStore && configDataStore.errorHandler || errorHandler || config.errorHandler || defaultErrorHandler;\n  maxRecordsToSync = configDataStore && configDataStore.maxRecordsToSync || maxRecordsToSync || config.maxRecordsToSync;\n  syncPageSize = configDataStore && configDataStore.syncPageSize || syncPageSize || config.syncPageSize;\n  fullSyncInterval = configDataStore && configDataStore.fullSyncInterval || configFullSyncInterval || config.fullSyncInterval || 24 * 60; // 1 day\n}\nfunction defaultConflictHandler(conflictData) {\n  var localModel = conflictData.localModel,\n    modelConstructor = conflictData.modelConstructor,\n    remoteModel = conflictData.remoteModel;\n  var _version = remoteModel._version;\n  return modelInstanceCreator(modelConstructor, __assign(__assign({}, localModel), {\n    _version: _version\n  }));\n}\nfunction defaultErrorHandler(error) {\n  logger.warn(error);\n}\nfunction getModelConstructorByModelName(namespaceName, modelName) {\n  var result;\n  switch (namespaceName) {\n    case DATASTORE:\n      result = dataStoreClasses[modelName];\n      break;\n    case USER:\n      result = userClasses[modelName];\n      break;\n    case SYNC:\n      result = syncClasses[modelName];\n      break;\n    case STORAGE:\n      result = storageClasses[modelName];\n      break;\n    default:\n      exhaustiveCheck(namespaceName);\n      break;\n  }\n  if (isValidModelConstructor(result)) {\n    return result;\n  } else {\n    var msg = \"Model name is not valid for namespace. modelName: \" + modelName + \", namespace: \" + namespaceName;\n    logger.error(msg);\n    throw new Error(msg);\n  }\n}\nfunction checkSchemaVersion(storage, version) {\n  return __awaiter(this, void 0, void 0, function () {\n    var Setting, modelDefinition;\n    var _this = this;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          Setting = dataStoreClasses.Setting;\n          modelDefinition = schema.namespaces[DATASTORE].models.Setting;\n          return [4 /*yield*/, storage.runExclusive(function (s) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var schemaVersionSetting, storedValue;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4 /*yield*/, s.query(Setting, ModelPredicateCreator.createFromExisting(modelDefinition, function (c) {\n                      return c.key('eq', SETTING_SCHEMA_VERSION);\n                    }))];\n                  case 1:\n                    schemaVersionSetting = _a.sent()[0];\n                    if (!(schemaVersionSetting !== undefined)) return [3 /*break*/, 4];\n                    storedValue = JSON.parse(schemaVersionSetting.value);\n                    if (!(storedValue !== version)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, s.clear(false)];\n                  case 2:\n                    _a.sent();\n                    _a.label = 3;\n                  case 3:\n                    return [3 /*break*/, 6];\n                  case 4:\n                    return [4 /*yield*/, s.save(modelInstanceCreator(Setting, {\n                      key: SETTING_SCHEMA_VERSION,\n                      value: JSON.stringify(version)\n                    }))];\n                  case 5:\n                    _a.sent();\n                    _a.label = 6;\n                  case 6:\n                    return [2 /*return*/];\n                }\n              });\n            });\n          })];\n        case 1:\n          _a.sent();\n          return [2 /*return*/];\n      }\n    });\n  });\n}\nvar syncSubscription;\nvar initResolve;\nvar initialized;\nfunction start() {\n  return __awaiter(this, void 0, void 0, function () {\n    var aws_appsync_graphqlEndpoint, fullSyncIntervalInMilliseconds;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!(initialized === undefined)) return [3 /*break*/, 1];\n          initialized = new Promise(function (res) {\n            initResolve = res;\n          });\n          return [3 /*break*/, 3];\n        case 1:\n          return [4 /*yield*/, initialized];\n        case 2:\n          _a.sent();\n          return [2 /*return*/];\n        case 3:\n          storage = new Storage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator);\n          return [4 /*yield*/, checkSchemaVersion(storage, schema.version)];\n        case 4:\n          _a.sent();\n          aws_appsync_graphqlEndpoint = amplifyConfig.aws_appsync_graphqlEndpoint;\n          if (aws_appsync_graphqlEndpoint) {\n            sync = new SyncEngine(schema, namespaceResolver, syncClasses, userClasses, storage, modelInstanceCreator, maxRecordsToSync, syncPageSize, conflictHandler, errorHandler);\n            fullSyncIntervalInMilliseconds = fullSyncInterval * 1000 * 60;\n            syncSubscription = sync.start({\n              fullSyncInterval: fullSyncIntervalInMilliseconds\n            }).subscribe({\n              error: function (err) {\n                logger.warn('Sync error', err);\n              }\n            });\n          }\n          initResolve();\n          return [2 /*return*/];\n      }\n    });\n  });\n}\nfunction clear() {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (storage === undefined) {\n            return [2 /*return*/];\n          }\n          if (syncSubscription && !syncSubscription.closed) {\n            syncSubscription.unsubscribe();\n          }\n          return [4 /*yield*/, storage.clear()];\n        case 1:\n          _a.sent();\n          initialized = undefined; // Should re-initialize when start() is called.\n          storage = undefined;\n          sync = undefined;\n          return [2 /*return*/];\n      }\n    });\n  });\n}\nfunction getNamespace() {\n  var namespace = {\n    name: DATASTORE,\n    relationships: {},\n    enums: {},\n    nonModels: {},\n    models: {\n      Setting: {\n        name: 'Setting',\n        pluralName: 'Settings',\n        syncable: false,\n        fields: {\n          id: {\n            name: 'id',\n            type: 'ID',\n            isRequired: true,\n            isArray: false\n          },\n          key: {\n            name: 'key',\n            type: 'String',\n            isRequired: true,\n            isArray: false\n          },\n          value: {\n            name: 'value',\n            type: 'String',\n            isRequired: true,\n            isArray: false\n          }\n        }\n      }\n    }\n  };\n  return namespace;\n}\nvar DataStore = /** @class */function () {\n  function DataStore() {}\n  DataStore.getModuleName = function () {\n    return 'DataStore';\n  };\n  DataStore.query = query;\n  DataStore.save = save;\n  DataStore.delete = remove;\n  DataStore.observe = observe;\n  DataStore.configure = configure;\n  DataStore.clear = clear;\n  return DataStore;\n}();\nexport { initSchema, DataStore };","map":{"version":3,"sources":["../../src/datastore/datastore.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { immerable, produce, setAutoFreeze } from 'immer';\nimport { v1 as uuid1, v4 as uuid4 } from 'uuid';\nimport Observable from 'zen-observable-ts';\nimport { isPredicatesAll, ModelPredicateCreator, } from '../predicates';\nimport Storage from '../storage/storage';\nimport { SyncEngine } from '../sync';\nimport { GraphQLScalarType, isGraphQLScalarType, } from '../types';\nimport { DATASTORE, establishRelation, exhaustiveCheck, isModelConstructor, STORAGE, SYNC, USER, } from '../util';\nsetAutoFreeze(true);\nvar logger = new Logger('DataStore');\nvar SETTING_SCHEMA_VERSION = 'schemaVersion';\nvar storage;\nvar schema;\nvar modelNamespaceMap = new WeakMap();\nvar getModelDefinition = function (modelConstructor) {\n    var namespace = modelNamespaceMap.get(modelConstructor);\n    return schema.namespaces[namespace].models[modelConstructor.name];\n};\nvar isValidModelConstructor = function (obj) {\n    return isModelConstructor(obj) && modelNamespaceMap.has(obj);\n};\nvar namespaceResolver = function (modelConstructor) {\n    return modelNamespaceMap.get(modelConstructor);\n};\nvar dataStoreClasses;\nvar userClasses;\nvar syncClasses;\nvar storageClasses;\nvar initSchema = function (userSchema) {\n    var _a;\n    if (schema !== undefined) {\n        throw new Error('The schema has already been initialized');\n    }\n    logger.log('validating schema', { schema: userSchema });\n    var internalUserNamespace = __assign({ name: USER }, userSchema);\n    logger.log('DataStore', 'Init models');\n    userClasses = createTypeClasses(internalUserNamespace);\n    logger.log('DataStore', 'Models initialized');\n    var dataStoreNamespace = getNamespace();\n    var storageNamespace = Storage.getNamespace();\n    var syncNamespace = SyncEngine.getNamespace();\n    dataStoreClasses = createTypeClasses(dataStoreNamespace);\n    storageClasses = createTypeClasses(storageNamespace);\n    syncClasses = createTypeClasses(syncNamespace);\n    schema = {\n        namespaces: (_a = {},\n            _a[dataStoreNamespace.name] = dataStoreNamespace,\n            _a[internalUserNamespace.name] = internalUserNamespace,\n            _a[storageNamespace.name] = storageNamespace,\n            _a[syncNamespace.name] = syncNamespace,\n            _a),\n        version: userSchema.version,\n    };\n    Object.keys(schema.namespaces).forEach(function (namespace) {\n        schema.namespaces[namespace].relationships = establishRelation(schema.namespaces[namespace]);\n        var modelAssociations = new Map();\n        Object.values(schema.namespaces[namespace].models).forEach(function (model) {\n            var wea = [];\n            Object.values(model.fields)\n                .filter(function (field) {\n                return field.association &&\n                    field.association.connectionType === 'BELONGS_TO' &&\n                    field.type.model !== model.name;\n            })\n                .forEach(function (field) { return wea.push(field.type.model); });\n            modelAssociations.set(model.name, wea);\n        });\n        var result = new Map();\n        var count = 1000;\n        while (true && count > 0) {\n            if (modelAssociations.size === 0) {\n                break;\n            }\n            count--;\n            if (count === 0) {\n                throw new Error('Models are not topologically sortable. Please verify your schema.');\n            }\n            for (var _i = 0, _a = Array.from(modelAssociations.keys()); _i < _a.length; _i++) {\n                var modelName = _a[_i];\n                var parents = modelAssociations.get(modelName);\n                if (parents.every(function (x) { return result.has(x); })) {\n                    result.set(modelName, parents);\n                }\n            }\n            Array.from(result.keys()).forEach(function (x) { return modelAssociations.delete(x); });\n        }\n        schema.namespaces[namespace].modelTopologicalOrdering = result;\n    });\n    return userClasses;\n};\nvar createTypeClasses = function (namespace) {\n    var classes = {};\n    Object.entries(namespace.models).forEach(function (_a) {\n        var modelName = _a[0], modelDefinition = _a[1];\n        var clazz = createModelClass(modelDefinition);\n        classes[modelName] = clazz;\n        modelNamespaceMap.set(clazz, namespace.name);\n    });\n    Object.entries(namespace.nonModels || {}).forEach(function (_a) {\n        var typeName = _a[0], typeDefinition = _a[1];\n        var clazz = createNonModelClass(typeDefinition);\n        classes[typeName] = clazz;\n    });\n    return classes;\n};\nvar instancesMetadata = new WeakSet();\nfunction modelInstanceCreator(modelConstructor, init) {\n    instancesMetadata.add(init);\n    return new modelConstructor(init);\n}\nvar initializeInstance = function (init, modelDefinition, draft) {\n    Object.entries(init).forEach(function (_a) {\n        var k = _a[0], v = _a[1];\n        var fieldDefinition = modelDefinition.fields[k];\n        if (fieldDefinition !== undefined) {\n            var type = fieldDefinition.type, isRequired = fieldDefinition.isRequired, name_1 = fieldDefinition.name, isArray = fieldDefinition.isArray;\n            if (isRequired && (v === null || v === undefined)) {\n                throw new Error(\"Field \" + name_1 + \" is required\");\n            }\n            if (isGraphQLScalarType(type)) {\n                var jsType_1 = GraphQLScalarType.getJSType(type);\n                if (isArray) {\n                    if (!Array.isArray(v)) {\n                        throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \"[], \" + typeof v + \" received. \" + v);\n                    }\n                    if (v.some(function (e) { return typeof e !== jsType_1; })) {\n                        var elemTypes = v.map(function (e) { return typeof e; }).join(',');\n                        throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + jsType_1 + \", [\" + elemTypes + \"] received. \" + v);\n                    }\n                }\n                else if (typeof v !== jsType_1 && v !== null) {\n                    throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \", \" + typeof v + \" received. \" + v);\n                }\n            }\n        }\n        draft[k] = v;\n    });\n};\nvar createModelClass = function (modelDefinition) {\n    var clazz = /** @class */ (function () {\n        function Model(init) {\n            var instance = produce(this, function (draft) {\n                initializeInstance(init, modelDefinition, draft);\n                var modelInstanceMetadata = instancesMetadata.has(init)\n                    ? init\n                    : {};\n                var _id = modelInstanceMetadata.id, _version = modelInstanceMetadata._version, _lastChangedAt = modelInstanceMetadata._lastChangedAt, _deleted = modelInstanceMetadata._deleted;\n                var id = \n                // instancesIds is set by modelInstanceCreator, it is accessible only internally\n                _id !== null && _id !== undefined\n                    ? _id\n                    : modelDefinition.syncable\n                        ? uuid4()\n                        : // Transform UUID v1 into a lexicographically sortable string for non-syncable models\n                            uuid1().replace(/^(.{8})-(.{4})-(.{4})/, '$3-$2-$1');\n                draft.id = id;\n                if (modelDefinition.syncable) {\n                    draft._version = _version;\n                    draft._lastChangedAt = _lastChangedAt;\n                    draft._deleted = _deleted;\n                }\n            });\n            return instance;\n        }\n        Model.copyOf = function (source, fn) {\n            var modelConstructor = Object.getPrototypeOf(source || {}).constructor;\n            if (!isValidModelConstructor(modelConstructor)) {\n                var msg = 'The source object is not a valid model';\n                logger.error(msg, { source: source });\n                throw new Error(msg);\n            }\n            return produce(source, function (draft) {\n                fn(draft);\n                draft.id = source.id;\n            });\n        };\n        return Model;\n    }());\n    clazz[immerable] = true;\n    Object.defineProperty(clazz, 'name', { value: modelDefinition.name });\n    return clazz;\n};\nvar createNonModelClass = function (typeDefinition) {\n    var clazz = /** @class */ (function () {\n        function Model(init) {\n            var instance = produce(this, function (draft) {\n                initializeInstance(init, typeDefinition, draft);\n            });\n            return instance;\n        }\n        return Model;\n    }());\n    clazz[immerable] = true;\n    Object.defineProperty(clazz, 'name', { value: typeDefinition.name });\n    return clazz;\n};\nvar save = function (model, condition) { return __awaiter(void 0, void 0, void 0, function () {\n    var modelConstructor, msg, modelDefinition, producedCondition, savedModel;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, start()];\n            case 1:\n                _a.sent();\n                modelConstructor = model\n                    ? model.constructor\n                    : undefined;\n                if (!isValidModelConstructor(modelConstructor)) {\n                    msg = 'Object is not an instance of a valid model';\n                    logger.error(msg, { model: model });\n                    throw new Error(msg);\n                }\n                modelDefinition = getModelDefinition(modelConstructor);\n                producedCondition = ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n                return [4 /*yield*/, storage.runExclusive(function (s) { return __awaiter(void 0, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, s.save(model, producedCondition)];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/, s.query(modelConstructor, ModelPredicateCreator.createForId(modelDefinition, model.id))];\n                            }\n                        });\n                    }); })];\n            case 2:\n                savedModel = (_a.sent())[0];\n                return [2 /*return*/, savedModel];\n        }\n    });\n}); };\nvar remove = function (modelOrConstructor, idOrCriteria) { return __awaiter(void 0, void 0, void 0, function () {\n    var condition, msg, modelConstructor, msg, msg, deleted, model, modelConstructor, msg, modelDefinition, idPredicate, msg, deleted;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, start()];\n            case 1:\n                _a.sent();\n                if (!modelOrConstructor) {\n                    msg = 'Model or Model Constructor required';\n                    logger.error(msg, { modelOrConstructor: modelOrConstructor });\n                    throw new Error(msg);\n                }\n                if (!isValidModelConstructor(modelOrConstructor)) return [3 /*break*/, 3];\n                modelConstructor = modelOrConstructor;\n                if (!idOrCriteria) {\n                    msg = 'Id to delete or criteria required. Do you want to delete all? Pass Predicates.ALL';\n                    logger.error(msg, { idOrCriteria: idOrCriteria });\n                    throw new Error(msg);\n                }\n                if (typeof idOrCriteria === 'string') {\n                    condition = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n                }\n                else {\n                    condition = ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), \n                    /**\n                     * idOrCriteria is always a ProducerModelPredicate<T>, never a symbol.\n                     * The symbol is used only for typing purposes. e.g. see Predicates.ALL\n                     */\n                    idOrCriteria);\n                    if (!condition || !ModelPredicateCreator.isValidPredicate(condition)) {\n                        msg = 'Criteria required. Do you want to delete all? Pass Predicates.ALL';\n                        logger.error(msg, { condition: condition });\n                        throw new Error(msg);\n                    }\n                }\n                return [4 /*yield*/, storage.delete(modelConstructor, condition)];\n            case 2:\n                deleted = (_a.sent())[0];\n                return [2 /*return*/, deleted];\n            case 3:\n                model = modelOrConstructor;\n                modelConstructor = Object.getPrototypeOf(model || {})\n                    .constructor;\n                if (!isValidModelConstructor(modelConstructor)) {\n                    msg = 'Object is not an instance of a valid model';\n                    logger.error(msg, { model: model });\n                    throw new Error(msg);\n                }\n                modelDefinition = getModelDefinition(modelConstructor);\n                idPredicate = ModelPredicateCreator.createForId(modelDefinition, model.id);\n                if (idOrCriteria) {\n                    if (typeof idOrCriteria !== 'function') {\n                        msg = 'Invalid criteria';\n                        logger.error(msg, { idOrCriteria: idOrCriteria });\n                        throw new Error(msg);\n                    }\n                    condition = idOrCriteria(idPredicate);\n                }\n                else {\n                    condition = idPredicate;\n                }\n                return [4 /*yield*/, storage.delete(model, condition)];\n            case 4:\n                deleted = (_a.sent())[0][0];\n                return [2 /*return*/, deleted];\n        }\n    });\n}); };\nvar observe = function (modelConstructor, idOrCriteria) {\n    var predicate;\n    if (idOrCriteria !== undefined && modelConstructor === undefined) {\n        var msg = 'Cannot provide criteria without a modelConstructor';\n        logger.error(msg, idOrCriteria);\n        throw new Error(msg);\n    }\n    if (modelConstructor && !isValidModelConstructor(modelConstructor)) {\n        var msg = 'Constructor is not for a valid model';\n        logger.error(msg, { modelConstructor: modelConstructor });\n        throw new Error(msg);\n    }\n    if (typeof idOrCriteria === 'string') {\n        predicate = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n    }\n    else {\n        predicate =\n            modelConstructor &&\n                ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), idOrCriteria);\n    }\n    return new Observable(function (observer) {\n        var handle;\n        (function () { return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, start()];\n                    case 1:\n                        _a.sent();\n                        handle = storage\n                            .observe(modelConstructor, predicate)\n                            .filter(function (_a) {\n                            var model = _a.model;\n                            return namespaceResolver(model) === USER;\n                        })\n                            .subscribe(observer);\n                        return [2 /*return*/];\n                }\n            });\n        }); })();\n        return function () {\n            if (handle) {\n                handle.unsubscribe();\n            }\n        };\n    });\n};\nvar query = function (modelConstructor, idOrCriteria, pagination) { return __awaiter(void 0, void 0, void 0, function () {\n    var msg, predicate_1, result, criteria, predicate, _a, limit, page;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, start()];\n            case 1:\n                _b.sent();\n                if (!isValidModelConstructor(modelConstructor)) {\n                    msg = 'Constructor is not for a valid model';\n                    logger.error(msg, { modelConstructor: modelConstructor });\n                    throw new Error(msg);\n                }\n                if (!(typeof idOrCriteria === 'string')) return [3 /*break*/, 3];\n                if (pagination !== undefined) {\n                    logger.warn('Pagination is ignored when querying by id');\n                }\n                predicate_1 = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n                return [4 /*yield*/, storage.query(modelConstructor, predicate_1)];\n            case 2:\n                result = (_b.sent())[0];\n                if (result) {\n                    return [2 /*return*/, result];\n                }\n                return [2 /*return*/, undefined];\n            case 3:\n                criteria = idOrCriteria;\n                predicate = !isPredicatesAll(criteria)\n                    ? ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), criteria)\n                    : undefined;\n                _a = pagination || {}, limit = _a.limit, page = _a.page;\n                if (page !== undefined && limit === undefined) {\n                    throw new Error('Limit is required when requesting a page');\n                }\n                if (page !== undefined) {\n                    if (typeof page !== 'number') {\n                        throw new Error('Page should be a number');\n                    }\n                    if (page < 0) {\n                        throw new Error(\"Page can't be negative\");\n                    }\n                }\n                if (limit !== undefined) {\n                    if (typeof limit !== 'number') {\n                        throw new Error('Limit should be a number');\n                    }\n                    if (limit < 0) {\n                        throw new Error(\"Limit can't be negative\");\n                    }\n                }\n                return [2 /*return*/, storage.query(modelConstructor, predicate, pagination)];\n        }\n    });\n}); };\nvar sync;\nvar amplifyConfig = {};\nvar conflictHandler;\nvar errorHandler;\nvar maxRecordsToSync;\nvar syncPageSize;\nvar fullSyncInterval;\nfunction configure(config) {\n    if (config === void 0) { config = {}; }\n    var configDataStore = config.DataStore, configConflictHandler = config.conflictHandler, configErrorHandler = config.errorHandler, configMaxRecordsToSync = config.maxRecordsToSync, configSyncPageSize = config.syncPageSize, configFullSyncInterval = config.fullSyncInterval, configFromAmplify = __rest(config, [\"DataStore\", \"conflictHandler\", \"errorHandler\", \"maxRecordsToSync\", \"syncPageSize\", \"fullSyncInterval\"]);\n    amplifyConfig = __assign(__assign({}, configFromAmplify), amplifyConfig);\n    conflictHandler =\n        (configDataStore && configDataStore.conflictHandler) ||\n            conflictHandler ||\n            config.conflictHandler ||\n            defaultConflictHandler;\n    errorHandler =\n        (configDataStore && configDataStore.errorHandler) ||\n            errorHandler ||\n            config.errorHandler ||\n            defaultErrorHandler;\n    maxRecordsToSync =\n        (configDataStore && configDataStore.maxRecordsToSync) ||\n            maxRecordsToSync ||\n            config.maxRecordsToSync;\n    syncPageSize =\n        (configDataStore && configDataStore.syncPageSize) ||\n            syncPageSize ||\n            config.syncPageSize;\n    fullSyncInterval =\n        (configDataStore && configDataStore.fullSyncInterval) ||\n            configFullSyncInterval ||\n            config.fullSyncInterval ||\n            24 * 60; // 1 day\n}\nfunction defaultConflictHandler(conflictData) {\n    var localModel = conflictData.localModel, modelConstructor = conflictData.modelConstructor, remoteModel = conflictData.remoteModel;\n    var _version = remoteModel._version;\n    return modelInstanceCreator(modelConstructor, __assign(__assign({}, localModel), { _version: _version }));\n}\nfunction defaultErrorHandler(error) {\n    logger.warn(error);\n}\nfunction getModelConstructorByModelName(namespaceName, modelName) {\n    var result;\n    switch (namespaceName) {\n        case DATASTORE:\n            result = dataStoreClasses[modelName];\n            break;\n        case USER:\n            result = userClasses[modelName];\n            break;\n        case SYNC:\n            result = syncClasses[modelName];\n            break;\n        case STORAGE:\n            result = storageClasses[modelName];\n            break;\n        default:\n            exhaustiveCheck(namespaceName);\n            break;\n    }\n    if (isValidModelConstructor(result)) {\n        return result;\n    }\n    else {\n        var msg = \"Model name is not valid for namespace. modelName: \" + modelName + \", namespace: \" + namespaceName;\n        logger.error(msg);\n        throw new Error(msg);\n    }\n}\nfunction checkSchemaVersion(storage, version) {\n    return __awaiter(this, void 0, void 0, function () {\n        var Setting, modelDefinition;\n        var _this = this;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    Setting = dataStoreClasses.Setting;\n                    modelDefinition = schema.namespaces[DATASTORE].models.Setting;\n                    return [4 /*yield*/, storage.runExclusive(function (s) { return __awaiter(_this, void 0, void 0, function () {\n                            var schemaVersionSetting, storedValue;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, s.query(Setting, ModelPredicateCreator.createFromExisting(modelDefinition, function (c) {\n                                            return c.key('eq', SETTING_SCHEMA_VERSION);\n                                        }))];\n                                    case 1:\n                                        schemaVersionSetting = (_a.sent())[0];\n                                        if (!(schemaVersionSetting !== undefined)) return [3 /*break*/, 4];\n                                        storedValue = JSON.parse(schemaVersionSetting.value);\n                                        if (!(storedValue !== version)) return [3 /*break*/, 3];\n                                        return [4 /*yield*/, s.clear(false)];\n                                    case 2:\n                                        _a.sent();\n                                        _a.label = 3;\n                                    case 3: return [3 /*break*/, 6];\n                                    case 4: return [4 /*yield*/, s.save(modelInstanceCreator(Setting, {\n                                            key: SETTING_SCHEMA_VERSION,\n                                            value: JSON.stringify(version),\n                                        }))];\n                                    case 5:\n                                        _a.sent();\n                                        _a.label = 6;\n                                    case 6: return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nvar syncSubscription;\nvar initResolve;\nvar initialized;\nfunction start() {\n    return __awaiter(this, void 0, void 0, function () {\n        var aws_appsync_graphqlEndpoint, fullSyncIntervalInMilliseconds;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(initialized === undefined)) return [3 /*break*/, 1];\n                    initialized = new Promise(function (res) {\n                        initResolve = res;\n                    });\n                    return [3 /*break*/, 3];\n                case 1: return [4 /*yield*/, initialized];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/];\n                case 3:\n                    storage = new Storage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator);\n                    return [4 /*yield*/, checkSchemaVersion(storage, schema.version)];\n                case 4:\n                    _a.sent();\n                    aws_appsync_graphqlEndpoint = amplifyConfig.aws_appsync_graphqlEndpoint;\n                    if (aws_appsync_graphqlEndpoint) {\n                        sync = new SyncEngine(schema, namespaceResolver, syncClasses, userClasses, storage, modelInstanceCreator, maxRecordsToSync, syncPageSize, conflictHandler, errorHandler);\n                        fullSyncIntervalInMilliseconds = fullSyncInterval * 1000 * 60;\n                        syncSubscription = sync\n                            .start({ fullSyncInterval: fullSyncIntervalInMilliseconds })\n                            .subscribe({\n                            error: function (err) {\n                                logger.warn('Sync error', err);\n                            },\n                        });\n                    }\n                    initResolve();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction clear() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (storage === undefined) {\n                        return [2 /*return*/];\n                    }\n                    if (syncSubscription && !syncSubscription.closed) {\n                        syncSubscription.unsubscribe();\n                    }\n                    return [4 /*yield*/, storage.clear()];\n                case 1:\n                    _a.sent();\n                    initialized = undefined; // Should re-initialize when start() is called.\n                    storage = undefined;\n                    sync = undefined;\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getNamespace() {\n    var namespace = {\n        name: DATASTORE,\n        relationships: {},\n        enums: {},\n        nonModels: {},\n        models: {\n            Setting: {\n                name: 'Setting',\n                pluralName: 'Settings',\n                syncable: false,\n                fields: {\n                    id: {\n                        name: 'id',\n                        type: 'ID',\n                        isRequired: true,\n                        isArray: false,\n                    },\n                    key: {\n                        name: 'key',\n                        type: 'String',\n                        isRequired: true,\n                        isArray: false,\n                    },\n                    value: {\n                        name: 'value',\n                        type: 'String',\n                        isRequired: true,\n                        isArray: false,\n                    },\n                },\n            },\n        },\n    };\n    return namespace;\n}\nvar DataStore = /** @class */ (function () {\n    function DataStore() {\n    }\n    DataStore.getModuleName = function () {\n        return 'DataStore';\n    };\n    DataStore.query = query;\n    DataStore.save = save;\n    DataStore.delete = remove;\n    DataStore.observe = observe;\n    DataStore.configure = configure;\n    DataStore.clear = clear;\n    return DataStore;\n}());\nexport { initSchema, DataStore };\n//# sourceMappingURL=datastore.js.map"]},"metadata":{},"sourceType":"module"}