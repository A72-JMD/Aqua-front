{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// import '../Common/Polyfills';\nimport * as Observable from 'zen-observable';\nimport { ConsoleLogger as Logger, INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport { AWSAppSyncProvider, AWSAppSyncRealTimeProvider } from './Providers';\nvar logger = new Logger('PubSub');\nvar PubSub = /** @class */function () {\n  /**\n   * Initialize PubSub with AWS configurations\n   *\n   * @param {PubSubOptions} options - Configuration object for PubSub\n   */\n  function PubSub(options) {\n    this._options = options;\n    logger.debug('PubSub Options', this._options);\n    this._pluggables = [];\n    this.subscribe = this.subscribe.bind(this);\n  }\n  Object.defineProperty(PubSub.prototype, \"awsAppSyncProvider\", {\n    /**\n     * Lazy instantiate AWSAppSyncProvider when it is required by the API category\n     */\n    get: function () {\n      if (!this._awsAppSyncProvider) {\n        this._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\n      }\n      return this._awsAppSyncProvider;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PubSub.prototype, \"awsAppSyncRealTimeProvider\", {\n    /**\n     * Lazy instantiate AWSAppSyncRealTimeProvider when it is required by the API category\n     */\n    get: function () {\n      if (!this._awsAppSyncRealTimeProvider) {\n        this._awsAppSyncRealTimeProvider = new AWSAppSyncRealTimeProvider(this._options);\n      }\n      return this._awsAppSyncRealTimeProvider;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PubSub.prototype.getModuleName = function () {\n    return 'PubSub';\n  };\n  /**\n   * Configure PubSub part with configurations\n   *\n   * @param {PubSubOptions} config - Configuration for PubSub\n   * @return {Object} - The current configuration\n   */\n  PubSub.prototype.configure = function (options) {\n    var _this = this;\n    var opt = options ? options.PubSub || options : {};\n    logger.debug('configure PubSub', {\n      opt: opt\n    });\n    this._options = Object.assign({}, this._options, opt);\n    this._pluggables.map(function (pluggable) {\n      return pluggable.configure(_this._options);\n    });\n    return this._options;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  PubSub.prototype.addPluggable = function (pluggable) {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        if (pluggable && pluggable.getCategory() === 'PubSub') {\n          this._pluggables.push(pluggable);\n          config = pluggable.configure(this._options);\n          return [2 /*return*/, config];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n  PubSub.prototype.getProviderByName = function (providerName) {\n    if (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n      return this.awsAppSyncProvider;\n    }\n    if (providerName === INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER) {\n      return this.awsAppSyncRealTimeProvider;\n    }\n    return this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n  };\n  PubSub.prototype.getProviders = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var providerName = options.provider;\n    if (!providerName) {\n      return this._pluggables;\n    }\n    var provider = this.getProviderByName(providerName);\n    if (!provider) {\n      throw new Error(\"Could not find provider named \" + providerName);\n    }\n    return [provider];\n  };\n  PubSub.prototype.publish = function (topics, msg, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.all(this.getProviders(options).map(function (provider) {\n          return provider.publish(topics, msg, options);\n        }))];\n      });\n    });\n  };\n  PubSub.prototype.subscribe = function (topics, options) {\n    logger.debug('subscribe options', options);\n    var providers = this.getProviders(options);\n    return new Observable(function (observer) {\n      var observables = providers.map(function (provider) {\n        return {\n          provider: provider,\n          observable: provider.subscribe(topics, options)\n        };\n      });\n      var subscriptions = observables.map(function (_a) {\n        var provider = _a.provider,\n          observable = _a.observable;\n        return observable.subscribe({\n          start: console.error,\n          next: function (value) {\n            return observer.next({\n              provider: provider,\n              value: value\n            });\n          },\n          error: function (error) {\n            return observer.error({\n              provider: provider,\n              error: error\n            });\n          }\n        });\n      });\n      return function () {\n        return subscriptions.forEach(function (subscription) {\n          return subscription.unsubscribe();\n        });\n      };\n    });\n  };\n  return PubSub;\n}();\nexport default PubSub;","map":{"version":3,"sources":["../src/PubSub.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// import '../Common/Polyfills';\nimport * as Observable from 'zen-observable';\nimport { ConsoleLogger as Logger, INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER, } from '@aws-amplify/core';\nimport { AWSAppSyncProvider, AWSAppSyncRealTimeProvider } from './Providers';\nvar logger = new Logger('PubSub');\nvar PubSub = /** @class */ (function () {\n    /**\n     * Initialize PubSub with AWS configurations\n     *\n     * @param {PubSubOptions} options - Configuration object for PubSub\n     */\n    function PubSub(options) {\n        this._options = options;\n        logger.debug('PubSub Options', this._options);\n        this._pluggables = [];\n        this.subscribe = this.subscribe.bind(this);\n    }\n    Object.defineProperty(PubSub.prototype, \"awsAppSyncProvider\", {\n        /**\n         * Lazy instantiate AWSAppSyncProvider when it is required by the API category\n         */\n        get: function () {\n            if (!this._awsAppSyncProvider) {\n                this._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\n            }\n            return this._awsAppSyncProvider;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PubSub.prototype, \"awsAppSyncRealTimeProvider\", {\n        /**\n         * Lazy instantiate AWSAppSyncRealTimeProvider when it is required by the API category\n         */\n        get: function () {\n            if (!this._awsAppSyncRealTimeProvider) {\n                this._awsAppSyncRealTimeProvider = new AWSAppSyncRealTimeProvider(this._options);\n            }\n            return this._awsAppSyncRealTimeProvider;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PubSub.prototype.getModuleName = function () {\n        return 'PubSub';\n    };\n    /**\n     * Configure PubSub part with configurations\n     *\n     * @param {PubSubOptions} config - Configuration for PubSub\n     * @return {Object} - The current configuration\n     */\n    PubSub.prototype.configure = function (options) {\n        var _this = this;\n        var opt = options ? options.PubSub || options : {};\n        logger.debug('configure PubSub', { opt: opt });\n        this._options = Object.assign({}, this._options, opt);\n        this._pluggables.map(function (pluggable) { return pluggable.configure(_this._options); });\n        return this._options;\n    };\n    /**\n     * add plugin into Analytics category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    PubSub.prototype.addPluggable = function (pluggable) {\n        return __awaiter(this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                if (pluggable && pluggable.getCategory() === 'PubSub') {\n                    this._pluggables.push(pluggable);\n                    config = pluggable.configure(this._options);\n                    return [2 /*return*/, config];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    PubSub.prototype.getProviderByName = function (providerName) {\n        if (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n            return this.awsAppSyncProvider;\n        }\n        if (providerName === INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER) {\n            return this.awsAppSyncRealTimeProvider;\n        }\n        return this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n    };\n    PubSub.prototype.getProviders = function (options) {\n        if (options === void 0) { options = {}; }\n        var providerName = options.provider;\n        if (!providerName) {\n            return this._pluggables;\n        }\n        var provider = this.getProviderByName(providerName);\n        if (!provider) {\n            throw new Error(\"Could not find provider named \" + providerName);\n        }\n        return [provider];\n    };\n    PubSub.prototype.publish = function (topics, msg, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.all(this.getProviders(options).map(function (provider) {\n                        return provider.publish(topics, msg, options);\n                    }))];\n            });\n        });\n    };\n    PubSub.prototype.subscribe = function (topics, options) {\n        logger.debug('subscribe options', options);\n        var providers = this.getProviders(options);\n        return new Observable(function (observer) {\n            var observables = providers.map(function (provider) { return ({\n                provider: provider,\n                observable: provider.subscribe(topics, options),\n            }); });\n            var subscriptions = observables.map(function (_a) {\n                var provider = _a.provider, observable = _a.observable;\n                return observable.subscribe({\n                    start: console.error,\n                    next: function (value) { return observer.next({ provider: provider, value: value }); },\n                    error: function (error) { return observer.error({ provider: provider, error: error }); },\n                });\n            });\n            return function () {\n                return subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); });\n            };\n        });\n    };\n    return PubSub;\n}());\nexport default PubSub;\n//# sourceMappingURL=PubSub.js.map"]},"metadata":{},"sourceType":"module"}