{"ast":null,"code":"import { ConsoleLogger as LoggerClass } from './Logger';\nvar logger = new LoggerClass('Amplify');\nvar Amplify = /** @class */function () {\n  function Amplify() {}\n  Amplify.register = function (comp) {\n    logger.debug('component registered in amplify', comp);\n    this._components.push(comp);\n    if (typeof comp.getModuleName === 'function') {\n      Amplify[comp.getModuleName()] = comp;\n    } else {\n      logger.debug('no getModuleName method for component', comp);\n    }\n  };\n  Amplify.configure = function (config) {\n    var _this = this;\n    if (!config) return this._config;\n    this._config = Object.assign(this._config, config);\n    logger.debug('amplify config', this._config);\n    this._components.map(function (comp) {\n      comp.configure(_this._config);\n    });\n    return this._config;\n  };\n  Amplify.addPluggable = function (pluggable) {\n    if (pluggable && pluggable['getCategory'] && typeof pluggable['getCategory'] === 'function') {\n      this._components.map(function (comp) {\n        if (comp['addPluggable'] && typeof comp['addPluggable'] === 'function') {\n          comp.addPluggable(pluggable);\n        }\n      });\n    }\n  };\n  Amplify._components = [];\n  Amplify._config = {};\n  // for backward compatibility to avoid breaking change\n  // if someone is using like Amplify.Auth\n  Amplify.Auth = null;\n  Amplify.Analytics = null;\n  Amplify.API = null;\n  Amplify.Storage = null;\n  Amplify.I18n = null;\n  Amplify.Cache = null;\n  Amplify.PubSub = null;\n  Amplify.Interactions = null;\n  Amplify.Pushnotification = null;\n  Amplify.UI = null;\n  Amplify.XR = null;\n  Amplify.Predictions = null;\n  Amplify.DataStore = null;\n  Amplify.Logger = LoggerClass;\n  Amplify.ServiceWorker = null;\n  return Amplify;\n}();\nexport default Amplify;","map":{"version":3,"sources":["../src/Amplify.ts"],"names":[],"mappings":"AAAA,SAAS,aAAa,IAAI,WAAW,QAAQ,UAAU;AAEvD,IAAM,MAAM,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC;AAEzC,IAAA,OAAA,GAAA,aAAA,YAAA;EAAA,SAAA,OAAA,CAAA,EAAA,CA6DA;EAtCQ,OAAA,CAAA,QAAQ,GAAf,UAAgB,IAAI,EAAA;IACnB,MAAM,CAAC,KAAK,CAAC,iCAAiC,EAAE,IAAI,CAAC;IACrD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;IAC3B,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,UAAU,EAAE;MAC7C,OAAO,CAAC,IAAI,CAAC,aAAa,CAAA,CAAE,CAAC,GAAG,IAAI;KACpC,MAAM;MACN,MAAM,CAAC,KAAK,CAAC,uCAAuC,EAAE,IAAI,CAAC;IAC3D;EACF,CAAC;EAEM,OAAA,CAAA,SAAS,GAAhB,UAAiB,MAAM,EAAA;IAAvB,IAAA,KAAA,GAAA,IAAA;IACC,IAAI,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,OAAO;IAEhC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;IAClD,MAAM,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC;IAC5C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAA,IAAI,EAAA;MACxB,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC;IAC7B,CAAC,CAAC;IAEF,OAAO,IAAI,CAAC,OAAO;EACpB,CAAC;EAEM,OAAA,CAAA,YAAY,GAAnB,UAAoB,SAAS,EAAA;IAC5B,IACC,SAAS,IACT,SAAS,CAAC,aAAa,CAAC,IACxB,OAAO,SAAS,CAAC,aAAa,CAAC,KAAK,UAAU,EAC7C;MACD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAA,IAAI,EAAA;QACxB,IACC,IAAI,CAAC,cAAc,CAAC,IACpB,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,UAAU,EACzC;UACD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QAC5B;MACF,CAAC,CAAC;IACF;EACF,CAAC;EA3Dc,OAAA,CAAA,WAAW,GAAG,EAAE;EAChB,OAAA,CAAA,OAAO,GAAG,CAAA,CAAE;EAE3B;EACA;EACO,OAAA,CAAA,IAAI,GAAG,IAAI;EACX,OAAA,CAAA,SAAS,GAAG,IAAI;EAChB,OAAA,CAAA,GAAG,GAAG,IAAI;EACV,OAAA,CAAA,OAAO,GAAG,IAAI;EACd,OAAA,CAAA,IAAI,GAAG,IAAI;EACX,OAAA,CAAA,KAAK,GAAG,IAAI;EACZ,OAAA,CAAA,MAAM,GAAG,IAAI;EACb,OAAA,CAAA,YAAY,GAAG,IAAI;EACnB,OAAA,CAAA,gBAAgB,GAAG,IAAI;EACvB,OAAA,CAAA,EAAE,GAAG,IAAI;EACT,OAAA,CAAA,EAAE,GAAG,IAAI;EACT,OAAA,CAAA,WAAW,GAAG,IAAI;EAClB,OAAA,CAAA,SAAS,GAAG,IAAI;EAEhB,OAAA,CAAA,MAAM,GAAG,WAAW;EACpB,OAAA,CAAA,aAAa,GAAG,IAAI;EAwC5B,OAAA,OAAC;CAAA,CAAA,CAAA;eA7DoB,OAAO","sourceRoot":"","sourcesContent":["import { ConsoleLogger as LoggerClass } from './Logger';\nvar logger = new LoggerClass('Amplify');\nvar Amplify = /** @class */ (function () {\n    function Amplify() {\n    }\n    Amplify.register = function (comp) {\n        logger.debug('component registered in amplify', comp);\n        this._components.push(comp);\n        if (typeof comp.getModuleName === 'function') {\n            Amplify[comp.getModuleName()] = comp;\n        }\n        else {\n            logger.debug('no getModuleName method for component', comp);\n        }\n    };\n    Amplify.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config;\n        this._config = Object.assign(this._config, config);\n        logger.debug('amplify config', this._config);\n        this._components.map(function (comp) {\n            comp.configure(_this._config);\n        });\n        return this._config;\n    };\n    Amplify.addPluggable = function (pluggable) {\n        if (pluggable &&\n            pluggable['getCategory'] &&\n            typeof pluggable['getCategory'] === 'function') {\n            this._components.map(function (comp) {\n                if (comp['addPluggable'] &&\n                    typeof comp['addPluggable'] === 'function') {\n                    comp.addPluggable(pluggable);\n                }\n            });\n        }\n    };\n    Amplify._components = [];\n    Amplify._config = {};\n    // for backward compatibility to avoid breaking change\n    // if someone is using like Amplify.Auth\n    Amplify.Auth = null;\n    Amplify.Analytics = null;\n    Amplify.API = null;\n    Amplify.Storage = null;\n    Amplify.I18n = null;\n    Amplify.Cache = null;\n    Amplify.PubSub = null;\n    Amplify.Interactions = null;\n    Amplify.Pushnotification = null;\n    Amplify.UI = null;\n    Amplify.XR = null;\n    Amplify.Predictions = null;\n    Amplify.DataStore = null;\n    Amplify.Logger = LoggerClass;\n    Amplify.ServiceWorker = null;\n    return Amplify;\n}());\nexport default Amplify;\n//# sourceMappingURL=Amplify.js.map"]},"metadata":{},"sourceType":"module"}